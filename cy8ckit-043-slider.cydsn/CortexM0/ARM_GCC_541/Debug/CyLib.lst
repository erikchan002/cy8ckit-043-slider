ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.90
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  75:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  76:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  77:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  78:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  79:Generated_Source\PSoC4/CyLib.c **** 
  80:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  81:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  85:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  86:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  87:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  89:Generated_Source\PSoC4/CyLib.c **** *
  90:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4500 / PSoC Analog 
  91:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
  92:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
  95:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  98:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  99:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 99 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 100:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 100 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 101:Generated_Source\PSoC4/CyLib.c **** 
 102:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 103:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 104:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 105:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 106:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 115 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 08010B40 		.word	1074462984
  47              		.cfi_endproc
  48              	.LFE1:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoDisableWcoLock
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoDisableWcoLock, %function
  56              	CySysClkImoDisableWcoLock:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 4


  57              	.LFB4:
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 121:Generated_Source\PSoC4/CyLib.c **** *
 122:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 123:Generated_Source\PSoC4/CyLib.c **** *
 124:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 125:Generated_Source\PSoC4/CyLib.c **** * PSoC 4500 / PSoC Analog Coprocessor devices, this function will also 
 126:Generated_Source\PSoC4/CyLib.c **** * disable WCO lock.
 127:Generated_Source\PSoC4/CyLib.c **** *
 128:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 129:Generated_Source\PSoC4/CyLib.c **** *
 130:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 131:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 132:Generated_Source\PSoC4/CyLib.c **** {
 133:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 134:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 135:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 136:Generated_Source\PSoC4/CyLib.c **** 
 137:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 138:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 139:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 140:Generated_Source\PSoC4/CyLib.c **** 
 141:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 142:Generated_Source\PSoC4/CyLib.c **** }
 143:Generated_Source\PSoC4/CyLib.c **** 
 144:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 147:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 148:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 149:Generated_Source\PSoC4/CyLib.c ****     *
 150:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 151:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 152:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 153:Generated_Source\PSoC4/CyLib.c ****     *
 154:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 155:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 156:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 157:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 158:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 159:Generated_Source\PSoC4/CyLib.c ****     *
 160:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 161:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 162:Generated_Source\PSoC4/CyLib.c ****     *
 163:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 164:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 165:Generated_Source\PSoC4/CyLib.c ****     *
 166:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 167:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 168:Generated_Source\PSoC4/CyLib.c ****     {
 169:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 170:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 171:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 5


 172:Generated_Source\PSoC4/CyLib.c **** 
 173:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 174:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 175:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 176:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 177:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 178:Generated_Source\PSoC4/CyLib.c **** 
 179:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 180:Generated_Source\PSoC4/CyLib.c ****         {
 181:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 182:Generated_Source\PSoC4/CyLib.c **** 
 183:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 184:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 185:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 186:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 187:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 188:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 189:Generated_Source\PSoC4/CyLib.c **** 
 190:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 191:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 192:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 193:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 194:Generated_Source\PSoC4/CyLib.c ****                 {
 195:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 196:Generated_Source\PSoC4/CyLib.c ****                     {
 197:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 198:Generated_Source\PSoC4/CyLib.c ****                         break;
 199:Generated_Source\PSoC4/CyLib.c ****                     }
 200:Generated_Source\PSoC4/CyLib.c ****                 }
 201:Generated_Source\PSoC4/CyLib.c ****             #else
 202:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 203:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 204:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 205:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 206:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 207:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 208:Generated_Source\PSoC4/CyLib.c ****                 #else
 209:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 210:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 211:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 212:Generated_Source\PSoC4/CyLib.c **** 
 213:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 214:Generated_Source\PSoC4/CyLib.c ****             
 215:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 216:Generated_Source\PSoC4/CyLib.c ****             
 217:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 218:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 219:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 220:Generated_Source\PSoC4/CyLib.c ****                 {
 221:Generated_Source\PSoC4/CyLib.c ****                      CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IM
 222:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 223:Generated_Source\PSoC4/CyLib.c ****                 }
 224:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 225:Generated_Source\PSoC4/CyLib.c **** 
 226:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 227:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 228:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 6


 229:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 230:Generated_Source\PSoC4/CyLib.c **** 
 231:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 233:Generated_Source\PSoC4/CyLib.c **** 
 234:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 235:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 238:Generated_Source\PSoC4/CyLib.c ****             
 239:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 240:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 241:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 244:Generated_Source\PSoC4/CyLib.c ****             
 245:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 248:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 249:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 250:Generated_Source\PSoC4/CyLib.c ****             }
 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 253:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 254:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 257:Generated_Source\PSoC4/CyLib.c **** 
 258:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 259:Generated_Source\PSoC4/CyLib.c ****         }
 260:Generated_Source\PSoC4/CyLib.c ****     }
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 264:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 265:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 266:Generated_Source\PSoC4/CyLib.c ****     *
 267:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 268:Generated_Source\PSoC4/CyLib.c ****     *
 269:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 270:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 271:Generated_Source\PSoC4/CyLib.c ****     *
 272:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 273:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 274:Generated_Source\PSoC4/CyLib.c ****     *
 275:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 276:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 277:Generated_Source\PSoC4/CyLib.c ****     {
  58              		.loc 1 277 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63              	.LVL0:
 278:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 279:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 7


 280:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 281:Generated_Source\PSoC4/CyLib.c **** 
 282:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 283:Generated_Source\PSoC4/CyLib.c ****         
 284:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 285:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 286:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 287:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
  64              		.loc 1 287 0
  65 0000 0023     		movs	r3, #0
  66 0002 0AE0     		b	.L5
  67              	.LVL1:
  68              	.L8:
 288:Generated_Source\PSoC4/CyLib.c ****             {
 289:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
  69              		.loc 1 289 0
  70 0004 0D4A     		ldr	r2, .L9
  71 0006 1268     		ldr	r2, [r2]
  72 0008 3F21     		movs	r1, #63
  73 000a 0A40     		ands	r2, r1
  74 000c 0C49     		ldr	r1, .L9+4
  75 000e C95C     		ldrb	r1, [r1, r3]
  76 0010 8A42     		cmp	r2, r1
  77 0012 01D1     		bne	.L6
 290:Generated_Source\PSoC4/CyLib.c ****                 {
 291:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
  78              		.loc 1 291 0
  79 0014 0333     		adds	r3, r3, #3
  80              	.LVL2:
 292:Generated_Source\PSoC4/CyLib.c ****                     break;
  81              		.loc 1 292 0
  82 0016 03E0     		b	.L7
  83              	.LVL3:
  84              	.L6:
 287:Generated_Source\PSoC4/CyLib.c ****             {
  85              		.loc 1 287 0 discriminator 2
  86 0018 0133     		adds	r3, r3, #1
  87              	.LVL4:
  88              	.L5:
 287:Generated_Source\PSoC4/CyLib.c ****             {
  89              		.loc 1 287 0 is_stmt 0 discriminator 1
  90 001a 2D2B     		cmp	r3, #45
  91 001c F2D9     		bls	.L8
 286:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
  92              		.loc 1 286 0 is_stmt 1
  93 001e 0323     		movs	r3, #3
  94              	.LVL5:
  95              	.L7:
 293:Generated_Source\PSoC4/CyLib.c ****                 }
 294:Generated_Source\PSoC4/CyLib.c ****             }
 295:Generated_Source\PSoC4/CyLib.c ****         #else
 296:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 297:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 298:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 299:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 300:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) & 
 301:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 8


 302:Generated_Source\PSoC4/CyLib.c ****             #else
 303:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 304:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 305:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 306:Generated_Source\PSoC4/CyLib.c **** 
 307:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 308:Generated_Source\PSoC4/CyLib.c **** 
 309:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  96              		.loc 1 309 0
  97 0020 0849     		ldr	r1, .L9+8
  98 0022 0868     		ldr	r0, [r1]
  99 0024 084A     		ldr	r2, .L9+12
 100 0026 0240     		ands	r2, r0
 101 0028 0A60     		str	r2, [r1]
 310:Generated_Source\PSoC4/CyLib.c ****         
 311:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 312:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 313:Generated_Source\PSoC4/CyLib.c ****         #else
 314:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 102              		.loc 1 314 0
 103 002a 084A     		ldr	r2, .L9+16
 104 002c 9446     		mov	ip, r2
 105 002e 6344     		add	r3, r3, ip
 106              	.LVL6:
 107 0030 1B78     		ldrb	r3, [r3]
 108              	.LVL7:
 109 0032 DBB2     		uxtb	r3, r3
 110 0034 064A     		ldr	r2, .L9+20
 111 0036 1360     		str	r3, [r2]
 315:Generated_Source\PSoC4/CyLib.c ****         #endif
 316:Generated_Source\PSoC4/CyLib.c ****     }
 112              		.loc 1 316 0
 113              		@ sp needed
 114 0038 7047     		bx	lr
 115              	.L10:
 116 003a C046     		.align	2
 117              	.L9:
 118 003c 2CFF0B40 		.word	1074528044
 119 0040 00000000 		.word	.LANCHOR0
 120 0044 00002240 		.word	1075970048
 121 0048 FFFFFFBF 		.word	-1073741825
 122 004c CDF1FF0F 		.word	268431821
 123 0050 28FF0B40 		.word	1074528040
 124              		.cfi_endproc
 125              	.LFE4:
 126              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 127              		.section	.text.CySysClkImoStop,"ax",%progbits
 128              		.align	2
 129              		.global	CySysClkImoStop
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysClkImoStop, %function
 133              	CySysClkImoStop:
 134              	.LFB2:
 132:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 135              		.loc 1 132 0
 136              		.cfi_startproc
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 9


 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139 0000 10B5     		push	{r4, lr}
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 4, -8
 142              		.cfi_offset 14, -4
 134:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 143              		.loc 1 134 0
 144 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 145              	.LVL8:
 141:Generated_Source\PSoC4/CyLib.c **** }
 146              		.loc 1 141 0
 147 0006 034A     		ldr	r2, .L12
 148 0008 1368     		ldr	r3, [r2]
 149 000a 5B00     		lsls	r3, r3, #1
 150 000c 5B08     		lsrs	r3, r3, #1
 151 000e 1360     		str	r3, [r2]
 142:Generated_Source\PSoC4/CyLib.c **** 
 152              		.loc 1 142 0
 153              		@ sp needed
 154 0010 10BD     		pop	{r4, pc}
 155              	.L13:
 156 0012 C046     		.align	2
 157              	.L12:
 158 0014 08010B40 		.word	1074462984
 159              		.cfi_endproc
 160              	.LFE2:
 161              		.size	CySysClkImoStop, .-CySysClkImoStop
 162              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 163              		.align	2
 164              		.global	CySysClkImoGetWcoLock
 165              		.code	16
 166              		.thumb_func
 167              		.type	CySysClkImoGetWcoLock, %function
 168              	CySysClkImoGetWcoLock:
 169              	.LFB5:
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c **** 
 319:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 320:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 321:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 322:Generated_Source\PSoC4/CyLib.c ****     *
 323:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 324:Generated_Source\PSoC4/CyLib.c ****     *
 325:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 326:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 327:Generated_Source\PSoC4/CyLib.c ****     *
 328:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 329:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 330:Generated_Source\PSoC4/CyLib.c ****     *
 331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 332:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 333:Generated_Source\PSoC4/CyLib.c ****     {
 170              		.loc 1 333 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 10


 174              		@ link register save eliminated.
 334:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 175              		.loc 1 334 0
 176 0000 034B     		ldr	r3, .L16
 177 0002 1868     		ldr	r0, [r3]
 178 0004 8023     		movs	r3, #128
 179 0006 DB05     		lsls	r3, r3, #23
 180 0008 1840     		ands	r0, r3
 335:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 181              		.loc 1 335 0
 182 000a 00D0     		beq	.L15
 183 000c 0120     		movs	r0, #1
 184              	.L15:
 336:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 337:Generated_Source\PSoC4/CyLib.c ****     }
 185              		.loc 1 337 0
 186              		@ sp needed
 187 000e 7047     		bx	lr
 188              	.L17:
 189              		.align	2
 190              	.L16:
 191 0010 00002240 		.word	1075970048
 192              		.cfi_endproc
 193              	.LFE5:
 194              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 195              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 196              		.align	2
 197              		.global	CySysClkWriteHfclkDirect
 198              		.code	16
 199              		.thumb_func
 200              		.type	CySysClkWriteHfclkDirect, %function
 201              	CySysClkWriteHfclkDirect:
 202              	.LFB6:
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c **** 
 342:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 343:Generated_Source\PSoC4/CyLib.c **** 
 344:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 345:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 346:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 347:Generated_Source\PSoC4/CyLib.c ****     *
 348:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 349:Generated_Source\PSoC4/CyLib.c ****     *
 350:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 351:Generated_Source\PSoC4/CyLib.c ****     *
 352:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 353:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 354:Generated_Source\PSoC4/CyLib.c ****     *
 355:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 356:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 357:Generated_Source\PSoC4/CyLib.c ****     *
 358:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 359:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 360:Generated_Source\PSoC4/CyLib.c ****     {
 361:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 11


 362:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 363:Generated_Source\PSoC4/CyLib.c ****             
 364:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 365:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 366:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 367:Generated_Source\PSoC4/CyLib.c **** 
 368:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 369:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 370:Generated_Source\PSoC4/CyLib.c **** 
 371:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 372:Generated_Source\PSoC4/CyLib.c ****             {
 373:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 374:Generated_Source\PSoC4/CyLib.c ****                 {
 375:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 376:Generated_Source\PSoC4/CyLib.c ****                     break;
 377:Generated_Source\PSoC4/CyLib.c ****                 }
 378:Generated_Source\PSoC4/CyLib.c ****             }
 379:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 380:Generated_Source\PSoC4/CyLib.c ****         
 381:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 382:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 383:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 384:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 385:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 386:Generated_Source\PSoC4/CyLib.c **** 
 387:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 388:Generated_Source\PSoC4/CyLib.c ****            
 389:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 390:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 391:Generated_Source\PSoC4/CyLib.c ****             
 392:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 393:Generated_Source\PSoC4/CyLib.c ****             {
 394:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 395:Generated_Source\PSoC4/CyLib.c ****                 
 396:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 397:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 398:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 399:Generated_Source\PSoC4/CyLib.c ****                 
 400:Generated_Source\PSoC4/CyLib.c ****             }
 401:Generated_Source\PSoC4/CyLib.c ****             else
 402:Generated_Source\PSoC4/CyLib.c ****             {
 403:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 404:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 405:Generated_Source\PSoC4/CyLib.c **** 
 406:Generated_Source\PSoC4/CyLib.c ****             }
 407:Generated_Source\PSoC4/CyLib.c **** 
 408:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 409:Generated_Source\PSoC4/CyLib.c ****             {
 410:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 411:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 412:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 413:Generated_Source\PSoC4/CyLib.c ****             }
 414:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 415:Generated_Source\PSoC4/CyLib.c ****             {
 416:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 417:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 418:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 12


 419:Generated_Source\PSoC4/CyLib.c ****             }
 420:Generated_Source\PSoC4/CyLib.c ****             else
 421:Generated_Source\PSoC4/CyLib.c ****             {
 422:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 423:Generated_Source\PSoC4/CyLib.c ****             }
 424:Generated_Source\PSoC4/CyLib.c ****             
 425:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 426:Generated_Source\PSoC4/CyLib.c **** 
 427:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 428:Generated_Source\PSoC4/CyLib.c ****     }
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c **** 
 431:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 432:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 433:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 434:Generated_Source\PSoC4/CyLib.c ****     *
 435:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 436:Generated_Source\PSoC4/CyLib.c ****     *
 437:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 438:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 439:Generated_Source\PSoC4/CyLib.c ****     *
 440:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 441:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 442:Generated_Source\PSoC4/CyLib.c ****     *
 443:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 444:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 445:Generated_Source\PSoC4/CyLib.c ****     {
 446:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 447:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 448:Generated_Source\PSoC4/CyLib.c ****             
 449:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 450:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 451:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 454:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 457:Generated_Source\PSoC4/CyLib.c ****             {
 458:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 459:Generated_Source\PSoC4/CyLib.c ****                 {
 460:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 461:Generated_Source\PSoC4/CyLib.c ****                     break;
 462:Generated_Source\PSoC4/CyLib.c ****                 }
 463:Generated_Source\PSoC4/CyLib.c ****             }           
 464:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 465:Generated_Source\PSoC4/CyLib.c ****         
 466:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 467:Generated_Source\PSoC4/CyLib.c **** 
 468:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 469:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 470:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 471:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 472:Generated_Source\PSoC4/CyLib.c **** 
 473:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 474:Generated_Source\PSoC4/CyLib.c ****             {
 475:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 13


 476:Generated_Source\PSoC4/CyLib.c ****             }
 477:Generated_Source\PSoC4/CyLib.c ****             
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 479:Generated_Source\PSoC4/CyLib.c ****             
 480:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 481:Generated_Source\PSoC4/CyLib.c ****     }
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c **** 
 484:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 485:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 486:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 487:Generated_Source\PSoC4/CyLib.c ****     *
 488:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 489:Generated_Source\PSoC4/CyLib.c ****     *
 490:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 491:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 492:Generated_Source\PSoC4/CyLib.c ****     *
 493:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 494:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 495:Generated_Source\PSoC4/CyLib.c ****     *
 496:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 497:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 498:Generated_Source\PSoC4/CyLib.c ****     {
 499:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 500:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 501:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 502:Generated_Source\PSoC4/CyLib.c ****     }
 503:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 504:Generated_Source\PSoC4/CyLib.c **** 
 505:Generated_Source\PSoC4/CyLib.c **** 
 506:Generated_Source\PSoC4/CyLib.c **** 
 507:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 508:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 509:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 510:Generated_Source\PSoC4/CyLib.c **** *
 511:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 512:Generated_Source\PSoC4/CyLib.c **** *
 513:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 514:Generated_Source\PSoC4/CyLib.c **** *
 515:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 516:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 517:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 518:Generated_Source\PSoC4/CyLib.c **** *
 519:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 520:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 521:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 522:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 523:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 524:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 525:Generated_Source\PSoC4/CyLib.c **** *
 526:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 527:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 528:Generated_Source\PSoC4/CyLib.c **** *
 529:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 530:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 531:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 532:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 14


 533:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 534:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with ECO.
 535:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 536:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with PLL.
 537:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 538:Generated_Source\PSoC4/CyLib.c **** *
 539:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 540:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 541:Generated_Source\PSoC4/CyLib.c **** {
 203              		.loc 1 541 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              	.LVL9:
 208 0000 10B5     		push	{r4, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 4, -8
 211              		.cfi_offset 14, -4
 212 0002 0400     		movs	r4, r0
 542:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 543:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 544:Generated_Source\PSoC4/CyLib.c ****     
 545:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 546:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 547:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 548:Generated_Source\PSoC4/CyLib.c **** 
 549:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 213              		.loc 1 549 0
 214 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 215              	.LVL10:
 550:Generated_Source\PSoC4/CyLib.c **** 
 551:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 552:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 553:Generated_Source\PSoC4/CyLib.c ****     {
 554:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 555:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 556:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;
 557:Generated_Source\PSoC4/CyLib.c ****         
 558:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 559:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 560:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 561:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 562:Generated_Source\PSoC4/CyLib.c ****         
 563:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 564:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 565:Generated_Source\PSoC4/CyLib.c ****         
 566:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 567:Generated_Source\PSoC4/CyLib.c ****         {
 568:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 569:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 570:Generated_Source\PSoC4/CyLib.c ****         }
 571:Generated_Source\PSoC4/CyLib.c ****         
 572:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 573:Generated_Source\PSoC4/CyLib.c ****     }
 574:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 15


 216              		.loc 1 576 0
 217 0008 044A     		ldr	r2, .L19
 218 000a 1368     		ldr	r3, [r2]
 219 000c 0721     		movs	r1, #7
 220 000e 8B43     		bics	r3, r1
 221              	.LVL11:
 577:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 580:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 581:Generated_Source\PSoC4/CyLib.c ****     {
 582:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 583:Generated_Source\PSoC4/CyLib.c ****     }
 584:Generated_Source\PSoC4/CyLib.c ****     else
 585:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 586:Generated_Source\PSoC4/CyLib.c ****     {
 587:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 222              		.loc 1 587 0
 223 0010 0C40     		ands	r4, r1
 224              	.LVL12:
 225 0012 1C43     		orrs	r4, r3
 226              	.LVL13:
 588:Generated_Source\PSoC4/CyLib.c ****     }   
 589:Generated_Source\PSoC4/CyLib.c ****     
 590:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 227              		.loc 1 590 0
 228 0014 1460     		str	r4, [r2]
 591:Generated_Source\PSoC4/CyLib.c ****     
 592:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 229              		.loc 1 592 0
 230 0016 FFF7FEFF 		bl	CyExitCriticalSection
 231              	.LVL14:
 593:Generated_Source\PSoC4/CyLib.c **** }
 232              		.loc 1 593 0
 233              		@ sp needed
 234              	.LVL15:
 235 001a 10BD     		pop	{r4, pc}
 236              	.L20:
 237              		.align	2
 238              	.L19:
 239 001c 00010B40 		.word	1074462976
 240              		.cfi_endproc
 241              	.LFE6:
 242              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 243              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 244              		.align	2
 245              		.global	CySysEnablePumpClock
 246              		.code	16
 247              		.thumb_func
 248              		.type	CySysEnablePumpClock, %function
 249              	CySysEnablePumpClock:
 250              	.LFB7:
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** 
 596:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 597:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 598:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 16


 599:Generated_Source\PSoC4/CyLib.c **** *
 600:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 603:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 604:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 605:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 606:Generated_Source\PSoC4/CyLib.c **** *
 607:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 608:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 609:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 610:Generated_Source\PSoC4/CyLib.c **** *
 611:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 612:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 613:Generated_Source\PSoC4/CyLib.c **** {
 251              		.loc 1 613 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              		@ link register save eliminated.
 256              	.LVL16:
 614:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 615:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 257              		.loc 1 615 0
 258 0000 C307     		lsls	r3, r0, #31
 259 0002 07D5     		bpl	.L22
 616:Generated_Source\PSoC4/CyLib.c ****         {
 617:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 260              		.loc 1 617 0
 261 0004 094A     		ldr	r2, .L24
 262 0006 1168     		ldr	r1, [r2]
 263 0008 094B     		ldr	r3, .L24+4
 264 000a 1B68     		ldr	r3, [r3]
 265 000c 5B06     		lsls	r3, r3, #25
 266 000e 0B43     		orrs	r3, r1
 267 0010 1360     		str	r3, [r2]
 268 0012 0AE0     		b	.L21
 269              	.L22:
 618:Generated_Source\PSoC4/CyLib.c ****         }
 619:Generated_Source\PSoC4/CyLib.c ****         else
 620:Generated_Source\PSoC4/CyLib.c ****         {
 621:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 270              		.loc 1 621 0
 271 0014 054A     		ldr	r2, .L24
 272 0016 1368     		ldr	r3, [r2]
 273 0018 5B0E     		lsrs	r3, r3, #25
 274 001a 0721     		movs	r1, #7
 275 001c 0B40     		ands	r3, r1
 276 001e 0449     		ldr	r1, .L24+4
 277 0020 0B60     		str	r3, [r1]
 622:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 623:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 278              		.loc 1 623 0
 279 0022 1168     		ldr	r1, [r2]
 280 0024 034B     		ldr	r3, .L24+8
 281 0026 0B40     		ands	r3, r1
 282 0028 1360     		str	r3, [r2]
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 17


 283              	.L21:
 624:Generated_Source\PSoC4/CyLib.c ****         }
 625:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 626:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 627:Generated_Source\PSoC4/CyLib.c ****         {
 628:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 629:Generated_Source\PSoC4/CyLib.c ****         }
 630:Generated_Source\PSoC4/CyLib.c ****         else
 631:Generated_Source\PSoC4/CyLib.c ****         {
 632:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 633:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 634:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 635:Generated_Source\PSoC4/CyLib.c ****         }
 636:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 637:Generated_Source\PSoC4/CyLib.c **** }
 284              		.loc 1 637 0
 285              		@ sp needed
 286 002a 7047     		bx	lr
 287              	.L25:
 288              		.align	2
 289              	.L24:
 290 002c 08010B40 		.word	1074462984
 291 0030 00000000 		.word	.LANCHOR1
 292 0034 FFFFFFF1 		.word	-234881025
 293              		.cfi_endproc
 294              	.LFE7:
 295              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 296              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 297              		.align	2
 298              		.global	CySysClkGetSysclkSource
 299              		.code	16
 300              		.thumb_func
 301              		.type	CySysClkGetSysclkSource, %function
 302              	CySysClkGetSysclkSource:
 303              	.LFB8:
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 643:Generated_Source\PSoC4/CyLib.c **** *
 644:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 645:Generated_Source\PSoC4/CyLib.c **** *
 646:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 647:Generated_Source\PSoC4/CyLib.c **** *
 648:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 650:Generated_Source\PSoC4/CyLib.c **** {
 304              		.loc 1 650 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308 0000 10B5     		push	{r4, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 4, -8
 311              		.cfi_offset 14, -4
 651:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 18


 652:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 653:Generated_Source\PSoC4/CyLib.c **** 
 654:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 312              		.loc 1 654 0
 313 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 314              	.LVL17:
 655:Generated_Source\PSoC4/CyLib.c **** 
 656:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 657:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 658:Generated_Source\PSoC4/CyLib.c ****     {
 659:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 660:Generated_Source\PSoC4/CyLib.c ****     }
 661:Generated_Source\PSoC4/CyLib.c ****     else
 662:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 663:Generated_Source\PSoC4/CyLib.c ****     {
 664:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 315              		.loc 1 664 0
 316 0006 044B     		ldr	r3, .L27
 317 0008 1B68     		ldr	r3, [r3]
 318 000a 0724     		movs	r4, #7
 319 000c 1C40     		ands	r4, r3
 320              	.LVL18:
 665:Generated_Source\PSoC4/CyLib.c **** 
 666:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 667:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 668:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 669:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 670:Generated_Source\PSoC4/CyLib.c ****         
 671:Generated_Source\PSoC4/CyLib.c ****     }
 672:Generated_Source\PSoC4/CyLib.c **** 
 673:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 321              		.loc 1 673 0
 322 000e FFF7FEFF 		bl	CyExitCriticalSection
 323              	.LVL19:
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 676:Generated_Source\PSoC4/CyLib.c **** }
 324              		.loc 1 676 0
 325 0012 2000     		movs	r0, r4
 326              		@ sp needed
 327              	.LVL20:
 328 0014 10BD     		pop	{r4, pc}
 329              	.L28:
 330 0016 C046     		.align	2
 331              	.L27:
 332 0018 00010B40 		.word	1074462976
 333              		.cfi_endproc
 334              	.LFE8:
 335              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 336              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 337              		.align	2
 338              		.global	CySysClkWriteSysclkDiv
 339              		.code	16
 340              		.thumb_func
 341              		.type	CySysClkWriteSysclkDiv, %function
 342              	CySysClkWriteSysclkDiv:
 343              	.LFB9:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 19


 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c **** 
 679:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 680:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 681:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 682:Generated_Source\PSoC4/CyLib.c **** *
 683:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 684:Generated_Source\PSoC4/CyLib.c **** *
 685:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 686:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 687:Generated_Source\PSoC4/CyLib.c **** *
 688:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 689:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 690:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 691:Generated_Source\PSoC4/CyLib.c **** *
 692:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 693:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 694:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 695:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 696:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 697:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 698:Generated_Source\PSoC4/CyLib.c **** *
 699:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 700:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 701:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 702:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 703:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 704:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 705:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 706:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 707:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 708:Generated_Source\PSoC4/CyLib.c **** *
 709:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 710:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 711:Generated_Source\PSoC4/CyLib.c **** {
 344              		.loc 1 711 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              	.LVL21:
 349 0000 10B5     		push	{r4, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 4, -8
 352              		.cfi_offset 14, -4
 353 0002 0400     		movs	r4, r0
 712:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 713:Generated_Source\PSoC4/CyLib.c **** 
 714:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 354              		.loc 1 714 0
 355 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 356              	.LVL22:
 715:Generated_Source\PSoC4/CyLib.c **** 
 716:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 357              		.loc 1 716 0
 358 0008 E304     		lsls	r3, r4, #19
 359 000a E022     		movs	r2, #224
 360 000c 9203     		lsls	r2, r2, #14
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 20


 361 000e 1340     		ands	r3, r2
 362 0010 1900     		movs	r1, r3
 717:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 718:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 363              		.loc 1 718 0
 364 0012 054C     		ldr	r4, .L30
 365              	.LVL23:
 366 0014 2368     		ldr	r3, [r4]
 367 0016 054A     		ldr	r2, .L30+4
 368 0018 1A40     		ands	r2, r3
 717:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 369              		.loc 1 717 0
 370 001a 0B00     		movs	r3, r1
 371 001c 1343     		orrs	r3, r2
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 372              		.loc 1 716 0
 373 001e 2360     		str	r3, [r4]
 719:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 720:Generated_Source\PSoC4/CyLib.c **** 
 721:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 374              		.loc 1 721 0
 375 0020 FFF7FEFF 		bl	CyExitCriticalSection
 376              	.LVL24:
 722:Generated_Source\PSoC4/CyLib.c **** }
 377              		.loc 1 722 0
 378              		@ sp needed
 379 0024 10BD     		pop	{r4, pc}
 380              	.L31:
 381 0026 C046     		.align	2
 382              	.L30:
 383 0028 00010B40 		.word	1074462976
 384 002c FFFFC7FF 		.word	-3670017
 385              		.cfi_endproc
 386              	.LFE9:
 387              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 388              		.section	.text.CySysLvdDisable,"ax",%progbits
 389              		.align	2
 390              		.global	CySysLvdDisable
 391              		.code	16
 392              		.thumb_func
 393              		.type	CySysLvdDisable, %function
 394              	CySysLvdDisable:
 395              	.LFB12:
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 726:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 727:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 728:Generated_Source\PSoC4/CyLib.c **** *
 729:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 730:Generated_Source\PSoC4/CyLib.c **** *
 731:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 732:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 735:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 736:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 21


 737:Generated_Source\PSoC4/CyLib.c **** *
 738:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 739:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 740:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 741:Generated_Source\PSoC4/CyLib.c **** *
 742:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 743:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 744:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 745:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 746:Generated_Source\PSoC4/CyLib.c **** *
 747:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 748:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 749:Generated_Source\PSoC4/CyLib.c **** *
 750:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 751:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 752:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 753:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 754:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 755:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 756:Generated_Source\PSoC4/CyLib.c **** *
 757:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 758:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 759:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 760:Generated_Source\PSoC4/CyLib.c **** *
 761:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 762:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 763:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 764:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 765:Generated_Source\PSoC4/CyLib.c **** *
 766:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 767:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 768:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 769:Generated_Source\PSoC4/CyLib.c ****     {
 770:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 771:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 772:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 773:Generated_Source\PSoC4/CyLib.c ****         #else
 774:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 775:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 776:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 777:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 778:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 779:Generated_Source\PSoC4/CyLib.c **** 
 780:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 781:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 782:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 783:Generated_Source\PSoC4/CyLib.c **** 
 784:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 785:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 786:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 789:Generated_Source\PSoC4/CyLib.c **** 
 790:Generated_Source\PSoC4/CyLib.c **** 
 791:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 792:Generated_Source\PSoC4/CyLib.c **** 
 793:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 22


 794:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 797:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 798:Generated_Source\PSoC4/CyLib.c ****             }
 799:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 800:Generated_Source\PSoC4/CyLib.c **** 
 801:Generated_Source\PSoC4/CyLib.c **** 
 802:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 803:Generated_Source\PSoC4/CyLib.c **** 
 804:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 805:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 806:Generated_Source\PSoC4/CyLib.c ****                 {
 807:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 810:Generated_Source\PSoC4/CyLib.c ****                 {
 811:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 812:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 813:Generated_Source\PSoC4/CyLib.c ****                 }
 814:Generated_Source\PSoC4/CyLib.c **** 
 815:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 816:Generated_Source\PSoC4/CyLib.c ****                 }
 817:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 818:Generated_Source\PSoC4/CyLib.c **** 
 819:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 820:Generated_Source\PSoC4/CyLib.c **** 
 821:Generated_Source\PSoC4/CyLib.c **** 
 822:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 823:Generated_Source\PSoC4/CyLib.c **** 
 824:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 825:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 826:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 827:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 828:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 829:Generated_Source\PSoC4/CyLib.c **** 
 830:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 831:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 832:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 833:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 834:Generated_Source\PSoC4/CyLib.c **** 
 835:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 836:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 837:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 838:Generated_Source\PSoC4/CyLib.c **** 
 839:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 842:Generated_Source\PSoC4/CyLib.c ****         {
 843:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 844:Generated_Source\PSoC4/CyLib.c ****             {
 845:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 846:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 847:Generated_Source\PSoC4/CyLib.c ****             }
 848:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 849:Generated_Source\PSoC4/CyLib.c ****             {
 850:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 23


 851:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 852:Generated_Source\PSoC4/CyLib.c ****             }
 853:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 854:Generated_Source\PSoC4/CyLib.c ****             {
 855:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 856:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 857:Generated_Source\PSoC4/CyLib.c ****             }
 858:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 859:Generated_Source\PSoC4/CyLib.c ****             {
 860:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 861:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 862:Generated_Source\PSoC4/CyLib.c ****             }
 863:Generated_Source\PSoC4/CyLib.c ****             else
 864:Generated_Source\PSoC4/CyLib.c ****             {
 865:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 866:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 867:Generated_Source\PSoC4/CyLib.c ****             }
 868:Generated_Source\PSoC4/CyLib.c **** 
 869:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 870:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c **** 
 873:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 874:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 875:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 876:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 877:Generated_Source\PSoC4/CyLib.c ****             *
 878:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 879:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 880:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 881:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 882:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 883:Generated_Source\PSoC4/CyLib.c ****             {
 884:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 885:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 886:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 887:Generated_Source\PSoC4/CyLib.c **** 
 888:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 889:Generated_Source\PSoC4/CyLib.c **** 
 890:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 891:Generated_Source\PSoC4/CyLib.c ****             }
 892:Generated_Source\PSoC4/CyLib.c ****             else
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 895:Generated_Source\PSoC4/CyLib.c ****             }
 896:Generated_Source\PSoC4/CyLib.c **** 
 897:Generated_Source\PSoC4/CyLib.c **** 
 898:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 899:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 900:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 901:Generated_Source\PSoC4/CyLib.c ****             *
 902:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 903:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 904:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 905:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 906:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 907:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 24


 908:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 909:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 910:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 914:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 915:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 916:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 917:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 920:Generated_Source\PSoC4/CyLib.c ****             {
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 923:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 924:Generated_Source\PSoC4/CyLib.c ****             }
 925:Generated_Source\PSoC4/CyLib.c ****         }
 926:Generated_Source\PSoC4/CyLib.c ****         else
 927:Generated_Source\PSoC4/CyLib.c ****         {
 928:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 929:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 930:Generated_Source\PSoC4/CyLib.c ****         }
 931:Generated_Source\PSoC4/CyLib.c **** 
 932:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 933:Generated_Source\PSoC4/CyLib.c **** 
 934:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 935:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 936:Generated_Source\PSoC4/CyLib.c ****             {
 937:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 938:Generated_Source\PSoC4/CyLib.c ****             }
 939:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 940:Generated_Source\PSoC4/CyLib.c **** 
 941:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 942:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 943:Generated_Source\PSoC4/CyLib.c ****             {
 944:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 945:Generated_Source\PSoC4/CyLib.c ****             }
 946:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 947:Generated_Source\PSoC4/CyLib.c **** 
 948:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #else
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 954:Generated_Source\PSoC4/CyLib.c ****     {
 955:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 956:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 957:Generated_Source\PSoC4/CyLib.c **** 
 958:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 959:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 960:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 961:Generated_Source\PSoC4/CyLib.c ****         
 962:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 963:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 964:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 25


 965:Generated_Source\PSoC4/CyLib.c **** 
 966:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 967:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 968:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 969:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 970:Generated_Source\PSoC4/CyLib.c ****         #else
 971:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 972:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 973:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 974:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 975:Generated_Source\PSoC4/CyLib.c ****         {
 976:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 977:Generated_Source\PSoC4/CyLib.c **** 
 978:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 979:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 980:Generated_Source\PSoC4/CyLib.c ****                 {
 981:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 982:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 983:Generated_Source\PSoC4/CyLib.c ****                 }
 984:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 985:Generated_Source\PSoC4/CyLib.c **** 
 986:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 987:Generated_Source\PSoC4/CyLib.c **** 
 988:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 989:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 990:Generated_Source\PSoC4/CyLib.c ****                     {
 991:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 992:Generated_Source\PSoC4/CyLib.c **** 
 993:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 994:Generated_Source\PSoC4/CyLib.c ****                     {
 995:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 996:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 997:Generated_Source\PSoC4/CyLib.c ****                     }
 998:Generated_Source\PSoC4/CyLib.c **** 
 999:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1000:Generated_Source\PSoC4/CyLib.c ****                     }
1001:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1002:Generated_Source\PSoC4/CyLib.c **** 
1003:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c **** 
1006:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1007:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c **** 
1010:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1011:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1012:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1013:Generated_Source\PSoC4/CyLib.c ****                 {
1014:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1015:Generated_Source\PSoC4/CyLib.c ****                 }
1016:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1017:Generated_Source\PSoC4/CyLib.c ****                 {
1018:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1019:Generated_Source\PSoC4/CyLib.c ****                 }
1020:Generated_Source\PSoC4/CyLib.c ****                 else
1021:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 26


1022:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1023:Generated_Source\PSoC4/CyLib.c ****                 }
1024:Generated_Source\PSoC4/CyLib.c ****             #else
1025:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1026:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1027:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1028:Generated_Source\PSoC4/CyLib.c **** 
1029:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1030:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1031:Generated_Source\PSoC4/CyLib.c **** 
1032:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1034:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1035:Generated_Source\PSoC4/CyLib.c **** 
1036:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1039:Generated_Source\PSoC4/CyLib.c ****             {
1040:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1041:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1042:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1043:Generated_Source\PSoC4/CyLib.c **** 
1044:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1045:Generated_Source\PSoC4/CyLib.c **** 
1046:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1047:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1048:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1049:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1050:Generated_Source\PSoC4/CyLib.c ****             }
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1053:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1054:Generated_Source\PSoC4/CyLib.c ****                 {
1055:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1056:Generated_Source\PSoC4/CyLib.c ****                 }
1057:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1058:Generated_Source\PSoC4/CyLib.c ****         
1059:Generated_Source\PSoC4/CyLib.c ****         
1060:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1061:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1062:Generated_Source\PSoC4/CyLib.c ****                 {
1063:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1064:Generated_Source\PSoC4/CyLib.c ****                 }
1065:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1066:Generated_Source\PSoC4/CyLib.c **** 
1067:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1068:Generated_Source\PSoC4/CyLib.c ****         }
1069:Generated_Source\PSoC4/CyLib.c ****         else
1070:Generated_Source\PSoC4/CyLib.c ****         {
1071:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1072:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1073:Generated_Source\PSoC4/CyLib.c ****         }
1074:Generated_Source\PSoC4/CyLib.c ****     }
1075:Generated_Source\PSoC4/CyLib.c **** 
1076:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 27


1079:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1080:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1081:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1082:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1083:Generated_Source\PSoC4/CyLib.c ****     *
1084:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1085:Generated_Source\PSoC4/CyLib.c ****     *
1086:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1087:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1088:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1089:Generated_Source\PSoC4/CyLib.c ****     *
1090:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1091:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1092:Generated_Source\PSoC4/CyLib.c ****     *
1093:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1094:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1095:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1096:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1097:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1098:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1099:Generated_Source\PSoC4/CyLib.c ****     *
1100:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1101:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1102:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1103:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1104:Generated_Source\PSoC4/CyLib.c ****     *
1105:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1106:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1107:Generated_Source\PSoC4/CyLib.c ****     {
1108:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1111:Generated_Source\PSoC4/CyLib.c **** 
1112:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1113:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1114:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1115:Generated_Source\PSoC4/CyLib.c **** 
1116:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1117:Generated_Source\PSoC4/CyLib.c ****     }
1118:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1119:Generated_Source\PSoC4/CyLib.c **** 
1120:Generated_Source\PSoC4/CyLib.c **** 
1121:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1122:Generated_Source\PSoC4/CyLib.c **** 
1123:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1124:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1125:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1126:Generated_Source\PSoC4/CyLib.c ****     *
1127:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1128:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1129:Generated_Source\PSoC4/CyLib.c ****     *
1130:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1131:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1132:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1133:Generated_Source\PSoC4/CyLib.c ****     * called.
1134:Generated_Source\PSoC4/CyLib.c ****     *
1135:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 28


1136:Generated_Source\PSoC4/CyLib.c ****     *
1137:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1138:Generated_Source\PSoC4/CyLib.c ****     *
1139:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1140:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1141:Generated_Source\PSoC4/CyLib.c ****     *
1142:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1143:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1144:Generated_Source\PSoC4/CyLib.c ****     *
1145:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1146:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1147:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1150:Generated_Source\PSoC4/CyLib.c ****     *
1151:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1152:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1153:Generated_Source\PSoC4/CyLib.c ****     {
1154:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1155:Generated_Source\PSoC4/CyLib.c **** 
1156:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1157:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1158:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1159:Generated_Source\PSoC4/CyLib.c **** 
1160:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1161:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1162:Generated_Source\PSoC4/CyLib.c **** 
1163:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1164:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1165:Generated_Source\PSoC4/CyLib.c ****         
1166:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1167:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1168:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1169:Generated_Source\PSoC4/CyLib.c ****             
1170:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1171:Generated_Source\PSoC4/CyLib.c ****             {
1172:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1173:Generated_Source\PSoC4/CyLib.c ****             }
1174:Generated_Source\PSoC4/CyLib.c ****             else
1175:Generated_Source\PSoC4/CyLib.c ****             {
1176:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1177:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1178:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1179:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1180:Generated_Source\PSoC4/CyLib.c ****             
1181:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1182:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1183:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1184:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1185:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1186:Generated_Source\PSoC4/CyLib.c ****                 
1187:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1188:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1189:Generated_Source\PSoC4/CyLib.c ****                 {
1190:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1191:Generated_Source\PSoC4/CyLib.c ****                 }
1192:Generated_Source\PSoC4/CyLib.c ****                 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 29


1193:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1194:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1195:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1196:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1197:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1198:Generated_Source\PSoC4/CyLib.c **** 
1199:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1200:Generated_Source\PSoC4/CyLib.c ****                 {
1201:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1202:Generated_Source\PSoC4/CyLib.c ****                 }
1203:Generated_Source\PSoC4/CyLib.c **** 
1204:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1205:Generated_Source\PSoC4/CyLib.c ****                 {
1206:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1207:Generated_Source\PSoC4/CyLib.c ****                 }
1208:Generated_Source\PSoC4/CyLib.c ****                 
1209:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1210:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1211:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1212:Generated_Source\PSoC4/CyLib.c ****                 
1213:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1214:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1215:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1216:Generated_Source\PSoC4/CyLib.c ****                 #else
1217:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1218:Generated_Source\PSoC4/CyLib.c ****                 #endif
1219:Generated_Source\PSoC4/CyLib.c ****                 
1220:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1221:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1222:Generated_Source\PSoC4/CyLib.c ****                 {
1223:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1224:Generated_Source\PSoC4/CyLib.c ****                 }
1225:Generated_Source\PSoC4/CyLib.c ****                 
1226:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1227:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1228:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1229:Generated_Source\PSoC4/CyLib.c ****                                             
1230:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1231:Generated_Source\PSoC4/CyLib.c ****                 {
1232:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1233:Generated_Source\PSoC4/CyLib.c ****                 }
1234:Generated_Source\PSoC4/CyLib.c **** 
1235:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1236:Generated_Source\PSoC4/CyLib.c ****                 
1237:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1238:Generated_Source\PSoC4/CyLib.c ****                 
1239:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1240:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1241:Generated_Source\PSoC4/CyLib.c ****                 
1242:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1243:Generated_Source\PSoC4/CyLib.c ****                 {
1244:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1245:Generated_Source\PSoC4/CyLib.c ****                 }
1246:Generated_Source\PSoC4/CyLib.c ****                 
1247:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1248:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1249:Generated_Source\PSoC4/CyLib.c ****                 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 30


1250:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1251:Generated_Source\PSoC4/CyLib.c ****                 {
1252:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1253:Generated_Source\PSoC4/CyLib.c ****                 }
1254:Generated_Source\PSoC4/CyLib.c ****                 
1255:Generated_Source\PSoC4/CyLib.c ****             }
1256:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1257:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1258:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1259:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
1260:Generated_Source\PSoC4/CyLib.c ****                 CySysClkPllClearPendingInterrupt(CY_SYS_PLL_INTR_WD_ERR);
1261:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_ECOV2_SRSSLT) */
1262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1263:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1266:Generated_Source\PSoC4/CyLib.c ****         {
1267:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1270:Generated_Source\PSoC4/CyLib.c ****             {
1271:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1272:Generated_Source\PSoC4/CyLib.c **** 
1273:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1274:Generated_Source\PSoC4/CyLib.c ****                 {
1275:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1276:Generated_Source\PSoC4/CyLib.c ****                     break;
1277:Generated_Source\PSoC4/CyLib.c ****                 }
1278:Generated_Source\PSoC4/CyLib.c ****             }
1279:Generated_Source\PSoC4/CyLib.c **** 
1280:Generated_Source\PSoC4/CyLib.c ****         }
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1283:Generated_Source\PSoC4/CyLib.c ****     }
1284:Generated_Source\PSoC4/CyLib.c **** 
1285:Generated_Source\PSoC4/CyLib.c **** 
1286:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1287:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1288:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1289:Generated_Source\PSoC4/CyLib.c ****     *
1290:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1293:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1294:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1295:Generated_Source\PSoC4/CyLib.c ****     *
1296:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1297:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1298:Generated_Source\PSoC4/CyLib.c ****     {
1299:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1300:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1301:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1302:Generated_Source\PSoC4/CyLib.c **** 
1303:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1304:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1305:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1306:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 31


1307:Generated_Source\PSoC4/CyLib.c ****         #else
1308:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1309:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1310:Generated_Source\PSoC4/CyLib.c ****     }
1311:Generated_Source\PSoC4/CyLib.c **** 
1312:Generated_Source\PSoC4/CyLib.c **** 
1313:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1314:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1315:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1316:Generated_Source\PSoC4/CyLib.c ****     *
1317:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1318:Generated_Source\PSoC4/CyLib.c ****     *
1319:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1320:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1321:Generated_Source\PSoC4/CyLib.c ****     *
1322:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S / 4500 with ECO devices, the error status bit is 
1323:Generated_Source\PSoC4/CyLib.c ****     * the WATCHDOG_ERROR bit in ECO_STATUS register.
1324:Generated_Source\PSoC4/CyLib.c ****     *
1325:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1326:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1327:Generated_Source\PSoC4/CyLib.c ****     *
1328:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S / 4500 with ECO: Non-zero indicates that ECO 
1329:Generated_Source\PSoC4/CyLib.c ****     * is running.
1330:Generated_Source\PSoC4/CyLib.c ****     *
1331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1332:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1333:Generated_Source\PSoC4/CyLib.c ****     {
1334:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1335:Generated_Source\PSoC4/CyLib.c **** 
1336:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1337:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1338:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1339:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1340:Generated_Source\PSoC4/CyLib.c **** 
1341:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1342:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1343:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1344:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1345:Generated_Source\PSoC4/CyLib.c ****         #else
1346:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1347:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1348:Generated_Source\PSoC4/CyLib.c **** 
1349:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1350:Generated_Source\PSoC4/CyLib.c ****     }
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1353:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1354:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1355:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1356:Generated_Source\PSoC4/CyLib.c ****         *
1357:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1358:Generated_Source\PSoC4/CyLib.c ****         *
1359:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1360:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1361:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1362:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1363:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 32


1364:Generated_Source\PSoC4/CyLib.c ****         *
1365:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1366:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1367:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1368:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1369:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1370:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1373:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1374:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1375:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1376:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1377:Generated_Source\PSoC4/CyLib.c ****         *
1378:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1379:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1380:Generated_Source\PSoC4/CyLib.c ****         {
1381:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1382:Generated_Source\PSoC4/CyLib.c **** 
1383:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1384:Generated_Source\PSoC4/CyLib.c ****             {
1385:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1386:Generated_Source\PSoC4/CyLib.c **** 
1387:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1388:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1391:Generated_Source\PSoC4/CyLib.c ****             }
1392:Generated_Source\PSoC4/CyLib.c ****             else
1393:Generated_Source\PSoC4/CyLib.c ****             {
1394:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1395:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1396:Generated_Source\PSoC4/CyLib.c ****             }
1397:Generated_Source\PSoC4/CyLib.c ****         }
1398:Generated_Source\PSoC4/CyLib.c **** 
1399:Generated_Source\PSoC4/CyLib.c ****     #else
1400:Generated_Source\PSoC4/CyLib.c **** 
1401:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1402:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1403:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1404:Generated_Source\PSoC4/CyLib.c ****         *
1405:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1406:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S /4500 with ECO devices only.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1409:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1410:Generated_Source\PSoC4/CyLib.c ****         *
1411:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1412:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1415:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1416:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1417:Generated_Source\PSoC4/CyLib.c ****         *
1418:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1419:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1420:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 33


1421:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1422:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1423:Generated_Source\PSoC4/CyLib.c ****         *
1424:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1425:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1428:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1429:Generated_Source\PSoC4/CyLib.c ****         *
1430:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1431:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1435:Generated_Source\PSoC4/CyLib.c ****         *
1436:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1437:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1438:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1439:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1440:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1441:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1442:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1443:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1444:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1445:Generated_Source\PSoC4/CyLib.c ****         *
1446:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1447:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1448:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1449:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1450:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1451:Generated_Source\PSoC4/CyLib.c ****         *
1452:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1453:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1454:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1455:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1456:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1457:Generated_Source\PSoC4/CyLib.c ****         *
1458:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1459:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1460:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1461:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1462:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1463:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1464:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1465:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1466:Generated_Source\PSoC4/CyLib.c ****         *
1467:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1468:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1469:Generated_Source\PSoC4/CyLib.c ****         {
1470:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1471:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1472:Generated_Source\PSoC4/CyLib.c **** 
1473:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1476:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1477:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 34


1478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1479:Generated_Source\PSoC4/CyLib.c **** 
1480:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1481:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1482:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1483:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1484:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1485:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1486:Generated_Source\PSoC4/CyLib.c **** 
1487:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1488:Generated_Source\PSoC4/CyLib.c **** 
1489:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1490:Generated_Source\PSoC4/CyLib.c ****         }
1491:Generated_Source\PSoC4/CyLib.c **** 
1492:Generated_Source\PSoC4/CyLib.c **** 
1493:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1494:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1495:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1496:Generated_Source\PSoC4/CyLib.c ****         *
1497:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1498:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1499:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1500:Generated_Source\PSoC4/CyLib.c ****         *
1501:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S / 4500 with ECO 
1502:Generated_Source\PSoC4/CyLib.c ****         * devices only.
1503:Generated_Source\PSoC4/CyLib.c ****         *
1504:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1505:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1506:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1507:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1508:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1509:Generated_Source\PSoC4/CyLib.c ****         *
1510:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1511:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1512:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1513:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1514:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1515:Generated_Source\PSoC4/CyLib.c ****         *
1516:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1517:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1518:Generated_Source\PSoC4/CyLib.c ****         *
1519:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1520:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1521:Generated_Source\PSoC4/CyLib.c ****         {
1522:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1525:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1526:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1527:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1528:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1529:Generated_Source\PSoC4/CyLib.c **** 
1530:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1531:Generated_Source\PSoC4/CyLib.c **** 
1532:Generated_Source\PSoC4/CyLib.c **** 
1533:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1534:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 35


1535:Generated_Source\PSoC4/CyLib.c ****             {
1536:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1537:Generated_Source\PSoC4/CyLib.c ****             }
1538:Generated_Source\PSoC4/CyLib.c ****             else
1539:Generated_Source\PSoC4/CyLib.c ****             {
1540:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1541:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1542:Generated_Source\PSoC4/CyLib.c **** 
1543:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1544:Generated_Source\PSoC4/CyLib.c ****                 {
1545:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1546:Generated_Source\PSoC4/CyLib.c ****                 }
1547:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1548:Generated_Source\PSoC4/CyLib.c ****                 {
1549:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1550:Generated_Source\PSoC4/CyLib.c ****                 }
1551:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1552:Generated_Source\PSoC4/CyLib.c ****                 {
1553:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1554:Generated_Source\PSoC4/CyLib.c ****                 }
1555:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1556:Generated_Source\PSoC4/CyLib.c ****                 {
1557:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1558:Generated_Source\PSoC4/CyLib.c ****                 }
1559:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1560:Generated_Source\PSoC4/CyLib.c ****                 {
1561:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1562:Generated_Source\PSoC4/CyLib.c ****                 }
1563:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1564:Generated_Source\PSoC4/CyLib.c ****                 {
1565:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1566:Generated_Source\PSoC4/CyLib.c ****                 }
1567:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1568:Generated_Source\PSoC4/CyLib.c ****                 {
1569:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1570:Generated_Source\PSoC4/CyLib.c ****                 }
1571:Generated_Source\PSoC4/CyLib.c ****                 else
1572:Generated_Source\PSoC4/CyLib.c ****                 {
1573:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1574:Generated_Source\PSoC4/CyLib.c ****                 }
1575:Generated_Source\PSoC4/CyLib.c **** 
1576:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1577:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1580:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1581:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1582:Generated_Source\PSoC4/CyLib.c ****                 {
1583:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1584:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1585:Generated_Source\PSoC4/CyLib.c ****                 }
1586:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1587:Generated_Source\PSoC4/CyLib.c ****                 {
1588:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1589:Generated_Source\PSoC4/CyLib.c ****                 }
1590:Generated_Source\PSoC4/CyLib.c ****                 else
1591:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 36


1592:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1593:Generated_Source\PSoC4/CyLib.c ****                 }
1594:Generated_Source\PSoC4/CyLib.c **** 
1595:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1596:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1599:Generated_Source\PSoC4/CyLib.c ****                 }
1600:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1601:Generated_Source\PSoC4/CyLib.c ****                 {
1602:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1603:Generated_Source\PSoC4/CyLib.c ****                 }
1604:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1605:Generated_Source\PSoC4/CyLib.c ****                 {
1606:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****                 else
1609:Generated_Source\PSoC4/CyLib.c ****                 {
1610:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1611:Generated_Source\PSoC4/CyLib.c ****                 }
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1614:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1615:Generated_Source\PSoC4/CyLib.c **** 
1616:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1617:Generated_Source\PSoC4/CyLib.c **** 
1618:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1619:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1620:Generated_Source\PSoC4/CyLib.c ****                 {
1621:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1622:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1623:Generated_Source\PSoC4/CyLib.c ****                 }
1624:Generated_Source\PSoC4/CyLib.c ****                 else
1625:Generated_Source\PSoC4/CyLib.c ****                 {
1626:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1627:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1628:Generated_Source\PSoC4/CyLib.c ****                     */
1629:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1630:Generated_Source\PSoC4/CyLib.c ****                 }
1631:Generated_Source\PSoC4/CyLib.c ****             }
1632:Generated_Source\PSoC4/CyLib.c **** 
1633:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1634:Generated_Source\PSoC4/CyLib.c ****         }
1635:Generated_Source\PSoC4/CyLib.c **** 
1636:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1637:Generated_Source\PSoC4/CyLib.c **** 
1638:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1639:Generated_Source\PSoC4/CyLib.c **** 
1640:Generated_Source\PSoC4/CyLib.c **** 
1641:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1642:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1643:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1644:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1645:Generated_Source\PSoC4/CyLib.c ****     *
1646:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1647:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1648:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 37


1649:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1650:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1651:Generated_Source\PSoC4/CyLib.c ****     *
1652:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1653:Generated_Source\PSoC4/CyLib.c ****     *
1654:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1655:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1656:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1657:Generated_Source\PSoC4/CyLib.c ****     *
1658:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1659:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1660:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1661:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1662:Generated_Source\PSoC4/CyLib.c ****     *
1663:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1664:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1665:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1666:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1667:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1668:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1671:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1672:Generated_Source\PSoC4/CyLib.c ****     {
1673:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1674:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1675:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1676:Generated_Source\PSoC4/CyLib.c **** 
1677:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1678:Generated_Source\PSoC4/CyLib.c ****         {
1679:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1680:Generated_Source\PSoC4/CyLib.c **** 
1681:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1682:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1683:Generated_Source\PSoC4/CyLib.c **** 
1684:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1685:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1690:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1691:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1692:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1693:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1694:Generated_Source\PSoC4/CyLib.c **** 
1695:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1696:Generated_Source\PSoC4/CyLib.c ****             {
1697:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1700:Generated_Source\PSoC4/CyLib.c ****                 {
1701:Generated_Source\PSoC4/CyLib.c **** 
1702:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1703:Generated_Source\PSoC4/CyLib.c ****                     {
1704:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1705:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 38


1706:Generated_Source\PSoC4/CyLib.c ****                         break;
1707:Generated_Source\PSoC4/CyLib.c ****                     }
1708:Generated_Source\PSoC4/CyLib.c **** 
1709:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1710:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1711:Generated_Source\PSoC4/CyLib.c ****                 }
1712:Generated_Source\PSoC4/CyLib.c ****             }
1713:Generated_Source\PSoC4/CyLib.c ****         }
1714:Generated_Source\PSoC4/CyLib.c ****         else
1715:Generated_Source\PSoC4/CyLib.c ****         {
1716:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1717:Generated_Source\PSoC4/CyLib.c ****         }
1718:Generated_Source\PSoC4/CyLib.c **** 
1719:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1720:Generated_Source\PSoC4/CyLib.c ****     }
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1724:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1725:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1726:Generated_Source\PSoC4/CyLib.c ****     *
1727:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1728:Generated_Source\PSoC4/CyLib.c ****     *
1729:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1732:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1733:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1734:Generated_Source\PSoC4/CyLib.c ****     *
1735:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1736:Generated_Source\PSoC4/CyLib.c ****     *
1737:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1738:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1739:Generated_Source\PSoC4/CyLib.c ****     {
1740:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1741:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1742:Generated_Source\PSoC4/CyLib.c **** 
1743:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1744:Generated_Source\PSoC4/CyLib.c **** 
1745:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1746:Generated_Source\PSoC4/CyLib.c **** 
1747:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1748:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1749:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1750:Generated_Source\PSoC4/CyLib.c ****         {
1751:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1752:Generated_Source\PSoC4/CyLib.c ****         }
1753:Generated_Source\PSoC4/CyLib.c **** 
1754:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1755:Generated_Source\PSoC4/CyLib.c **** 
1756:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1757:Generated_Source\PSoC4/CyLib.c ****     }
1758:Generated_Source\PSoC4/CyLib.c **** 
1759:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1760:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1761:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1762:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 39


1763:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1764:Generated_Source\PSoC4/CyLib.c ****     *
1765:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1766:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1769:Generated_Source\PSoC4/CyLib.c ****     *
1770:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1771:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1772:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1773:Generated_Source\PSoC4/CyLib.c ****     *
1774:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1775:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1776:Generated_Source\PSoC4/CyLib.c ****     {
1777:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1778:Generated_Source\PSoC4/CyLib.c **** 
1779:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1780:Generated_Source\PSoC4/CyLib.c ****         {
1781:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1782:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1783:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1784:Generated_Source\PSoC4/CyLib.c ****         }
1785:Generated_Source\PSoC4/CyLib.c ****     }
1786:Generated_Source\PSoC4/CyLib.c **** 
1787:Generated_Source\PSoC4/CyLib.c **** 
1788:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1789:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1790:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1791:Generated_Source\PSoC4/CyLib.c ****     *
1792:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1793:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1794:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1795:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1796:Generated_Source\PSoC4/CyLib.c ****     *
1797:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1798:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1799:Generated_Source\PSoC4/CyLib.c ****     *
1800:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1801:Generated_Source\PSoC4/CyLib.c ****     *
1802:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1803:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1804:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1805:Generated_Source\PSoC4/CyLib.c ****     *
1806:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1807:Generated_Source\PSoC4/CyLib.c ****     * divider.
1808:Generated_Source\PSoC4/CyLib.c ****     *
1809:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1810:Generated_Source\PSoC4/CyLib.c ****     *
1811:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1812:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1813:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1814:Generated_Source\PSoC4/CyLib.c ****     *
1815:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1816:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1817:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1818:Generated_Source\PSoC4/CyLib.c ****     *
1819:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 40


1820:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1821:Generated_Source\PSoC4/CyLib.c ****     {
1822:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1823:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1824:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1825:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1826:Generated_Source\PSoC4/CyLib.c **** 
1827:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1828:Generated_Source\PSoC4/CyLib.c **** 
1829:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1830:Generated_Source\PSoC4/CyLib.c **** 
1831:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1832:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1833:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1834:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1835:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1836:Generated_Source\PSoC4/CyLib.c ****         {
1837:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1838:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1839:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1840:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1843:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1844:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1847:Generated_Source\PSoC4/CyLib.c **** 
1848:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1849:Generated_Source\PSoC4/CyLib.c ****         }
1850:Generated_Source\PSoC4/CyLib.c **** 
1851:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1852:Generated_Source\PSoC4/CyLib.c **** 
1853:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1854:Generated_Source\PSoC4/CyLib.c ****     }
1855:Generated_Source\PSoC4/CyLib.c **** 
1856:Generated_Source\PSoC4/CyLib.c **** 
1857:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1858:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1859:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1864:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1865:Generated_Source\PSoC4/CyLib.c ****     *
1866:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1867:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1868:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1869:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1870:Generated_Source\PSoC4/CyLib.c ****     *
1871:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 swith PLL devices.
1872:Generated_Source\PSoC4/CyLib.c ****     *
1873:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1874:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1875:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1876:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 41


1877:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1878:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1879:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1880:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1881:Generated_Source\PSoC4/CyLib.c ****     *
1882:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1883:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1884:Generated_Source\PSoC4/CyLib.c ****     *
1885:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1886:Generated_Source\PSoC4/CyLib.c ****     *
1887:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1888:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1889:Generated_Source\PSoC4/CyLib.c ****     {
1890:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1891:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1892:Generated_Source\PSoC4/CyLib.c **** 
1893:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1894:Generated_Source\PSoC4/CyLib.c **** 
1895:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1896:Generated_Source\PSoC4/CyLib.c ****         {
1897:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1898:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1899:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1900:Generated_Source\PSoC4/CyLib.c ****         }
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1903:Generated_Source\PSoC4/CyLib.c ****     }
1904:Generated_Source\PSoC4/CyLib.c **** 
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1911:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1912:Generated_Source\PSoC4/CyLib.c ****     *
1913:Generated_Source\PSoC4/CyLib.c ****     *  \return bypass: Bypass mode.
1914:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1915:Generated_Source\PSoC4/CyLib.c ****     *
1916:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1917:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1918:Generated_Source\PSoC4/CyLib.c ****     {
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1920:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1921:Generated_Source\PSoC4/CyLib.c **** 
1922:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1925:Generated_Source\PSoC4/CyLib.c **** 
1926:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1927:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1928:Generated_Source\PSoC4/CyLib.c **** 
1929:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1930:Generated_Source\PSoC4/CyLib.c **** 
1931:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1932:Generated_Source\PSoC4/CyLib.c ****     }
1933:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 42


1934:Generated_Source\PSoC4/CyLib.c **** 
1935:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1936:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1937:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1938:Generated_Source\PSoC4/CyLib.c ****     *
1939:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1940:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1941:Generated_Source\PSoC4/CyLib.c ****     *
1942:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1943:Generated_Source\PSoC4/CyLib.c ****     *
1944:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1945:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1946:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1947:Generated_Source\PSoC4/CyLib.c ****     *
1948:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1949:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1950:Generated_Source\PSoC4/CyLib.c ****     *
1951:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1952:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1953:Generated_Source\PSoC4/CyLib.c ****     {
1954:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1955:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1956:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1957:Generated_Source\PSoC4/CyLib.c **** 
1958:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1959:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1960:Generated_Source\PSoC4/CyLib.c **** 
1961:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1962:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1963:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1964:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1965:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1966:Generated_Source\PSoC4/CyLib.c ****             )
1967:Generated_Source\PSoC4/CyLib.c ****         {
1968:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1969:Generated_Source\PSoC4/CyLib.c ****         }
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1972:Generated_Source\PSoC4/CyLib.c ****     }
1973:Generated_Source\PSoC4/CyLib.c **** 
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1976:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1977:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1978:Generated_Source\PSoC4/CyLib.c ****     *
1979:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1980:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1981:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1982:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1983:Generated_Source\PSoC4/CyLib.c ****     *
1984:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1985:Generated_Source\PSoC4/CyLib.c ****     *
1986:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1987:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1988:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1989:Generated_Source\PSoC4/CyLib.c ****     *
1990:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 43


1991:Generated_Source\PSoC4/CyLib.c ****     *
1992:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1993:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1994:Generated_Source\PSoC4/CyLib.c ****     {
1995:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1996:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1997:Generated_Source\PSoC4/CyLib.c **** 
1998:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1999:Generated_Source\PSoC4/CyLib.c **** 
2000:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
2001:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2002:Generated_Source\PSoC4/CyLib.c **** 
2003:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2004:Generated_Source\PSoC4/CyLib.c **** 
2005:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2006:Generated_Source\PSoC4/CyLib.c ****     }
2007:Generated_Source\PSoC4/CyLib.c **** 
2008:Generated_Source\PSoC4/CyLib.c **** 
2009:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2010:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2011:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2014:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2015:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2016:Generated_Source\PSoC4/CyLib.c ****     *
2017:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2018:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2019:Generated_Source\PSoC4/CyLib.c ****     *
2020:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2021:Generated_Source\PSoC4/CyLib.c ****     *
2022:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2023:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2024:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2025:Generated_Source\PSoC4/CyLib.c ****     *
2026:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2029:Generated_Source\PSoC4/CyLib.c ****     *
2030:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2031:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2032:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2033:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2034:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2039:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2042:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2043:Generated_Source\PSoC4/CyLib.c ****     *
2044:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2045:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2046:Generated_Source\PSoC4/CyLib.c ****     {
2047:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 44


2048:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2049:Generated_Source\PSoC4/CyLib.c **** 
2050:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2051:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2052:Generated_Source\PSoC4/CyLib.c **** 
2053:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2054:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2055:Generated_Source\PSoC4/CyLib.c **** 
2056:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2057:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2058:Generated_Source\PSoC4/CyLib.c **** 
2059:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2060:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2061:Generated_Source\PSoC4/CyLib.c **** 
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2066:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2067:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2068:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2069:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2070:Generated_Source\PSoC4/CyLib.c ****         {
2071:Generated_Source\PSoC4/CyLib.c **** 
2072:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2073:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2074:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2075:Generated_Source\PSoC4/CyLib.c **** 
2076:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2077:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2078:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2081:Generated_Source\PSoC4/CyLib.c ****             {
2082:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2083:Generated_Source\PSoC4/CyLib.c ****                 {
2084:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2087:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2090:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2091:Generated_Source\PSoC4/CyLib.c **** 
2092:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2093:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2094:Generated_Source\PSoC4/CyLib.c **** 
2095:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2096:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2097:Generated_Source\PSoC4/CyLib.c ****                     {
2098:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2099:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2100:Generated_Source\PSoC4/CyLib.c ****                         break;
2101:Generated_Source\PSoC4/CyLib.c ****                     }
2102:Generated_Source\PSoC4/CyLib.c ****                 }
2103:Generated_Source\PSoC4/CyLib.c **** 
2104:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 45


2105:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2106:Generated_Source\PSoC4/CyLib.c ****                 {
2107:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2108:Generated_Source\PSoC4/CyLib.c ****                     {
2109:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2110:Generated_Source\PSoC4/CyLib.c ****                     }
2111:Generated_Source\PSoC4/CyLib.c ****                 }
2112:Generated_Source\PSoC4/CyLib.c ****             }
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         }
2115:Generated_Source\PSoC4/CyLib.c **** 
2116:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2117:Generated_Source\PSoC4/CyLib.c ****     }
2118:Generated_Source\PSoC4/CyLib.c **** 
2119:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2120:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2121:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2122:Generated_Source\PSoC4/CyLib.c ****     *
2123:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2124:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2125:Generated_Source\PSoC4/CyLib.c ****     *
2126:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S /4500 with PLL devices.
2127:Generated_Source\PSoC4/CyLib.c ****     *
2128:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2129:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2130:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2131:Generated_Source\PSoC4/CyLib.c ****     *
2132:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2133:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2134:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L 
2135:Generated_Source\PSoC4/CyLib.c ****     *  and PSoC 4500 with PLL devices)
2136:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2137:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2138:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2139:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2140:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2141:Generated_Source\PSoC4/CyLib.c ****     *
2142:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2143:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2144:Generated_Source\PSoC4/CyLib.c ****     {
2145:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2146:Generated_Source\PSoC4/CyLib.c ****         
2147:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2148:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2149:Generated_Source\PSoC4/CyLib.c ****         #else
2150:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
2151:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2156:Generated_Source\PSoC4/CyLib.c ****         {
2157:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2158:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2159:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2160:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2161:Generated_Source\PSoC4/CyLib.c ****             #else
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 46


2162:Generated_Source\PSoC4/CyLib.c ****                 CY_SET_REG32_FIELD(CYREG_EXCO_CLK_SELECT, CYFLD_EXCO_REF_SEL, source);
2163:Generated_Source\PSoC4/CyLib.c ****                 
2164:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2165:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2166:Generated_Source\PSoC4/CyLib.c ****                 
2167:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2168:Generated_Source\PSoC4/CyLib.c ****                 {
2169:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2170:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2171:Generated_Source\PSoC4/CyLib.c ****                 }
2172:Generated_Source\PSoC4/CyLib.c ****                 
2173:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2174:Generated_Source\PSoC4/CyLib.c **** 
2175:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2176:Generated_Source\PSoC4/CyLib.c ****         }
2177:Generated_Source\PSoC4/CyLib.c **** 
2178:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2179:Generated_Source\PSoC4/CyLib.c ****     }
2180:Generated_Source\PSoC4/CyLib.c **** 
2181:Generated_Source\PSoC4/CyLib.c ****     
2182:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2183:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2184:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2185:Generated_Source\PSoC4/CyLib.c ****     *
2186:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2187:Generated_Source\PSoC4/CyLib.c ****     *
2188:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2189:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2192:Generated_Source\PSoC4/CyLib.c ****     *
2193:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2194:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2195:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2196:Generated_Source\PSoC4/CyLib.c ****     *
2197:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2198:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2199:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2200:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2201:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2202:Generated_Source\PSoC4/CyLib.c ****     *
2203:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2204:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2205:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2206:Generated_Source\PSoC4/CyLib.c ****     *
2207:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2209:Generated_Source\PSoC4/CyLib.c ****     {
2210:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2211:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2212:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2213:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2214:Generated_Source\PSoC4/CyLib.c **** 
2215:Generated_Source\PSoC4/CyLib.c **** 
2216:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 47


2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2221:Generated_Source\PSoC4/CyLib.c ****         {
2222:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2223:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2224:Generated_Source\PSoC4/CyLib.c **** 
2225:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2226:Generated_Source\PSoC4/CyLib.c **** 
2227:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2228:Generated_Source\PSoC4/CyLib.c ****         }
2229:Generated_Source\PSoC4/CyLib.c **** 
2230:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2233:Generated_Source\PSoC4/CyLib.c ****     }
2234:Generated_Source\PSoC4/CyLib.c ****     
2235:Generated_Source\PSoC4/CyLib.c ****     
2236:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECOV2_SRSSLT)
2237:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2238:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCauseMasked
2239:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2240:Generated_Source\PSoC4/CyLib.c ****         *
2241:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects a bit-wise AND between interrupt 
2242:Generated_Source\PSoC4/CyLib.c ****         *  request and mask registers. The API allows firmware to read the status of 
2243:Generated_Source\PSoC4/CyLib.c ****         *  all mask enabled interrupt causes with a single load operation.
2244:Generated_Source\PSoC4/CyLib.c ****         *
2245:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2246:Generated_Source\PSoC4/CyLib.c ****         *
2247:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2248:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2249:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2250:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2251:Generated_Source\PSoC4/CyLib.c ****         *
2252:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2253:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCauseMasked(void)
2254:Generated_Source\PSoC4/CyLib.c ****         {
2255:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASKED));
2256:Generated_Source\PSoC4/CyLib.c ****         }
2257:Generated_Source\PSoC4/CyLib.c **** 
2258:Generated_Source\PSoC4/CyLib.c ****         
2259:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2260:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCause
2261:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2262:Generated_Source\PSoC4/CyLib.c ****         *
2263:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects the interrupt request registers.
2264:Generated_Source\PSoC4/CyLib.c ****         *
2265:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2266:Generated_Source\PSoC4/CyLib.c ****         *
2267:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2268:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2269:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2270:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2271:Generated_Source\PSoC4/CyLib.c ****         *
2272:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2273:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCause(void)
2274:Generated_Source\PSoC4/CyLib.c ****         {
2275:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR));
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 48


2276:Generated_Source\PSoC4/CyLib.c ****         }
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2280:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllClearPendingInterrupt
2281:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2282:Generated_Source\PSoC4/CyLib.c ****         *
2283:Generated_Source\PSoC4/CyLib.c ****         *  Clears the pending interrupt. 
2284:Generated_Source\PSoC4/CyLib.c ****         *
2285:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2286:Generated_Source\PSoC4/CyLib.c ****         *
2287:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2288:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2289:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2290:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2291:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2292:Generated_Source\PSoC4/CyLib.c ****         *
2293:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2294:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllClearPendingInterrupt(uint32 interrupt)
2295:Generated_Source\PSoC4/CyLib.c ****         {
2296:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR, interrupt);
2297:Generated_Source\PSoC4/CyLib.c ****         }
2298:Generated_Source\PSoC4/CyLib.c ****         
2299:Generated_Source\PSoC4/CyLib.c ****         
2300:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2301:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterruptMask
2302:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2303:Generated_Source\PSoC4/CyLib.c ****         *
2304:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the interrupt mask bit for the corresponding interrupts.
2305:Generated_Source\PSoC4/CyLib.c ****         *
2306:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2307:Generated_Source\PSoC4/CyLib.c ****         *
2308:Generated_Source\PSoC4/CyLib.c ****         * \param intrMask:
2309:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2310:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2311:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2312:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2313:Generated_Source\PSoC4/CyLib.c ****         *
2314:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/        
2315:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterruptMask(uint32 intrMask)
2316:Generated_Source\PSoC4/CyLib.c ****         {
2317:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_MASK, intrMask);
2318:Generated_Source\PSoC4/CyLib.c ****         }
2319:Generated_Source\PSoC4/CyLib.c **** 
2320:Generated_Source\PSoC4/CyLib.c ****         
2321:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2322:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptMask
2323:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2324:Generated_Source\PSoC4/CyLib.c ****         *
2325:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the current interrupt mask register value.
2326:Generated_Source\PSoC4/CyLib.c ****         *
2327:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2328:Generated_Source\PSoC4/CyLib.c ****         *
2329:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2330:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2331:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2332:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 49


2333:Generated_Source\PSoC4/CyLib.c ****         *
2334:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/        
2335:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptMask(void)
2336:Generated_Source\PSoC4/CyLib.c ****         {
2337:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASK));
2338:Generated_Source\PSoC4/CyLib.c ****         }
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****         
2341:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2342:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterrupt
2343:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2344:Generated_Source\PSoC4/CyLib.c ****         *
2345:Generated_Source\PSoC4/CyLib.c ****         *  This API asserts an interrupt. This can be used for firmware debugging.
2346:Generated_Source\PSoC4/CyLib.c ****         *
2347:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2348:Generated_Source\PSoC4/CyLib.c ****         *
2349:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2350:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2351:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2352:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2353:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2354:Generated_Source\PSoC4/CyLib.c ****         *
2355:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/        
2356:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterrupt(uint32 interrupt)
2357:Generated_Source\PSoC4/CyLib.c ****         {
2358:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_SET, interrupt);
2359:Generated_Source\PSoC4/CyLib.c ****         }
2360:Generated_Source\PSoC4/CyLib.c **** 
2361:Generated_Source\PSoC4/CyLib.c ****         
2362:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2363:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnable
2364:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2365:Generated_Source\PSoC4/CyLib.c ****         *
2366:Generated_Source\PSoC4/CyLib.c ****         * This API enables clock supervision on PLL frequency lock and loss.
2367:Generated_Source\PSoC4/CyLib.c ****         *
2368:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2369:Generated_Source\PSoC4/CyLib.c ****         *
2370:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/          
2371:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnable(void)
2372:Generated_Source\PSoC4/CyLib.c ****         {
2373:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN, 0x1uL);
2374:Generated_Source\PSoC4/CyLib.c ****         }
2375:Generated_Source\PSoC4/CyLib.c **** 
2376:Generated_Source\PSoC4/CyLib.c ****         
2377:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2378:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisable
2379:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2380:Generated_Source\PSoC4/CyLib.c ****         *
2381:Generated_Source\PSoC4/CyLib.c ****         * This API disables clock supervision on PLL.
2382:Generated_Source\PSoC4/CyLib.c ****         *
2383:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2384:Generated_Source\PSoC4/CyLib.c ****         *
2385:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/         
2386:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisable(void)
2387:Generated_Source\PSoC4/CyLib.c ****         {
2388:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN);
2389:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 50


2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****         
2392:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2393:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetSpvrCtl
2394:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2395:Generated_Source\PSoC4/CyLib.c ****         *
2396:Generated_Source\PSoC4/CyLib.c ****         *  This API enables sets the clock supervision parameters.
2397:Generated_Source\PSoC4/CyLib.c ****         *
2398:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2399:Generated_Source\PSoC4/CyLib.c ****         *
2400:Generated_Source\PSoC4/CyLib.c ****         * \param startupDelay:
2401:Generated_Source\PSoC4/CyLib.c ****         *  startup delay time -1 in reference clock cycles after enable 
2402:Generated_Source\PSoC4/CyLib.c ****         *  or deep sleep wake up from reference clock start to monitored clock start
2403:Generated_Source\PSoC4/CyLib.c ****         *
2404:Generated_Source\PSoC4/CyLib.c ****         * \param csvSwitch:
2405:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_INT_EN – Enable INTR.CSV_CLK_SW if a clock switch occurs to IMO
2406:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_TRIG_EN – Enable CSV to cause trigger if a clock switch occurs to IMO
2407:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_CLK_SW_EN – Enable CSV to cause clock switch IMO (enabled by default in 
2408:Generated_Source\PSoC4/CyLib.c ****         *
2409:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/           
2410:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetSpvrCtl(uint32 startupDelay, uint32 csvSwitch)
2411:Generated_Source\PSoC4/CyLib.c ****         {
2412:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_CTL);
2413:Generated_Source\PSoC4/CyLib.c ****             
2414:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_STARTUP_MASK | CY_SYS_PLL_CSV_MASK);
2415:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (startupDelay | csvSwitch);
2416:Generated_Source\PSoC4/CyLib.c ****             
2417:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_CTL, tmpRegVal);
2418:Generated_Source\PSoC4/CyLib.c ****         }
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****         
2421:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2422:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetRefLimits
2423:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2424:Generated_Source\PSoC4/CyLib.c ****         *
2425:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the cycle time lower and upper limits.
2426:Generated_Source\PSoC4/CyLib.c ****         *
2427:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2428:Generated_Source\PSoC4/CyLib.c ****         *
2429:Generated_Source\PSoC4/CyLib.c ****         * \param lower:
2430:Generated_Source\PSoC4/CyLib.c ****         *  Sets the lower limit -1, in reference clock cycles, 
2431:Generated_Source\PSoC4/CyLib.c ****         *  before the next monitored clock event is allowed to happen.  If a monitored 
2432:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens before this limit is reached a CSV error is detected.
2433:Generated_Source\PSoC4/CyLib.c ****         *
2434:Generated_Source\PSoC4/CyLib.c ****         * \param upper:
2435:Generated_Source\PSoC4/CyLib.c ****         *  Sets the upper limit -1, in reference clock cycles, before (or same time) 
2436:Generated_Source\PSoC4/CyLib.c ****         *  the next monitored clock event must happen.  If a monitored clock event 
2437:Generated_Source\PSoC4/CyLib.c ****         *  does not happen before this limit is reached, or does not happen at all 
2438:Generated_Source\PSoC4/CyLib.c ****         *  (clock loss), a CSV error is detected.
2439:Generated_Source\PSoC4/CyLib.c ****         *
2440:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/ 
2441:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetRefLimits(uint32 lower, uint32 upper)
2442:Generated_Source\PSoC4/CyLib.c ****         {
2443:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_LIMIT);
2444:Generated_Source\PSoC4/CyLib.c ****             
2445:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_REF_LIMIT_LOWER_MASK | CY_SYS_PLL_REF_LIMIT_UPPER_MASK);
2446:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (lower | ((uint32)(upper << CY_SYS_PLL_REF_LIMIT_UPPER_OFFSET)));
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 51


2447:Generated_Source\PSoC4/CyLib.c ****             
2448:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_LIMIT, tmpRegVal);
2449:Generated_Source\PSoC4/CyLib.c ****         }
2450:Generated_Source\PSoC4/CyLib.c **** 
2451:Generated_Source\PSoC4/CyLib.c ****         
2452:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2453:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetRefLimits
2454:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2455:Generated_Source\PSoC4/CyLib.c ****         *
2456:Generated_Source\PSoC4/CyLib.c ****         *  This API gets the cycle time lower and upper limits.
2457:Generated_Source\PSoC4/CyLib.c ****         *
2458:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2459:Generated_Source\PSoC4/CyLib.c ****         *
2460:Generated_Source\PSoC4/CyLib.c ****         * \return 
2461:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 31:16 – upper limit
2462:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 15:0 – lower limit
2463:Generated_Source\PSoC4/CyLib.c ****         *
2464:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/  
2465:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetRefLimits(void)
2466:Generated_Source\PSoC4/CyLib.c ****         {
2467:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_REF_LIMIT));
2468:Generated_Source\PSoC4/CyLib.c ****         }
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c ****         
2471:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2472:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetPeriod
2473:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2474:Generated_Source\PSoC4/CyLib.c ****         *
2475:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the csv period time.
2476:Generated_Source\PSoC4/CyLib.c ****         *
2477:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2478:Generated_Source\PSoC4/CyLib.c ****         *
2479:Generated_Source\PSoC4/CyLib.c ****         * \param period:
2480:Generated_Source\PSoC4/CyLib.c ****         *  Set the Period -1, in monitored clock cycles, before the next monitored 
2481:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens.
2482:Generated_Source\PSoC4/CyLib.c ****         *  PERIOD <=  (UPPER+1) / FREQ_RATIO -1, with 
2483:Generated_Source\PSoC4/CyLib.c ****         *  FREQ_RATIO = (Reference frequency / Monitored frequency).
2484:Generated_Source\PSoC4/CyLib.c ****         *  In case the clocks are asynchronous: PERIOD <=  UPPER / FREQ_RATIO -1
2485:Generated_Source\PSoC4/CyLib.c ****         *
2486:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/           
2487:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetPeriod(uint32 period)
2488:Generated_Source\PSoC4/CyLib.c ****         {
2489:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD, period);
2490:Generated_Source\PSoC4/CyLib.c ****         }
2491:Generated_Source\PSoC4/CyLib.c **** 
2492:Generated_Source\PSoC4/CyLib.c **** 
2493:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2494:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetPeriod
2495:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2496:Generated_Source\PSoC4/CyLib.c ****         *
2497:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the CSV period time.
2498:Generated_Source\PSoC4/CyLib.c ****         *
2499:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2500:Generated_Source\PSoC4/CyLib.c ****         *
2501:Generated_Source\PSoC4/CyLib.c ****         * \return Period time
2502:Generated_Source\PSoC4/CyLib.c ****         *
2503:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/         
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 52


2504:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetPeriod(void)
2505:Generated_Source\PSoC4/CyLib.c ****         {
2506:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD));
2507:Generated_Source\PSoC4/CyLib.c ****         }
2508:Generated_Source\PSoC4/CyLib.c **** 
2509:Generated_Source\PSoC4/CyLib.c ****         
2510:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2511:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnableReset
2512:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2513:Generated_Source\PSoC4/CyLib.c ****         *
2514:Generated_Source\PSoC4/CyLib.c ****         *  This API enables the system reset feature when the clock supervisor switches 
2515:Generated_Source\PSoC4/CyLib.c ****         *  the clock source to IMO. A programmable delay counter starts at delay count 
2516:Generated_Source\PSoC4/CyLib.c ****         *  value (see CySysClkPllCsvReloadPgmDlyCounter API) and counts down. 
2517:Generated_Source\PSoC4/CyLib.c ****         *
2518:Generated_Source\PSoC4/CyLib.c ****         *  The CSV block will assert system reset when the counter reaches zero unless 
2519:Generated_Source\PSoC4/CyLib.c ****         *  firmware intervenes and reloads the counter using 
2520:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2521:Generated_Source\PSoC4/CyLib.c ****         *
2522:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2523:Generated_Source\PSoC4/CyLib.c ****         *
2524:Generated_Source\PSoC4/CyLib.c ****         *  Side Effects and Restrictions:
2525:Generated_Source\PSoC4/CyLib.c ****         *  If a clock switch occurs, CSV block will reset the device when the delay 
2526:Generated_Source\PSoC4/CyLib.c ****         *  counter reaches zero unless firmware reloads the counter using 
2527:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2528:Generated_Source\PSoC4/CyLib.c ****         *
2529:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/  
2530:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnableReset(void)
2531:Generated_Source\PSoC4/CyLib.c ****         {
2532:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN, 0x1uL);
2533:Generated_Source\PSoC4/CyLib.c ****         }
2534:Generated_Source\PSoC4/CyLib.c ****         
2535:Generated_Source\PSoC4/CyLib.c **** 
2536:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2537:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisableReset
2538:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2539:Generated_Source\PSoC4/CyLib.c ****         *
2540:Generated_Source\PSoC4/CyLib.c ****         *  This API disables the system reset feature when the clock supervisor 
2541:Generated_Source\PSoC4/CyLib.c ****         *  switches the clock source to IMO. 
2542:Generated_Source\PSoC4/CyLib.c ****         *
2543:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2544:Generated_Source\PSoC4/CyLib.c ****         *
2545:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/  
2546:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisableReset(void)
2547:Generated_Source\PSoC4/CyLib.c ****         {
2548:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN);
2549:Generated_Source\PSoC4/CyLib.c ****         }
2550:Generated_Source\PSoC4/CyLib.c **** 
2551:Generated_Source\PSoC4/CyLib.c ****         
2552:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2553:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvReloadPgmDlyCounter
2554:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2555:Generated_Source\PSoC4/CyLib.c ****         *
2556:Generated_Source\PSoC4/CyLib.c ****         *  This API reloads the programmable delay counter with the delay count value. 
2557:Generated_Source\PSoC4/CyLib.c ****         *
2558:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2559:Generated_Source\PSoC4/CyLib.c ****         *
2560:Generated_Source\PSoC4/CyLib.c ****         * \param delayCount:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 53


2561:Generated_Source\PSoC4/CyLib.c ****         *  Valid range 0-65535, device default value is 256. 
2562:Generated_Source\PSoC4/CyLib.c ****         *  Sets the # of counts of IMO clock before system reset is asserted.
2563:Generated_Source\PSoC4/CyLib.c ****         *
2564:Generated_Source\PSoC4/CyLib.c ****         *
2565:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/           
2566:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvReloadPgmDlyCounter(uint32 delayCount)
2567:Generated_Source\PSoC4/CyLib.c ****         {
2568:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY, CYFLD_EXCO_DLYCOUNT, delayCount);
2569:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_LOAD, 0x1uL);
2570:Generated_Source\PSoC4/CyLib.c ****         }
2571:Generated_Source\PSoC4/CyLib.c **** 
2572:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_ECOV2_SRSSLT) */
2573:Generated_Source\PSoC4/CyLib.c ****     
2574:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2575:Generated_Source\PSoC4/CyLib.c **** 
2576:Generated_Source\PSoC4/CyLib.c **** 
2577:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2578:Generated_Source\PSoC4/CyLib.c **** 
2579:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2580:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2581:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2582:Generated_Source\PSoC4/CyLib.c ****     *
2583:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2584:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2585:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2586:Generated_Source\PSoC4/CyLib.c ****     *
2587:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2588:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2589:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2590:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2591:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2592:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2593:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2594:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2595:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2596:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2597:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2598:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2599:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2600:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2601:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2602:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2603:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2604:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2605:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2606:Generated_Source\PSoC4/CyLib.c ****     *
2607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2608:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2609:Generated_Source\PSoC4/CyLib.c ****     {
2610:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2611:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2614:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2615:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2616:Generated_Source\PSoC4/CyLib.c **** 
2617:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 54


2618:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2619:Generated_Source\PSoC4/CyLib.c **** 
2620:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2621:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2622:Generated_Source\PSoC4/CyLib.c **** 
2623:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2624:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2627:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2628:Generated_Source\PSoC4/CyLib.c ****     }
2629:Generated_Source\PSoC4/CyLib.c **** 
2630:Generated_Source\PSoC4/CyLib.c **** 
2631:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2632:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2633:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2634:Generated_Source\PSoC4/CyLib.c ****     *
2635:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2636:Generated_Source\PSoC4/CyLib.c ****     *
2637:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2638:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2639:Generated_Source\PSoC4/CyLib.c ****     {
 396              		.loc 1 2639 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              		@ link register save eliminated.
2640:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 401              		.loc 1 2640 0
 402 0000 054A     		ldr	r2, .L33
 403 0002 1368     		ldr	r3, [r2]
 404 0004 0221     		movs	r1, #2
 405 0006 8B43     		bics	r3, r1
 406 0008 1360     		str	r3, [r2]
2641:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 407              		.loc 1 2641 0
 408 000a 044A     		ldr	r2, .L33+4
 409 000c 1368     		ldr	r3, [r2]
 410 000e 0139     		subs	r1, r1, #1
 411 0010 8B43     		bics	r3, r1
 412 0012 1360     		str	r3, [r2]
2642:Generated_Source\PSoC4/CyLib.c ****     }
 413              		.loc 1 2642 0
 414              		@ sp needed
 415 0014 7047     		bx	lr
 416              	.L34:
 417 0016 C046     		.align	2
 418              	.L33:
 419 0018 08000B40 		.word	1074462728
 420 001c 18000B40 		.word	1074462744
 421              		.cfi_endproc
 422              	.LFE12:
 423              		.size	CySysLvdDisable, .-CySysLvdDisable
 424              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 425              		.align	2
 426              		.global	CySysLvdGetInterruptSource
 427              		.code	16
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 55


 428              		.thumb_func
 429              		.type	CySysLvdGetInterruptSource, %function
 430              	CySysLvdGetInterruptSource:
 431              	.LFB13:
2643:Generated_Source\PSoC4/CyLib.c **** 
2644:Generated_Source\PSoC4/CyLib.c **** 
2645:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2646:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2647:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2648:Generated_Source\PSoC4/CyLib.c ****     *
2649:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2650:Generated_Source\PSoC4/CyLib.c ****     *
2651:Generated_Source\PSoC4/CyLib.c ****     * \return
2652:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2653:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2654:Generated_Source\PSoC4/CyLib.c ****     *
2655:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2656:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2657:Generated_Source\PSoC4/CyLib.c ****     {
 432              		.loc 1 2657 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		@ link register save eliminated.
2658:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 437              		.loc 1 2658 0
 438 0000 024B     		ldr	r3, .L36
 439 0002 1B68     		ldr	r3, [r3]
 440 0004 0220     		movs	r0, #2
 441 0006 1840     		ands	r0, r3
2659:Generated_Source\PSoC4/CyLib.c ****     }
 442              		.loc 1 2659 0
 443              		@ sp needed
 444 0008 7047     		bx	lr
 445              	.L37:
 446 000a C046     		.align	2
 447              	.L36:
 448 000c 04000B40 		.word	1074462724
 449              		.cfi_endproc
 450              	.LFE13:
 451              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 452              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 453              		.align	2
 454              		.global	CySysLvdClearInterrupt
 455              		.code	16
 456              		.thumb_func
 457              		.type	CySysLvdClearInterrupt, %function
 458              	CySysLvdClearInterrupt:
 459              	.LFB14:
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c **** 
2662:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2663:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2664:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2665:Generated_Source\PSoC4/CyLib.c ****     *
2666:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2667:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 56


2668:Generated_Source\PSoC4/CyLib.c ****     * \return
2669:Generated_Source\PSoC4/CyLib.c ****     *  None
2670:Generated_Source\PSoC4/CyLib.c ****     *
2671:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2672:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2673:Generated_Source\PSoC4/CyLib.c ****     {
 460              		.loc 1 2673 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              		@ link register save eliminated.
2674:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 465              		.loc 1 2674 0
 466 0000 0222     		movs	r2, #2
 467 0002 014B     		ldr	r3, .L39
 468 0004 1A60     		str	r2, [r3]
2675:Generated_Source\PSoC4/CyLib.c ****     }
 469              		.loc 1 2675 0
 470              		@ sp needed
 471 0006 7047     		bx	lr
 472              	.L40:
 473              		.align	2
 474              	.L39:
 475 0008 04000B40 		.word	1074462724
 476              		.cfi_endproc
 477              	.LFE14:
 478              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 479              		.section	.text.CySysGetResetReason,"ax",%progbits
 480              		.align	2
 481              		.global	CySysGetResetReason
 482              		.code	16
 483              		.thumb_func
 484              		.type	CySysGetResetReason, %function
 485              	CySysGetResetReason:
 486              	.LFB15:
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2678:Generated_Source\PSoC4/CyLib.c **** 
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2681:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2682:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2685:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2686:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2687:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2688:Generated_Source\PSoC4/CyLib.c **** *
2689:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2690:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2691:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2692:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2693:Generated_Source\PSoC4/CyLib.c **** *
2694:Generated_Source\PSoC4/CyLib.c **** * \return
2695:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2696:Generated_Source\PSoC4/CyLib.c **** *
2697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 57


2698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2699:Generated_Source\PSoC4/CyLib.c **** {
 487              		.loc 1 2699 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492              	.LVL25:
 493 0000 0200     		movs	r2, r0
2700:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2701:Generated_Source\PSoC4/CyLib.c **** 
2702:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 494              		.loc 1 2702 0
 495 0002 1920     		movs	r0, #25
 496              	.LVL26:
 497 0004 0240     		ands	r2, r0
 498              	.LVL27:
2703:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 499              		.loc 1 2703 0
 500 0006 0249     		ldr	r1, .L42
 501 0008 0B68     		ldr	r3, [r1]
 502 000a 1840     		ands	r0, r3
 503              	.LVL28:
2704:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2705:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 504              		.loc 1 2705 0
 505 000c 0A60     		str	r2, [r1]
2706:Generated_Source\PSoC4/CyLib.c **** 
2707:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2708:Generated_Source\PSoC4/CyLib.c **** }
 506              		.loc 1 2708 0
 507              		@ sp needed
 508 000e 7047     		bx	lr
 509              	.L43:
 510              		.align	2
 511              	.L42:
 512 0010 00030B40 		.word	1074463488
 513              		.cfi_endproc
 514              	.LFE15:
 515              		.size	CySysGetResetReason, .-CySysGetResetReason
 516              		.section	.text.CyDisableInts,"ax",%progbits
 517              		.align	2
 518              		.global	CyDisableInts
 519              		.code	16
 520              		.thumb_func
 521              		.type	CyDisableInts, %function
 522              	CyDisableInts:
 523              	.LFB16:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \return
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 58


2718:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 524              		.loc 1 2722 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              		@ link register save eliminated.
2723:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2726:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 529              		.loc 1 2726 0
 530 0000 024B     		ldr	r3, .L45
 531 0002 1868     		ldr	r0, [r3]
 532              	.LVL29:
2727:Generated_Source\PSoC4/CyLib.c **** 
2728:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2729:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 533              		.loc 1 2729 0
 534 0004 0122     		movs	r2, #1
 535 0006 5242     		rsbs	r2, r2, #0
 536 0008 1A60     		str	r2, [r3]
2730:Generated_Source\PSoC4/CyLib.c **** 
2731:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2732:Generated_Source\PSoC4/CyLib.c **** }
 537              		.loc 1 2732 0
 538              		@ sp needed
 539 000a 7047     		bx	lr
 540              	.L46:
 541              		.align	2
 542              	.L45:
 543 000c 80E100E0 		.word	-536813184
 544              		.cfi_endproc
 545              	.LFE16:
 546              		.size	CyDisableInts, .-CyDisableInts
 547              		.section	.text.CyEnableInts,"ax",%progbits
 548              		.align	2
 549              		.global	CyEnableInts
 550              		.code	16
 551              		.thumb_func
 552              		.type	CyEnableInts, %function
 553              	CyEnableInts:
 554              	.LFB17:
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2736:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2737:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2738:Generated_Source\PSoC4/CyLib.c **** *
2739:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2740:Generated_Source\PSoC4/CyLib.c **** *
2741:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 59


2744:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2745:Generated_Source\PSoC4/CyLib.c **** {
 555              		.loc 1 2745 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              		@ link register save eliminated.
 560              	.LVL30:
2746:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 561              		.loc 1 2746 0
 562 0000 014B     		ldr	r3, .L48
 563 0002 1860     		str	r0, [r3]
2747:Generated_Source\PSoC4/CyLib.c **** }
 564              		.loc 1 2747 0
 565              		@ sp needed
 566 0004 7047     		bx	lr
 567              	.L49:
 568 0006 C046     		.align	2
 569              	.L48:
 570 0008 00E100E0 		.word	-536813312
 571              		.cfi_endproc
 572              	.LFE17:
 573              		.size	CyEnableInts, .-CyEnableInts
 574              		.section	.text.CyIntEnable,"ax",%progbits
 575              		.align	2
 576              		.global	CyIntEnable
 577              		.code	16
 578              		.thumb_func
 579              		.type	CyIntEnable, %function
 580              	CyIntEnable:
 581              	.LFB24:
2748:Generated_Source\PSoC4/CyLib.c **** 
2749:Generated_Source\PSoC4/CyLib.c **** 
2750:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2751:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2752:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2753:Generated_Source\PSoC4/CyLib.c **** *
2754:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2755:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2756:Generated_Source\PSoC4/CyLib.c **** *
2757:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2758:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2759:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2760:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2761:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2762:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2770:Generated_Source\PSoC4/CyLib.c **** {
2771:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2772:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2773:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 60


2774:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2777:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2778:Generated_Source\PSoC4/CyLib.c **** 
2779:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2780:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2783:Generated_Source\PSoC4/CyLib.c **** }
2784:Generated_Source\PSoC4/CyLib.c **** 
2785:Generated_Source\PSoC4/CyLib.c **** 
2786:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2787:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2788:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2789:Generated_Source\PSoC4/CyLib.c **** *
2790:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2791:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2792:Generated_Source\PSoC4/CyLib.c **** *
2793:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2794:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2795:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2796:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2797:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2798:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2799:Generated_Source\PSoC4/CyLib.c **** *
2800:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2801:Generated_Source\PSoC4/CyLib.c **** *
2802:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2803:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2804:Generated_Source\PSoC4/CyLib.c **** {
2805:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2806:Generated_Source\PSoC4/CyLib.c **** 
2807:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2808:Generated_Source\PSoC4/CyLib.c **** 
2809:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2810:Generated_Source\PSoC4/CyLib.c **** }
2811:Generated_Source\PSoC4/CyLib.c **** 
2812:Generated_Source\PSoC4/CyLib.c **** 
2813:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2814:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2815:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2816:Generated_Source\PSoC4/CyLib.c **** *
2817:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2818:Generated_Source\PSoC4/CyLib.c **** *
2819:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2820:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2823:Generated_Source\PSoC4/CyLib.c **** *
2824:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2825:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2826:Generated_Source\PSoC4/CyLib.c **** {
2827:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2828:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 61


2831:Generated_Source\PSoC4/CyLib.c **** 
2832:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2833:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2834:Generated_Source\PSoC4/CyLib.c **** 
2835:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2836:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2837:Generated_Source\PSoC4/CyLib.c **** 
2838:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2839:Generated_Source\PSoC4/CyLib.c **** }
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** 
2842:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2843:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2844:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2845:Generated_Source\PSoC4/CyLib.c **** *
2846:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2847:Generated_Source\PSoC4/CyLib.c **** *
2848:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2849:Generated_Source\PSoC4/CyLib.c **** *
2850:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2851:Generated_Source\PSoC4/CyLib.c **** *
2852:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2853:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2854:Generated_Source\PSoC4/CyLib.c **** {
2855:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2856:Generated_Source\PSoC4/CyLib.c **** 
2857:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2858:Generated_Source\PSoC4/CyLib.c **** 
2859:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2860:Generated_Source\PSoC4/CyLib.c **** }
2861:Generated_Source\PSoC4/CyLib.c **** 
2862:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2863:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2864:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2865:Generated_Source\PSoC4/CyLib.c **** *
2866:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2867:Generated_Source\PSoC4/CyLib.c **** *
2868:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2869:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2870:Generated_Source\PSoC4/CyLib.c **** *
2871:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2872:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2873:Generated_Source\PSoC4/CyLib.c **** {
2874:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2875:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2876:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2877:Generated_Source\PSoC4/CyLib.c **** 
2878:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2879:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2880:Generated_Source\PSoC4/CyLib.c **** 
2881:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2886:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2887:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 62


2888:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2889:Generated_Source\PSoC4/CyLib.c **** 
2890:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2891:Generated_Source\PSoC4/CyLib.c **** }
2892:Generated_Source\PSoC4/CyLib.c **** 
2893:Generated_Source\PSoC4/CyLib.c **** 
2894:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2895:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2896:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** * \return
2903:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2906:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2907:Generated_Source\PSoC4/CyLib.c **** {
2908:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2909:Generated_Source\PSoC4/CyLib.c **** 
2910:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2911:Generated_Source\PSoC4/CyLib.c **** 
2912:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2913:Generated_Source\PSoC4/CyLib.c **** 
2914:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2915:Generated_Source\PSoC4/CyLib.c **** }
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2919:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2920:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2923:Generated_Source\PSoC4/CyLib.c **** *
2924:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2925:Generated_Source\PSoC4/CyLib.c **** *
2926:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2927:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2928:Generated_Source\PSoC4/CyLib.c **** {
 582              		.loc 1 2928 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 587              	.LVL31:
2929:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 588              		.loc 1 2929 0
 589 0000 1F23     		movs	r3, #31
 590 0002 1840     		ands	r0, r3
 591              	.LVL32:
 592 0004 1E3B     		subs	r3, r3, #30
 593 0006 8340     		lsls	r3, r3, r0
 594 0008 014A     		ldr	r2, .L51
 595 000a 1360     		str	r3, [r2]
2930:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 63


 596              		.loc 1 2930 0
 597              		@ sp needed
 598 000c 7047     		bx	lr
 599              	.L52:
 600 000e C046     		.align	2
 601              	.L51:
 602 0010 00E100E0 		.word	-536813312
 603              		.cfi_endproc
 604              	.LFE24:
 605              		.size	CyIntEnable, .-CyIntEnable
 606              		.section	.text.CyIntGetState,"ax",%progbits
 607              		.align	2
 608              		.global	CyIntGetState
 609              		.code	16
 610              		.thumb_func
 611              		.type	CyIntGetState, %function
 612              	CyIntGetState:
 613              	.LFB25:
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c **** 
2933:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2934:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2935:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2938:Generated_Source\PSoC4/CyLib.c **** *
2939:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2940:Generated_Source\PSoC4/CyLib.c **** *
2941:Generated_Source\PSoC4/CyLib.c **** * \return
2942:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2943:Generated_Source\PSoC4/CyLib.c **** *
2944:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2945:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2946:Generated_Source\PSoC4/CyLib.c **** {
 614              		.loc 1 2946 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 619              	.LVL33:
2947:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2948:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 620              		.loc 1 2948 0
 621 0000 044B     		ldr	r3, .L54
 622 0002 1B68     		ldr	r3, [r3]
 623 0004 1F22     		movs	r2, #31
 624 0006 1040     		ands	r0, r2
 625              	.LVL34:
 626 0008 C340     		lsrs	r3, r3, r0
 627 000a 1800     		movs	r0, r3
 628 000c 0123     		movs	r3, #1
 629 000e 1840     		ands	r0, r3
2949:Generated_Source\PSoC4/CyLib.c **** }
 630              		.loc 1 2949 0
 631              		@ sp needed
 632 0010 7047     		bx	lr
 633              	.L55:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 64


 634 0012 C046     		.align	2
 635              	.L54:
 636 0014 00E100E0 		.word	-536813312
 637              		.cfi_endproc
 638              	.LFE25:
 639              		.size	CyIntGetState, .-CyIntGetState
 640              		.section	.text.CyIntDisable,"ax",%progbits
 641              		.align	2
 642              		.global	CyIntDisable
 643              		.code	16
 644              		.thumb_func
 645              		.type	CyIntDisable, %function
 646              	CyIntDisable:
 647              	.LFB26:
2950:Generated_Source\PSoC4/CyLib.c **** 
2951:Generated_Source\PSoC4/CyLib.c **** 
2952:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2953:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2954:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2955:Generated_Source\PSoC4/CyLib.c **** *
2956:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2957:Generated_Source\PSoC4/CyLib.c **** *
2958:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2959:Generated_Source\PSoC4/CyLib.c **** *
2960:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2961:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2962:Generated_Source\PSoC4/CyLib.c **** {
 648              		.loc 1 2962 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 653              	.LVL35:
2963:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 654              		.loc 1 2963 0
 655 0000 1F23     		movs	r3, #31
 656 0002 1840     		ands	r0, r3
 657              	.LVL36:
 658 0004 1E3B     		subs	r3, r3, #30
 659 0006 8340     		lsls	r3, r3, r0
 660 0008 014A     		ldr	r2, .L57
 661 000a 1360     		str	r3, [r2]
2964:Generated_Source\PSoC4/CyLib.c **** }
 662              		.loc 1 2964 0
 663              		@ sp needed
 664 000c 7047     		bx	lr
 665              	.L58:
 666 000e C046     		.align	2
 667              	.L57:
 668 0010 80E100E0 		.word	-536813184
 669              		.cfi_endproc
 670              	.LFE26:
 671              		.size	CyIntDisable, .-CyIntDisable
 672              		.section	.text.CyIntSetPending,"ax",%progbits
 673              		.align	2
 674              		.global	CyIntSetPending
 675              		.code	16
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 65


 676              		.thumb_func
 677              		.type	CyIntSetPending, %function
 678              	CyIntSetPending:
 679              	.LFB27:
2965:Generated_Source\PSoC4/CyLib.c **** 
2966:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2967:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2968:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2969:Generated_Source\PSoC4/CyLib.c **** *
2970:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2973:Generated_Source\PSoC4/CyLib.c **** *
2974:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2975:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2976:Generated_Source\PSoC4/CyLib.c **** {
 680              		.loc 1 2976 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              		@ link register save eliminated.
 685              	.LVL37:
2977:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 686              		.loc 1 2977 0
 687 0000 1F23     		movs	r3, #31
 688 0002 1840     		ands	r0, r3
 689              	.LVL38:
 690 0004 1E3B     		subs	r3, r3, #30
 691 0006 8340     		lsls	r3, r3, r0
 692 0008 014A     		ldr	r2, .L60
 693 000a 1360     		str	r3, [r2]
2978:Generated_Source\PSoC4/CyLib.c **** }
 694              		.loc 1 2978 0
 695              		@ sp needed
 696 000c 7047     		bx	lr
 697              	.L61:
 698 000e C046     		.align	2
 699              	.L60:
 700 0010 00E200E0 		.word	-536813056
 701              		.cfi_endproc
 702              	.LFE27:
 703              		.size	CyIntSetPending, .-CyIntSetPending
 704              		.section	.text.CyIntClearPending,"ax",%progbits
 705              		.align	2
 706              		.global	CyIntClearPending
 707              		.code	16
 708              		.thumb_func
 709              		.type	CyIntClearPending, %function
 710              	CyIntClearPending:
 711              	.LFB28:
2979:Generated_Source\PSoC4/CyLib.c **** 
2980:Generated_Source\PSoC4/CyLib.c **** 
2981:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2982:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2983:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2984:Generated_Source\PSoC4/CyLib.c **** *
2985:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 66


2986:Generated_Source\PSoC4/CyLib.c **** *
2987:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2988:Generated_Source\PSoC4/CyLib.c **** *
2989:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2990:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2991:Generated_Source\PSoC4/CyLib.c **** {
 712              		.loc 1 2991 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 717              	.LVL39:
2992:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 718              		.loc 1 2992 0
 719 0000 1F23     		movs	r3, #31
 720 0002 1840     		ands	r0, r3
 721              	.LVL40:
 722 0004 1E3B     		subs	r3, r3, #30
 723 0006 8340     		lsls	r3, r3, r0
 724 0008 014A     		ldr	r2, .L63
 725 000a 1360     		str	r3, [r2]
2993:Generated_Source\PSoC4/CyLib.c **** }
 726              		.loc 1 2993 0
 727              		@ sp needed
 728 000c 7047     		bx	lr
 729              	.L64:
 730 000e C046     		.align	2
 731              	.L63:
 732 0010 80E200E0 		.word	-536812928
 733              		.cfi_endproc
 734              	.LFE28:
 735              		.size	CyIntClearPending, .-CyIntClearPending
 736              		.section	.text.CyHalt,"ax",%progbits
 737              		.align	2
 738              		.global	CyHalt
 739              		.code	16
 740              		.thumb_func
 741              		.type	CyHalt, %function
 742              	CyHalt:
 743              	.LFB29:
2994:Generated_Source\PSoC4/CyLib.c **** 
2995:Generated_Source\PSoC4/CyLib.c **** 
2996:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2997:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2998:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2999:Generated_Source\PSoC4/CyLib.c **** *
3000:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
3001:Generated_Source\PSoC4/CyLib.c **** *
3002:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
3003:Generated_Source\PSoC4/CyLib.c **** *
3004:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3005:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
3006:Generated_Source\PSoC4/CyLib.c **** {
 744              		.loc 1 3006 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 67


 748              		@ link register save eliminated.
 749              	.LVL41:
3007:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
3008:Generated_Source\PSoC4/CyLib.c ****     {
3009:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
3010:Generated_Source\PSoC4/CyLib.c ****     }
3011:Generated_Source\PSoC4/CyLib.c **** 
3012:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
3013:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
3014:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
3015:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 750              		.loc 1 3015 0
 751              		.syntax divided
 752              	@ 3015 "Generated_Source\PSoC4\CyLib.c" 1
 753 0000 01BE     		    bkpt    1
 754              	@ 0 "" 2
3016:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
3017:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
3018:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
3019:Generated_Source\PSoC4/CyLib.c **** }
 755              		.loc 1 3019 0
 756              		.thumb
 757              		.syntax unified
 758              		@ sp needed
 759 0002 7047     		bx	lr
 760              		.cfi_endproc
 761              	.LFE29:
 762              		.size	CyHalt, .-CyHalt
 763              		.section	.text.CyIntSetSysVector,"ax",%progbits
 764              		.align	2
 765              		.global	CyIntSetSysVector
 766              		.code	16
 767              		.thumb_func
 768              		.type	CyIntSetSysVector, %function
 769              	CyIntSetSysVector:
 770              	.LFB18:
2770:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 771              		.loc 1 2770 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 775              	.LVL42:
 776 0000 70B5     		push	{r4, r5, r6, lr}
 777              		.cfi_def_cfa_offset 16
 778              		.cfi_offset 4, -16
 779              		.cfi_offset 5, -12
 780              		.cfi_offset 6, -8
 781              		.cfi_offset 14, -4
 782 0002 0400     		movs	r4, r0
 783 0004 0D00     		movs	r5, r1
 784              	.LVL43:
2774:Generated_Source\PSoC4/CyLib.c **** 
 785              		.loc 1 2774 0
 786 0006 0F28     		cmp	r0, #15
 787 0008 02D9     		bls	.L67
2774:Generated_Source\PSoC4/CyLib.c **** 
 788              		.loc 1 2774 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 68


 789 000a 0020     		movs	r0, #0
 790              	.LVL44:
 791 000c FFF7FEFF 		bl	CyHalt
 792              	.LVL45:
 793              	.L67:
2777:Generated_Source\PSoC4/CyLib.c **** 
 794              		.loc 1 2777 0 is_stmt 1
 795 0010 A400     		lsls	r4, r4, #2
 796 0012 8023     		movs	r3, #128
 797 0014 9B05     		lsls	r3, r3, #22
 798 0016 9C46     		mov	ip, r3
 799 0018 6444     		add	r4, r4, ip
 800 001a 2068     		ldr	r0, [r4]
 801              	.LVL46:
2780:Generated_Source\PSoC4/CyLib.c **** 
 802              		.loc 1 2780 0
 803 001c 2560     		str	r5, [r4]
2783:Generated_Source\PSoC4/CyLib.c **** 
 804              		.loc 1 2783 0
 805              		@ sp needed
 806              	.LVL47:
 807 001e 70BD     		pop	{r4, r5, r6, pc}
 808              		.cfi_endproc
 809              	.LFE18:
 810              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 811              		.section	.text.CyIntGetSysVector,"ax",%progbits
 812              		.align	2
 813              		.global	CyIntGetSysVector
 814              		.code	16
 815              		.thumb_func
 816              		.type	CyIntGetSysVector, %function
 817              	CyIntGetSysVector:
 818              	.LFB19:
2804:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 819              		.loc 1 2804 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 0, uses_anonymous_args = 0
 823              	.LVL48:
 824 0000 10B5     		push	{r4, lr}
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 4, -8
 827              		.cfi_offset 14, -4
 828 0002 0400     		movs	r4, r0
 829              	.LVL49:
2807:Generated_Source\PSoC4/CyLib.c **** 
 830              		.loc 1 2807 0
 831 0004 0F28     		cmp	r0, #15
 832 0006 02D9     		bls	.L69
2807:Generated_Source\PSoC4/CyLib.c **** 
 833              		.loc 1 2807 0 is_stmt 0 discriminator 1
 834 0008 0020     		movs	r0, #0
 835              	.LVL50:
 836 000a FFF7FEFF 		bl	CyHalt
 837              	.LVL51:
 838              	.L69:
2809:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 69


 839              		.loc 1 2809 0 is_stmt 1
 840 000e A400     		lsls	r4, r4, #2
 841 0010 8023     		movs	r3, #128
 842 0012 9B05     		lsls	r3, r3, #22
 843 0014 9C46     		mov	ip, r3
 844 0016 6444     		add	r4, r4, ip
 845 0018 2068     		ldr	r0, [r4]
2810:Generated_Source\PSoC4/CyLib.c **** 
 846              		.loc 1 2810 0
 847              		@ sp needed
 848 001a 10BD     		pop	{r4, pc}
 849              		.cfi_endproc
 850              	.LFE19:
 851              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 852              		.section	.text.CyIntSetVector,"ax",%progbits
 853              		.align	2
 854              		.global	CyIntSetVector
 855              		.code	16
 856              		.thumb_func
 857              		.type	CyIntSetVector, %function
 858              	CyIntSetVector:
 859              	.LFB20:
2826:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 860              		.loc 1 2826 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 0
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 864              	.LVL52:
 865 0000 70B5     		push	{r4, r5, r6, lr}
 866              		.cfi_def_cfa_offset 16
 867              		.cfi_offset 4, -16
 868              		.cfi_offset 5, -12
 869              		.cfi_offset 6, -8
 870              		.cfi_offset 14, -4
 871 0002 0400     		movs	r4, r0
 872 0004 0D00     		movs	r5, r1
 873              	.LVL53:
2830:Generated_Source\PSoC4/CyLib.c **** 
 874              		.loc 1 2830 0
 875 0006 1F28     		cmp	r0, #31
 876 0008 02D9     		bls	.L71
2830:Generated_Source\PSoC4/CyLib.c **** 
 877              		.loc 1 2830 0 is_stmt 0 discriminator 1
 878 000a 0020     		movs	r0, #0
 879              	.LVL54:
 880 000c FFF7FEFF 		bl	CyHalt
 881              	.LVL55:
 882              	.L71:
2833:Generated_Source\PSoC4/CyLib.c **** 
 883              		.loc 1 2833 0 is_stmt 1
 884 0010 1034     		adds	r4, r4, #16
 885 0012 A400     		lsls	r4, r4, #2
 886 0014 8023     		movs	r3, #128
 887 0016 9B05     		lsls	r3, r3, #22
 888 0018 9C46     		mov	ip, r3
 889 001a 6444     		add	r4, r4, ip
 890 001c 2068     		ldr	r0, [r4]
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 70


 891              	.LVL56:
2836:Generated_Source\PSoC4/CyLib.c **** 
 892              		.loc 1 2836 0
 893 001e 2560     		str	r5, [r4]
2839:Generated_Source\PSoC4/CyLib.c **** 
 894              		.loc 1 2839 0
 895              		@ sp needed
 896              	.LVL57:
 897 0020 70BD     		pop	{r4, r5, r6, pc}
 898              		.cfi_endproc
 899              	.LFE20:
 900              		.size	CyIntSetVector, .-CyIntSetVector
 901 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 902              		.align	2
 903              		.global	CyIntGetVector
 904              		.code	16
 905              		.thumb_func
 906              		.type	CyIntGetVector, %function
 907              	CyIntGetVector:
 908              	.LFB21:
2854:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 909              		.loc 1 2854 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913              	.LVL58:
 914 0000 10B5     		push	{r4, lr}
 915              		.cfi_def_cfa_offset 8
 916              		.cfi_offset 4, -8
 917              		.cfi_offset 14, -4
 918 0002 0400     		movs	r4, r0
 919              	.LVL59:
2857:Generated_Source\PSoC4/CyLib.c **** 
 920              		.loc 1 2857 0
 921 0004 1F28     		cmp	r0, #31
 922 0006 02D9     		bls	.L73
2857:Generated_Source\PSoC4/CyLib.c **** 
 923              		.loc 1 2857 0 is_stmt 0 discriminator 1
 924 0008 0020     		movs	r0, #0
 925              	.LVL60:
 926 000a FFF7FEFF 		bl	CyHalt
 927              	.LVL61:
 928              	.L73:
2859:Generated_Source\PSoC4/CyLib.c **** }
 929              		.loc 1 2859 0 is_stmt 1
 930 000e 1034     		adds	r4, r4, #16
 931 0010 A400     		lsls	r4, r4, #2
 932 0012 8023     		movs	r3, #128
 933 0014 9B05     		lsls	r3, r3, #22
 934 0016 9C46     		mov	ip, r3
 935 0018 6444     		add	r4, r4, ip
 936 001a 2068     		ldr	r0, [r4]
2860:Generated_Source\PSoC4/CyLib.c **** 
 937              		.loc 1 2860 0
 938              		@ sp needed
 939 001c 10BD     		pop	{r4, pc}
 940              		.cfi_endproc
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 71


 941              	.LFE21:
 942              		.size	CyIntGetVector, .-CyIntGetVector
 943 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 944              		.align	2
 945              		.global	CyIntSetPriority
 946              		.code	16
 947              		.thumb_func
 948              		.type	CyIntSetPriority, %function
 949              	CyIntSetPriority:
 950              	.LFB22:
2873:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 951              		.loc 1 2873 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              	.LVL62:
 956 0000 70B5     		push	{r4, r5, r6, lr}
 957              		.cfi_def_cfa_offset 16
 958              		.cfi_offset 4, -16
 959              		.cfi_offset 5, -12
 960              		.cfi_offset 6, -8
 961              		.cfi_offset 14, -4
 962 0002 0400     		movs	r4, r0
 963 0004 0E00     		movs	r6, r1
2878:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 964              		.loc 1 2878 0
 965 0006 0329     		cmp	r1, #3
 966 0008 02D9     		bls	.L75
2878:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 967              		.loc 1 2878 0 is_stmt 0 discriminator 1
 968 000a 0020     		movs	r0, #0
 969              	.LVL63:
 970 000c FFF7FEFF 		bl	CyHalt
 971              	.LVL64:
 972              	.L75:
2879:Generated_Source\PSoC4/CyLib.c **** 
 973              		.loc 1 2879 0 is_stmt 1
 974 0010 1F2C     		cmp	r4, #31
 975 0012 02D9     		bls	.L76
2879:Generated_Source\PSoC4/CyLib.c **** 
 976              		.loc 1 2879 0 is_stmt 0 discriminator 1
 977 0014 0020     		movs	r0, #0
 978 0016 FFF7FEFF 		bl	CyHalt
 979              	.LVL65:
 980              	.L76:
2881:Generated_Source\PSoC4/CyLib.c **** 
 981              		.loc 1 2881 0 is_stmt 1
 982 001a 0325     		movs	r5, #3
 983 001c 2540     		ands	r5, r4
 984 001e ED00     		lsls	r5, r5, #3
 985 0020 0635     		adds	r5, r5, #6
 986              	.LVL66:
2883:Generated_Source\PSoC4/CyLib.c **** 
 987              		.loc 1 2883 0
 988 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 989              	.LVL67:
2885:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 72


 990              		.loc 1 2885 0
 991 0026 A408     		lsrs	r4, r4, #2
 992 0028 A400     		lsls	r4, r4, #2
 993 002a 074B     		ldr	r3, .L77
 994 002c 9C46     		mov	ip, r3
 995 002e 6444     		add	r4, r4, ip
 996 0030 2168     		ldr	r1, [r4]
 997              	.LVL68:
2886:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 998              		.loc 1 2886 0
 999 0032 0323     		movs	r3, #3
 1000 0034 AB40     		lsls	r3, r3, r5
 1001 0036 9943     		bics	r1, r3
 1002              	.LVL69:
 1003 0038 0B00     		movs	r3, r1
 1004              	.LVL70:
2887:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1005              		.loc 1 2887 0
 1006 003a 3100     		movs	r1, r6
 1007              	.LVL71:
 1008 003c A940     		lsls	r1, r1, r5
 1009 003e 1943     		orrs	r1, r3
 1010              	.LVL72:
2888:Generated_Source\PSoC4/CyLib.c **** 
 1011              		.loc 1 2888 0
 1012 0040 2160     		str	r1, [r4]
2890:Generated_Source\PSoC4/CyLib.c **** }
 1013              		.loc 1 2890 0
 1014 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1015              	.LVL73:
2891:Generated_Source\PSoC4/CyLib.c **** 
 1016              		.loc 1 2891 0
 1017              		@ sp needed
 1018              	.LVL74:
 1019 0046 70BD     		pop	{r4, r5, r6, pc}
 1020              	.L78:
 1021              		.align	2
 1022              	.L77:
 1023 0048 00E400E0 		.word	-536812544
 1024              		.cfi_endproc
 1025              	.LFE22:
 1026              		.size	CyIntSetPriority, .-CyIntSetPriority
 1027              		.section	.text.CyIntGetPriority,"ax",%progbits
 1028              		.align	2
 1029              		.global	CyIntGetPriority
 1030              		.code	16
 1031              		.thumb_func
 1032              		.type	CyIntGetPriority, %function
 1033              	CyIntGetPriority:
 1034              	.LFB23:
2907:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 1035              		.loc 1 2907 0
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 0
 1038              		@ frame_needed = 0, uses_anonymous_args = 0
 1039              	.LVL75:
 1040 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 73


 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 4, -8
 1043              		.cfi_offset 14, -4
 1044 0002 0400     		movs	r4, r0
2910:Generated_Source\PSoC4/CyLib.c **** 
 1045              		.loc 1 2910 0
 1046 0004 1F28     		cmp	r0, #31
 1047 0006 02D9     		bls	.L80
2910:Generated_Source\PSoC4/CyLib.c **** 
 1048              		.loc 1 2910 0 is_stmt 0 discriminator 1
 1049 0008 0020     		movs	r0, #0
 1050              	.LVL76:
 1051 000a FFF7FEFF 		bl	CyHalt
 1052              	.LVL77:
 1053              	.L80:
2912:Generated_Source\PSoC4/CyLib.c **** 
 1054              		.loc 1 2912 0 is_stmt 1
 1055 000e A308     		lsrs	r3, r4, #2
 1056 0010 9B00     		lsls	r3, r3, #2
 1057 0012 054A     		ldr	r2, .L81
 1058 0014 9446     		mov	ip, r2
 1059 0016 6344     		add	r3, r3, ip
 1060 0018 1868     		ldr	r0, [r3]
 1061 001a 0323     		movs	r3, #3
 1062 001c 1C40     		ands	r4, r3
 1063 001e E400     		lsls	r4, r4, #3
 1064 0020 0634     		adds	r4, r4, #6
 1065 0022 E040     		lsrs	r0, r0, r4
 1066              	.LVL78:
2914:Generated_Source\PSoC4/CyLib.c **** }
 1067              		.loc 1 2914 0
 1068 0024 1840     		ands	r0, r3
 1069              	.LVL79:
2915:Generated_Source\PSoC4/CyLib.c **** 
 1070              		.loc 1 2915 0
 1071              		@ sp needed
 1072 0026 10BD     		pop	{r4, pc}
 1073              	.L82:
 1074              		.align	2
 1075              	.L81:
 1076 0028 00E400E0 		.word	-536812544
 1077              		.cfi_endproc
 1078              	.LFE23:
 1079              		.size	CyIntGetPriority, .-CyIntGetPriority
 1080              		.section	.text.CySoftwareReset,"ax",%progbits
 1081              		.align	2
 1082              		.global	CySoftwareReset
 1083              		.code	16
 1084              		.thumb_func
 1085              		.type	CySoftwareReset, %function
 1086              	CySoftwareReset:
 1087              	.LFB30:
3020:Generated_Source\PSoC4/CyLib.c **** 
3021:Generated_Source\PSoC4/CyLib.c **** 
3022:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3023:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
3024:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 74


3025:Generated_Source\PSoC4/CyLib.c **** *
3026:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
3027:Generated_Source\PSoC4/CyLib.c **** *
3028:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3029:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
3030:Generated_Source\PSoC4/CyLib.c **** {
 1088              		.loc 1 3030 0
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 0
 1091              		@ frame_needed = 0, uses_anonymous_args = 0
 1092              		@ link register save eliminated.
3031:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
3032:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
3033:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
3034:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
3035:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1093              		.loc 1 3035 0
 1094 0000 034A     		ldr	r2, .L84
 1095 0002 1368     		ldr	r3, [r2]
 1096 0004 1B04     		lsls	r3, r3, #16
 1097 0006 1B0C     		lsrs	r3, r3, #16
3036:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1098              		.loc 1 3036 0
 1099 0008 0249     		ldr	r1, .L84+4
 1100 000a 0B43     		orrs	r3, r1
3035:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1101              		.loc 1 3035 0
 1102 000c 1360     		str	r3, [r2]
3037:Generated_Source\PSoC4/CyLib.c **** }
 1103              		.loc 1 3037 0
 1104              		@ sp needed
 1105 000e 7047     		bx	lr
 1106              	.L85:
 1107              		.align	2
 1108              	.L84:
 1109 0010 0CED00E0 		.word	-536810228
 1110 0014 0400FA05 		.word	100270084
 1111              		.cfi_endproc
 1112              	.LFE30:
 1113              		.size	CySoftwareReset, .-CySoftwareReset
 1114              		.section	.text.CyDelay,"ax",%progbits
 1115              		.align	2
 1116              		.global	CyDelay
 1117              		.code	16
 1118              		.thumb_func
 1119              		.type	CyDelay, %function
 1120              	CyDelay:
 1121              	.LFB31:
3038:Generated_Source\PSoC4/CyLib.c **** 
3039:Generated_Source\PSoC4/CyLib.c **** 
3040:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3041:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
3042:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3043:Generated_Source\PSoC4/CyLib.c **** *
3044:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
3045:Generated_Source\PSoC4/CyLib.c **** *
3046:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 75


3047:Generated_Source\PSoC4/CyLib.c **** *
3048:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3049:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
3050:Generated_Source\PSoC4/CyLib.c **** {
 1122              		.loc 1 3050 0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 0
 1125              		@ frame_needed = 0, uses_anonymous_args = 0
 1126              	.LVL80:
 1127 0000 10B5     		push	{r4, lr}
 1128              		.cfi_def_cfa_offset 8
 1129              		.cfi_offset 4, -8
 1130              		.cfi_offset 14, -4
 1131 0002 0400     		movs	r4, r0
3051:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1132              		.loc 1 3051 0
 1133 0004 06E0     		b	.L87
 1134              	.LVL81:
 1135              	.L88:
3052:Generated_Source\PSoC4/CyLib.c ****     {
3053:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
3054:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
3055:Generated_Source\PSoC4/CyLib.c ****          */
3056:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1136              		.loc 1 3056 0
 1137 0006 084B     		ldr	r3, .L89
 1138 0008 5868     		ldr	r0, [r3, #4]
 1139 000a FFF7FEFF 		bl	CyDelayCycles
 1140              	.LVL82:
3057:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1141              		.loc 1 3057 0
 1142 000e 074B     		ldr	r3, .L89+4
 1143 0010 9C46     		mov	ip, r3
 1144 0012 6444     		add	r4, r4, ip
 1145              	.LVL83:
 1146              	.L87:
3051:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1147              		.loc 1 3051 0
 1148 0014 8023     		movs	r3, #128
 1149 0016 1B02     		lsls	r3, r3, #8
 1150 0018 9C42     		cmp	r4, r3
 1151 001a F4D8     		bhi	.L88
3058:Generated_Source\PSoC4/CyLib.c ****     }
3059:Generated_Source\PSoC4/CyLib.c **** 
3060:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1152              		.loc 1 3060 0
 1153 001c 024B     		ldr	r3, .L89
 1154 001e 9868     		ldr	r0, [r3, #8]
 1155 0020 6043     		muls	r0, r4
 1156 0022 FFF7FEFF 		bl	CyDelayCycles
 1157              	.LVL84:
3061:Generated_Source\PSoC4/CyLib.c **** }
 1158              		.loc 1 3061 0
 1159              		@ sp needed
 1160              	.LVL85:
 1161 0026 10BD     		pop	{r4, pc}
 1162              	.L90:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 76


 1163              		.align	2
 1164              	.L89:
 1165 0028 00000000 		.word	.LANCHOR1
 1166 002c 0080FFFF 		.word	-32768
 1167              		.cfi_endproc
 1168              	.LFE31:
 1169              		.size	CyDelay, .-CyDelay
 1170              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 1171              		.align	2
 1172              		.global	CySysClkImoEnableWcoLock
 1173              		.code	16
 1174              		.thumb_func
 1175              		.type	CySysClkImoEnableWcoLock, %function
 1176              	CySysClkImoEnableWcoLock:
 1177              	.LFB3:
 168:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1178              		.loc 1 168 0
 1179              		.cfi_startproc
 1180              		@ args = 0, pretend = 0, frame = 8
 1181              		@ frame_needed = 0, uses_anonymous_args = 0
 1182 0000 70B5     		push	{r4, r5, r6, lr}
 1183              		.cfi_def_cfa_offset 16
 1184              		.cfi_offset 4, -16
 1185              		.cfi_offset 5, -12
 1186              		.cfi_offset 6, -8
 1187              		.cfi_offset 14, -4
 1188 0002 82B0     		sub	sp, sp, #8
 1189              		.cfi_def_cfa_offset 24
 1190              	.LVL86:
 179:Generated_Source\PSoC4/CyLib.c ****         {
 1191              		.loc 1 179 0
 1192 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 1193              	.LVL87:
 1194 0008 0028     		cmp	r0, #0
 1195 000a 5DD0     		beq	.L91
 181:Generated_Source\PSoC4/CyLib.c **** 
 1196              		.loc 1 181 0
 1197 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1198              	.LVL88:
 1199 0010 0500     		movs	r5, r0
 1200              	.LVL89:
 193:Generated_Source\PSoC4/CyLib.c ****                 {
 1201              		.loc 1 193 0
 1202 0012 0023     		movs	r3, #0
 1203 0014 0AE0     		b	.L93
 1204              	.LVL90:
 1205              	.L96:
 195:Generated_Source\PSoC4/CyLib.c ****                     {
 1206              		.loc 1 195 0
 1207 0016 2D4A     		ldr	r2, .L100
 1208 0018 1268     		ldr	r2, [r2]
 1209 001a 3F21     		movs	r1, #63
 1210 001c 0A40     		ands	r2, r1
 1211 001e 2C49     		ldr	r1, .L100+4
 1212 0020 C95C     		ldrb	r1, [r1, r3]
 1213 0022 8A42     		cmp	r2, r1
 1214 0024 01D1     		bne	.L94
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 77


 197:Generated_Source\PSoC4/CyLib.c ****                         break;
 1215              		.loc 1 197 0
 1216 0026 0333     		adds	r3, r3, #3
 1217              	.LVL91:
 198:Generated_Source\PSoC4/CyLib.c ****                     }
 1218              		.loc 1 198 0
 1219 0028 03E0     		b	.L95
 1220              	.LVL92:
 1221              	.L94:
 193:Generated_Source\PSoC4/CyLib.c ****                 {
 1222              		.loc 1 193 0 discriminator 2
 1223 002a 0133     		adds	r3, r3, #1
 1224              	.LVL93:
 1225              	.L93:
 193:Generated_Source\PSoC4/CyLib.c ****                 {
 1226              		.loc 1 193 0 is_stmt 0 discriminator 1
 1227 002c 2D2B     		cmp	r3, #45
 1228 002e F2D9     		bls	.L96
 192:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 1229              		.loc 1 192 0 is_stmt 1
 1230 0030 0323     		movs	r3, #3
 1231              	.LVL94:
 1232              	.L95:
 215:Generated_Source\PSoC4/CyLib.c ****             
 1233              		.loc 1 215 0
 1234 0032 0021     		movs	r1, #0
 1235 0034 274A     		ldr	r2, .L100+8
 1236 0036 1160     		str	r1, [r2]
 219:Generated_Source\PSoC4/CyLib.c ****                 {
 1237              		.loc 1 219 0
 1238 0038 274A     		ldr	r2, .L100+12
 1239 003a 1268     		ldr	r2, [r2]
 1240 003c D206     		lsls	r2, r2, #27
 1241 003e 06D1     		bne	.L97
 221:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 1242              		.loc 1 221 0
 1243 0040 2548     		ldr	r0, .L100+12
 1244 0042 0268     		ldr	r2, [r0]
 1245 0044 1F31     		adds	r1, r1, #31
 1246 0046 8A43     		bics	r2, r1
 1247 0048 1339     		subs	r1, r1, #19
 1248 004a 0A43     		orrs	r2, r1
 1249 004c 0260     		str	r2, [r0]
 1250              	.L97:
 226:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1251              		.loc 1 226 0
 1252 004e 234C     		ldr	r4, .L100+16
 1253 0050 2168     		ldr	r1, [r4]
 1254 0052 234A     		ldr	r2, .L100+20
 1255 0054 1140     		ands	r1, r2
 1256              	.LVL95:
 232:Generated_Source\PSoC4/CyLib.c **** 
 1257              		.loc 1 232 0
 1258 0056 234A     		ldr	r2, .L100+24
 1259 0058 5A43     		muls	r2, r3
 1260 005a 8023     		movs	r3, #128
 1261              	.LVL96:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 78


 1262 005c DB01     		lsls	r3, r3, #7
 1263 005e 9C46     		mov	ip, r3
 1264 0060 6244     		add	r2, r2, ip
 1265 0062 D20B     		lsrs	r2, r2, #15
 1266 0064 013A     		subs	r2, r2, #1
 1267 0066 5205     		lsls	r2, r2, #21
 1268 0068 520D     		lsrs	r2, r2, #21
 1269 006a 0B00     		movs	r3, r1
 1270 006c 1343     		orrs	r3, r2
 1271              	.LVL97:
 235:Generated_Source\PSoC4/CyLib.c **** 
 1272              		.loc 1 235 0
 1273 006e A022     		movs	r2, #160
 1274 0070 5203     		lsls	r2, r2, #13
 1275 0072 1343     		orrs	r3, r2
 1276              	.LVL98:
 237:Generated_Source\PSoC4/CyLib.c ****             
 1277              		.loc 1 237 0
 1278 0074 2360     		str	r3, [r4]
 239:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1279              		.loc 1 239 0
 1280 0076 1C4B     		ldr	r3, .L100+28
 1281              	.LVL99:
 1282 0078 1B68     		ldr	r3, [r3]
 1283 007a 0193     		str	r3, [sp, #4]
 1284              	.LVL100:
 240:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1285              		.loc 1 240 0
 1286 007c 3020     		movs	r0, #48
 1287 007e FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1288              	.LVL101:
 241:Generated_Source\PSoC4/CyLib.c **** 
 1289              		.loc 1 241 0
 1290 0082 1A4A     		ldr	r2, .L100+32
 1291 0084 1368     		ldr	r3, [r2]
 1292 0086 8021     		movs	r1, #128
 1293 0088 C905     		lsls	r1, r1, #23
 1294 008a 0B43     		orrs	r3, r1
 1295 008c 1360     		str	r3, [r2]
 243:Generated_Source\PSoC4/CyLib.c ****             
 1296              		.loc 1 243 0
 1297 008e 2668     		ldr	r6, [r4]
 1298 0090 174B     		ldr	r3, .L100+36
 1299 0092 1E40     		ands	r6, r3
 1300              	.LVL102:
 176:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 1301              		.loc 1 176 0
 1302 0094 0024     		movs	r4, #0
 245:Generated_Source\PSoC4/CyLib.c ****             {
 1303              		.loc 1 245 0
 1304 0096 07E0     		b	.L98
 1305              	.LVL103:
 1306              	.L99:
 247:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 1307              		.loc 1 247 0
 1308 0098 0120     		movs	r0, #1
 1309 009a FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 79


 1310              	.LVL104:
 248:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 1311              		.loc 1 248 0
 1312 009e 1034     		adds	r4, r4, #16
 1313              	.LVL105:
 249:Generated_Source\PSoC4/CyLib.c ****             }
 1314              		.loc 1 249 0
 1315 00a0 A305     		lsls	r3, r4, #22
 1316 00a2 3343     		orrs	r3, r6
 1317 00a4 0D4A     		ldr	r2, .L100+16
 1318 00a6 1360     		str	r3, [r2]
 1319              	.LVL106:
 1320              	.L98:
 245:Generated_Source\PSoC4/CyLib.c ****             {
 1321              		.loc 1 245 0
 1322 00a8 EE2C     		cmp	r4, #238
 1323 00aa F5D9     		bls	.L99
 252:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 1324              		.loc 1 252 0
 1325 00ac 0120     		movs	r0, #1
 1326 00ae FFF7FEFF 		bl	CyDelay
 1327              	.LVL107:
 253:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 1328              		.loc 1 253 0
 1329 00b2 FF23     		movs	r3, #255
 1330 00b4 9B05     		lsls	r3, r3, #22
 1331 00b6 1E43     		orrs	r6, r3
 1332              	.LVL108:
 1333 00b8 084B     		ldr	r3, .L100+16
 1334 00ba 1E60     		str	r6, [r3]
 256:Generated_Source\PSoC4/CyLib.c **** 
 1335              		.loc 1 256 0
 1336 00bc 019A     		ldr	r2, [sp, #4]
 1337 00be 0A4B     		ldr	r3, .L100+28
 1338 00c0 1A60     		str	r2, [r3]
 258:Generated_Source\PSoC4/CyLib.c ****         }
 1339              		.loc 1 258 0
 1340 00c2 2800     		movs	r0, r5
 1341 00c4 FFF7FEFF 		bl	CyExitCriticalSection
 1342              	.LVL109:
 1343              	.L91:
 260:Generated_Source\PSoC4/CyLib.c **** 
 1344              		.loc 1 260 0
 1345 00c8 02B0     		add	sp, sp, #8
 1346              		@ sp needed
 1347 00ca 70BD     		pop	{r4, r5, r6, pc}
 1348              	.L101:
 1349              		.align	2
 1350              	.L100:
 1351 00cc 2CFF0B40 		.word	1074528044
 1352 00d0 00000000 		.word	.LANCHOR0
 1353 00d4 28FF0B40 		.word	1074528040
 1354 00d8 34FF0B40 		.word	1074528052
 1355 00dc 08002240 		.word	1075970056
 1356 00e0 00F800C0 		.word	-1073678336
 1357 00e4 40420F00 		.word	1000000
 1358 00e8 30001040 		.word	1074790448
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 80


 1359 00ec 00002240 		.word	1075970048
 1360 00f0 FFFF3FC0 		.word	-1069547521
 1361              		.cfi_endproc
 1362              	.LFE3:
 1363              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1364              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1365              		.align	2
 1366              		.global	CySysClkWriteImoFreq
 1367              		.code	16
 1368              		.thumb_func
 1369              		.type	CySysClkWriteImoFreq, %function
 1370              	CySysClkWriteImoFreq:
 1371              	.LFB10:
 769:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1372              		.loc 1 769 0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 24
 1375              		@ frame_needed = 0, uses_anonymous_args = 0
 1376              	.LVL110:
 1377 0000 30B5     		push	{r4, r5, lr}
 1378              		.cfi_def_cfa_offset 12
 1379              		.cfi_offset 4, -12
 1380              		.cfi_offset 5, -8
 1381              		.cfi_offset 14, -4
 1382 0002 87B0     		sub	sp, sp, #28
 1383              		.cfi_def_cfa_offset 40
 1384 0004 0400     		movs	r4, r0
 1385              	.LVL111:
 791:Generated_Source\PSoC4/CyLib.c **** 
 1386              		.loc 1 791 0
 1387 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1388              	.LVL112:
 1389 000a 0500     		movs	r5, r0
 1390              	.LVL113:
 794:Generated_Source\PSoC4/CyLib.c ****             {
 1391              		.loc 1 794 0
 1392 000c FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1393              	.LVL114:
 1394 0010 0028     		cmp	r0, #0
 1395 0012 03D0     		beq	.L105
 1396              	.LVL115:
 797:Generated_Source\PSoC4/CyLib.c ****             }
 1397              		.loc 1 797 0
 1398 0014 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1399              	.LVL116:
 796:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 1400              		.loc 1 796 0
 1401 0018 0121     		movs	r1, #1
 1402 001a 00E0     		b	.L103
 1403              	.LVL117:
 1404              	.L105:
 781:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 1405              		.loc 1 781 0
 1406 001c 0021     		movs	r1, #0
 1407              	.LVL118:
 1408              	.L103:
 825:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 81


 1409              		.loc 1 825 0
 1410 001e 104B     		ldr	r3, .L106
 1411 0020 1B68     		ldr	r3, [r3]
 1412 0022 0093     		str	r3, [sp]
 826:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 1413              		.loc 1 826 0
 1414 0024 0F4B     		ldr	r3, .L106+4
 1415 0026 1B68     		ldr	r3, [r3]
 1416 0028 0193     		str	r3, [sp, #4]
 827:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 1417              		.loc 1 827 0
 1418 002a 033C     		subs	r4, r4, #3
 1419              	.LVL119:
 1420 002c 0E4B     		ldr	r3, .L106+8
 1421 002e 1B5D     		ldrb	r3, [r3, r4]
 1422 0030 0293     		str	r3, [sp, #8]
 828:Generated_Source\PSoC4/CyLib.c **** 
 1423              		.loc 1 828 0
 1424 0032 0E4B     		ldr	r3, .L106+12
 1425 0034 1B68     		ldr	r3, [r3]
 1426 0036 0393     		str	r3, [sp, #12]
 830:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 1427              		.loc 1 830 0
 1428 0038 04AA     		add	r2, sp, #16
 1429 003a 0D4B     		ldr	r3, .L106+16
 1430 003c 0493     		str	r3, [sp, #16]
 833:Generated_Source\PSoC4/CyLib.c **** 
 1431              		.loc 1 833 0
 1432 003e 6B46     		mov	r3, sp
 1433 0040 0593     		str	r3, [sp, #20]
 835:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 1434              		.loc 1 835 0
 1435 0042 0C4B     		ldr	r3, .L106+20
 1436 0044 1A60     		str	r2, [r3]
 836:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 1437              		.loc 1 836 0
 1438 0046 0C48     		ldr	r0, .L106+24
 1439 0048 0C4A     		ldr	r2, .L106+28
 1440 004a 1060     		str	r0, [r2]
 837:Generated_Source\PSoC4/CyLib.c **** 
 1441              		.loc 1 837 0
 1442 004c 1B68     		ldr	r3, [r3]
 935:Generated_Source\PSoC4/CyLib.c ****             {
 1443              		.loc 1 935 0
 1444 004e 0129     		cmp	r1, #1
 1445 0050 01D1     		bne	.L104
 937:Generated_Source\PSoC4/CyLib.c ****             }
 1446              		.loc 1 937 0
 1447 0052 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1448              	.LVL120:
 1449              	.L104:
 948:Generated_Source\PSoC4/CyLib.c ****     }
 1450              		.loc 1 948 0
 1451 0056 2800     		movs	r0, r5
 1452 0058 FFF7FEFF 		bl	CyExitCriticalSection
 1453              	.LVL121:
 949:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 82


 1454              		.loc 1 949 0
 1455 005c 07B0     		add	sp, sp, #28
 1456              		@ sp needed
 1457              	.LVL122:
 1458              	.LVL123:
 1459 005e 30BD     		pop	{r4, r5, pc}
 1460              	.L107:
 1461              		.align	2
 1462              	.L106:
 1463 0060 08010B40 		.word	1074462984
 1464 0064 00010B40 		.word	1074462976
 1465 0068 00000000 		.word	.LANCHOR0
 1466 006c 30001040 		.word	1074790448
 1467 0070 B6EA0000 		.word	60086
 1468 0074 08001040 		.word	1074790408
 1469 0078 17000080 		.word	-2147483625
 1470 007c 04001040 		.word	1074790404
 1471              		.cfi_endproc
 1472              	.LFE10:
 1473              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1474              		.section	.text.CyDelayUs,"ax",%progbits
 1475              		.align	2
 1476              		.global	CyDelayUs
 1477              		.code	16
 1478              		.thumb_func
 1479              		.type	CyDelayUs, %function
 1480              	CyDelayUs:
 1481              	.LFB32:
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3065:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
3066:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3067:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
3068:Generated_Source\PSoC4/CyLib.c **** *
3069:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
3070:Generated_Source\PSoC4/CyLib.c **** *
3071:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3072:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
3073:Generated_Source\PSoC4/CyLib.c **** {
 1482              		.loc 1 3073 0
 1483              		.cfi_startproc
 1484              		@ args = 0, pretend = 0, frame = 0
 1485              		@ frame_needed = 0, uses_anonymous_args = 0
 1486              	.LVL124:
 1487 0000 10B5     		push	{r4, lr}
 1488              		.cfi_def_cfa_offset 8
 1489              		.cfi_offset 4, -8
 1490              		.cfi_offset 14, -4
3074:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1491              		.loc 1 3074 0
 1492 0002 034B     		ldr	r3, .L109
 1493 0004 1B7B     		ldrb	r3, [r3, #12]
 1494 0006 5843     		muls	r0, r3
 1495              	.LVL125:
 1496 0008 FFF7FEFF 		bl	CyDelayCycles
 1497              	.LVL126:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 83


3075:Generated_Source\PSoC4/CyLib.c **** }
 1498              		.loc 1 3075 0
 1499              		@ sp needed
 1500 000c 10BD     		pop	{r4, pc}
 1501              	.L110:
 1502 000e C046     		.align	2
 1503              	.L109:
 1504 0010 00000000 		.word	.LANCHOR1
 1505              		.cfi_endproc
 1506              	.LFE32:
 1507              		.size	CyDelayUs, .-CyDelayUs
 1508              		.section	.text.CySysLvdEnable,"ax",%progbits
 1509              		.align	2
 1510              		.global	CySysLvdEnable
 1511              		.code	16
 1512              		.thumb_func
 1513              		.type	CySysLvdEnable, %function
 1514              	CySysLvdEnable:
 1515              	.LFB11:
2609:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1516              		.loc 1 2609 0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 0
 1519              		@ frame_needed = 0, uses_anonymous_args = 0
 1520              	.LVL127:
 1521 0000 70B5     		push	{r4, r5, r6, lr}
 1522              		.cfi_def_cfa_offset 16
 1523              		.cfi_offset 4, -16
 1524              		.cfi_offset 5, -12
 1525              		.cfi_offset 6, -8
 1526              		.cfi_offset 14, -4
 1527 0002 0300     		movs	r3, r0
2611:Generated_Source\PSoC4/CyLib.c **** 
 1528              		.loc 1 2611 0
 1529 0004 0D4C     		ldr	r4, .L112
 1530 0006 2268     		ldr	r2, [r4]
 1531 0008 0225     		movs	r5, #2
 1532 000a AA43     		bics	r2, r5
 1533 000c 2260     		str	r2, [r4]
2614:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1534              		.loc 1 2614 0
 1535 000e 0C4A     		ldr	r2, .L112+4
 1536 0010 1168     		ldr	r1, [r2]
 1537 0012 1E20     		movs	r0, #30
 1538              	.LVL128:
 1539 0014 8143     		bics	r1, r0
2615:Generated_Source\PSoC4/CyLib.c **** 
 1540              		.loc 1 2615 0
 1541 0016 5B00     		lsls	r3, r3, #1
 1542              	.LVL129:
 1543 0018 1840     		ands	r0, r3
2614:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1544              		.loc 1 2614 0
 1545 001a 0843     		orrs	r0, r1
 1546 001c 1060     		str	r0, [r2]
2618:Generated_Source\PSoC4/CyLib.c **** 
 1547              		.loc 1 2618 0
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 84


 1548 001e 1168     		ldr	r1, [r2]
 1549 0020 0123     		movs	r3, #1
 1550 0022 0B43     		orrs	r3, r1
 1551 0024 1360     		str	r3, [r2]
2621:Generated_Source\PSoC4/CyLib.c **** 
 1552              		.loc 1 2621 0
 1553 0026 FA20     		movs	r0, #250
 1554 0028 8000     		lsls	r0, r0, #2
 1555 002a FFF7FEFF 		bl	CyDelayUs
 1556              	.LVL130:
2624:Generated_Source\PSoC4/CyLib.c **** 
 1557              		.loc 1 2624 0
 1558 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1559              	.LVL131:
2627:Generated_Source\PSoC4/CyLib.c ****     }
 1560              		.loc 1 2627 0
 1561 0032 2368     		ldr	r3, [r4]
 1562 0034 1D43     		orrs	r5, r3
 1563 0036 2560     		str	r5, [r4]
2628:Generated_Source\PSoC4/CyLib.c **** 
 1564              		.loc 1 2628 0
 1565              		@ sp needed
 1566 0038 70BD     		pop	{r4, r5, r6, pc}
 1567              	.L113:
 1568 003a C046     		.align	2
 1569              	.L112:
 1570 003c 08000B40 		.word	1074462728
 1571 0040 18000B40 		.word	1074462744
 1572              		.cfi_endproc
 1573              	.LFE11:
 1574              		.size	CySysLvdEnable, .-CySysLvdEnable
 1575              		.global	__aeabi_uidiv
 1576              		.section	.text.CyDelayFreq,"ax",%progbits
 1577              		.align	2
 1578              		.global	CyDelayFreq
 1579              		.code	16
 1580              		.thumb_func
 1581              		.type	CyDelayFreq, %function
 1582              	CyDelayFreq:
 1583              	.LFB33:
3076:Generated_Source\PSoC4/CyLib.c **** 
3077:Generated_Source\PSoC4/CyLib.c **** 
3078:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3079:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
3080:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3081:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
3082:Generated_Source\PSoC4/CyLib.c **** *
3083:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
3084:Generated_Source\PSoC4/CyLib.c **** *
3085:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3086:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
3087:Generated_Source\PSoC4/CyLib.c **** {
 1584              		.loc 1 3087 0
 1585              		.cfi_startproc
 1586              		@ args = 0, pretend = 0, frame = 0
 1587              		@ frame_needed = 0, uses_anonymous_args = 0
 1588              	.LVL132:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 85


 1589 0000 70B5     		push	{r4, r5, r6, lr}
 1590              		.cfi_def_cfa_offset 16
 1591              		.cfi_offset 4, -16
 1592              		.cfi_offset 5, -12
 1593              		.cfi_offset 6, -8
 1594              		.cfi_offset 14, -4
3088:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1595              		.loc 1 3088 0
 1596 0002 0028     		cmp	r0, #0
 1597 0004 02D0     		beq	.L115
3089:Generated_Source\PSoC4/CyLib.c ****     {
3090:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1598              		.loc 1 3090 0
 1599 0006 0C4B     		ldr	r3, .L117
 1600 0008 1861     		str	r0, [r3, #16]
 1601 000a 02E0     		b	.L116
 1602              	.L115:
3091:Generated_Source\PSoC4/CyLib.c ****     }
3092:Generated_Source\PSoC4/CyLib.c ****     else
3093:Generated_Source\PSoC4/CyLib.c ****     {
3094:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1603              		.loc 1 3094 0
 1604 000c 0B4A     		ldr	r2, .L117+4
 1605 000e 0A4B     		ldr	r3, .L117
 1606 0010 1A61     		str	r2, [r3, #16]
 1607              	.L116:
3095:Generated_Source\PSoC4/CyLib.c ****     }
3096:Generated_Source\PSoC4/CyLib.c **** 
3097:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1608              		.loc 1 3097 0
 1609 0012 094C     		ldr	r4, .L117
 1610 0014 2569     		ldr	r5, [r4, #16]
 1611 0016 0A4B     		ldr	r3, .L117+8
 1612 0018 E818     		adds	r0, r5, r3
 1613              	.LVL133:
 1614 001a 0A49     		ldr	r1, .L117+12
 1615 001c FFF7FEFF 		bl	__aeabi_uidiv
 1616              	.LVL134:
 1617 0020 2073     		strb	r0, [r4, #12]
3098:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1618              		.loc 1 3098 0
 1619 0022 094B     		ldr	r3, .L117+16
 1620 0024 E818     		adds	r0, r5, r3
 1621 0026 FA21     		movs	r1, #250
 1622 0028 8900     		lsls	r1, r1, #2
 1623 002a FFF7FEFF 		bl	__aeabi_uidiv
 1624              	.LVL135:
 1625 002e A060     		str	r0, [r4, #8]
3099:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1626              		.loc 1 3099 0
 1627 0030 C003     		lsls	r0, r0, #15
 1628 0032 6060     		str	r0, [r4, #4]
3100:Generated_Source\PSoC4/CyLib.c **** }
 1629              		.loc 1 3100 0
 1630              		@ sp needed
 1631 0034 70BD     		pop	{r4, r5, r6, pc}
 1632              	.L118:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 86


 1633 0036 C046     		.align	2
 1634              	.L117:
 1635 0038 00000000 		.word	.LANCHOR1
 1636 003c 006CDC02 		.word	48000000
 1637 0040 3F420F00 		.word	999999
 1638 0044 40420F00 		.word	1000000
 1639 0048 E7030000 		.word	999
 1640              		.cfi_endproc
 1641              	.LFE33:
 1642              		.size	CyDelayFreq, .-CyDelayFreq
 1643              		.section	.text.CySysTickStop,"ax",%progbits
 1644              		.align	2
 1645              		.global	CySysTickStop
 1646              		.code	16
 1647              		.thumb_func
 1648              		.type	CySysTickStop, %function
 1649              	CySysTickStop:
 1650              	.LFB37:
3101:Generated_Source\PSoC4/CyLib.c **** 
3102:Generated_Source\PSoC4/CyLib.c **** 
3103:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3104:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
3105:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3106:Generated_Source\PSoC4/CyLib.c **** *
3107:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
3108:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
3109:Generated_Source\PSoC4/CyLib.c **** *
3110:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
3111:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
3112:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
3113:Generated_Source\PSoC4/CyLib.c **** *
3114:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3115:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3116:Generated_Source\PSoC4/CyLib.c **** *
3117:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3118:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
3119:Generated_Source\PSoC4/CyLib.c **** {
3120:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
3121:Generated_Source\PSoC4/CyLib.c ****     {
3122:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
3123:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
3124:Generated_Source\PSoC4/CyLib.c ****     }
3125:Generated_Source\PSoC4/CyLib.c **** 
3126:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
3127:Generated_Source\PSoC4/CyLib.c **** }
3128:Generated_Source\PSoC4/CyLib.c **** 
3129:Generated_Source\PSoC4/CyLib.c **** 
3130:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3131:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
3132:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3133:Generated_Source\PSoC4/CyLib.c **** *
3134:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
3135:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
3136:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
3137:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
3138:Generated_Source\PSoC4/CyLib.c **** *
3139:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 87


3140:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
3141:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
3142:Generated_Source\PSoC4/CyLib.c **** *
3143:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3144:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3145:Generated_Source\PSoC4/CyLib.c **** *
3146:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3147:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
3148:Generated_Source\PSoC4/CyLib.c **** {
3149:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3150:Generated_Source\PSoC4/CyLib.c **** 
3151:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3152:Generated_Source\PSoC4/CyLib.c ****     {
3153:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
3154:Generated_Source\PSoC4/CyLib.c ****     }
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
3157:Generated_Source\PSoC4/CyLib.c **** 
3158:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
3159:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
3160:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3161:Generated_Source\PSoC4/CyLib.c **** 
3162:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
3163:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
3164:Generated_Source\PSoC4/CyLib.c **** }
3165:Generated_Source\PSoC4/CyLib.c **** 
3166:Generated_Source\PSoC4/CyLib.c **** 
3167:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3168:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
3169:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3170:Generated_Source\PSoC4/CyLib.c **** *
3171:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
3172:Generated_Source\PSoC4/CyLib.c **** *
3173:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3174:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3175:Generated_Source\PSoC4/CyLib.c **** *
3176:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3177:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
3178:Generated_Source\PSoC4/CyLib.c **** {
3179:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
3180:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
3181:Generated_Source\PSoC4/CyLib.c **** }
3182:Generated_Source\PSoC4/CyLib.c **** 
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3185:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
3186:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3187:Generated_Source\PSoC4/CyLib.c **** *
3188:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
3189:Generated_Source\PSoC4/CyLib.c **** *
3190:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3191:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3192:Generated_Source\PSoC4/CyLib.c **** *
3193:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3194:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
3195:Generated_Source\PSoC4/CyLib.c **** {
 1651              		.loc 1 3195 0
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 88


 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 0
 1654              		@ frame_needed = 0, uses_anonymous_args = 0
 1655              		@ link register save eliminated.
3196:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1656              		.loc 1 3196 0
 1657 0000 024A     		ldr	r2, .L120
 1658 0002 1368     		ldr	r3, [r2]
 1659 0004 0121     		movs	r1, #1
 1660 0006 8B43     		bics	r3, r1
 1661 0008 1360     		str	r3, [r2]
3197:Generated_Source\PSoC4/CyLib.c **** }
 1662              		.loc 1 3197 0
 1663              		@ sp needed
 1664 000a 7047     		bx	lr
 1665              	.L121:
 1666              		.align	2
 1667              	.L120:
 1668 000c 10E000E0 		.word	-536813552
 1669              		.cfi_endproc
 1670              	.LFE37:
 1671              		.size	CySysTickStop, .-CySysTickStop
 1672              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1673              		.align	2
 1674              		.global	CySysTickEnableInterrupt
 1675              		.code	16
 1676              		.thumb_func
 1677              		.type	CySysTickEnableInterrupt, %function
 1678              	CySysTickEnableInterrupt:
 1679              	.LFB38:
3198:Generated_Source\PSoC4/CyLib.c **** 
3199:Generated_Source\PSoC4/CyLib.c **** 
3200:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3201:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
3202:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3203:Generated_Source\PSoC4/CyLib.c **** *
3204:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
3205:Generated_Source\PSoC4/CyLib.c **** *
3206:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3207:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3208:Generated_Source\PSoC4/CyLib.c **** *
3209:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3210:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
3211:Generated_Source\PSoC4/CyLib.c **** {
 1680              		.loc 1 3211 0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 0
 1683              		@ frame_needed = 0, uses_anonymous_args = 0
 1684              		@ link register save eliminated.
3212:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1685              		.loc 1 3212 0
 1686 0000 024A     		ldr	r2, .L123
 1687 0002 1168     		ldr	r1, [r2]
 1688 0004 0223     		movs	r3, #2
 1689 0006 0B43     		orrs	r3, r1
 1690 0008 1360     		str	r3, [r2]
3213:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 89


 1691              		.loc 1 3213 0
 1692              		@ sp needed
 1693 000a 7047     		bx	lr
 1694              	.L124:
 1695              		.align	2
 1696              	.L123:
 1697 000c 10E000E0 		.word	-536813552
 1698              		.cfi_endproc
 1699              	.LFE38:
 1700              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1701              		.section	.text.CySysTickEnable,"ax",%progbits
 1702              		.align	2
 1703              		.global	CySysTickEnable
 1704              		.code	16
 1705              		.thumb_func
 1706              		.type	CySysTickEnable, %function
 1707              	CySysTickEnable:
 1708              	.LFB36:
3178:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1709              		.loc 1 3178 0
 1710              		.cfi_startproc
 1711              		@ args = 0, pretend = 0, frame = 0
 1712              		@ frame_needed = 0, uses_anonymous_args = 0
 1713 0000 10B5     		push	{r4, lr}
 1714              		.cfi_def_cfa_offset 8
 1715              		.cfi_offset 4, -8
 1716              		.cfi_offset 14, -4
3179:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1717              		.loc 1 3179 0
 1718 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1719              	.LVL136:
3180:Generated_Source\PSoC4/CyLib.c **** }
 1720              		.loc 1 3180 0
 1721 0006 034A     		ldr	r2, .L126
 1722 0008 1168     		ldr	r1, [r2]
 1723 000a 0123     		movs	r3, #1
 1724 000c 0B43     		orrs	r3, r1
 1725 000e 1360     		str	r3, [r2]
3181:Generated_Source\PSoC4/CyLib.c **** 
 1726              		.loc 1 3181 0
 1727              		@ sp needed
 1728 0010 10BD     		pop	{r4, pc}
 1729              	.L127:
 1730 0012 C046     		.align	2
 1731              	.L126:
 1732 0014 10E000E0 		.word	-536813552
 1733              		.cfi_endproc
 1734              	.LFE36:
 1735              		.size	CySysTickEnable, .-CySysTickEnable
 1736              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1737              		.align	2
 1738              		.global	CySysTickDisableInterrupt
 1739              		.code	16
 1740              		.thumb_func
 1741              		.type	CySysTickDisableInterrupt, %function
 1742              	CySysTickDisableInterrupt:
 1743              	.LFB39:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 90


3214:Generated_Source\PSoC4/CyLib.c **** 
3215:Generated_Source\PSoC4/CyLib.c **** 
3216:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3217:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
3218:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3219:Generated_Source\PSoC4/CyLib.c **** *
3220:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
3221:Generated_Source\PSoC4/CyLib.c **** *
3222:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3223:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3224:Generated_Source\PSoC4/CyLib.c **** *
3225:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3226:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
3227:Generated_Source\PSoC4/CyLib.c **** {
 1744              		.loc 1 3227 0
 1745              		.cfi_startproc
 1746              		@ args = 0, pretend = 0, frame = 0
 1747              		@ frame_needed = 0, uses_anonymous_args = 0
 1748              		@ link register save eliminated.
3228:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1749              		.loc 1 3228 0
 1750 0000 024A     		ldr	r2, .L129
 1751 0002 1368     		ldr	r3, [r2]
 1752 0004 0221     		movs	r1, #2
 1753 0006 8B43     		bics	r3, r1
 1754 0008 1360     		str	r3, [r2]
3229:Generated_Source\PSoC4/CyLib.c **** }
 1755              		.loc 1 3229 0
 1756              		@ sp needed
 1757 000a 7047     		bx	lr
 1758              	.L130:
 1759              		.align	2
 1760              	.L129:
 1761 000c 10E000E0 		.word	-536813552
 1762              		.cfi_endproc
 1763              	.LFE39:
 1764              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1765              		.section	.text.CySysTickSetReload,"ax",%progbits
 1766              		.align	2
 1767              		.global	CySysTickSetReload
 1768              		.code	16
 1769              		.thumb_func
 1770              		.type	CySysTickSetReload, %function
 1771              	CySysTickSetReload:
 1772              	.LFB40:
3230:Generated_Source\PSoC4/CyLib.c **** 
3231:Generated_Source\PSoC4/CyLib.c **** 
3232:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3233:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
3234:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3235:Generated_Source\PSoC4/CyLib.c **** *
3236:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
3237:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
3238:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
3239:Generated_Source\PSoC4/CyLib.c **** *
3240:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
3241:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 91


3242:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3243:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
3244:Generated_Source\PSoC4/CyLib.c **** {
 1773              		.loc 1 3244 0
 1774              		.cfi_startproc
 1775              		@ args = 0, pretend = 0, frame = 0
 1776              		@ frame_needed = 0, uses_anonymous_args = 0
 1777              		@ link register save eliminated.
 1778              	.LVL137:
3245:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1779              		.loc 1 3245 0
 1780 0000 0002     		lsls	r0, r0, #8
 1781              	.LVL138:
 1782 0002 000A     		lsrs	r0, r0, #8
 1783 0004 014B     		ldr	r3, .L132
 1784 0006 1860     		str	r0, [r3]
3246:Generated_Source\PSoC4/CyLib.c **** }
 1785              		.loc 1 3246 0
 1786              		@ sp needed
 1787 0008 7047     		bx	lr
 1788              	.L133:
 1789 000a C046     		.align	2
 1790              	.L132:
 1791 000c 14E000E0 		.word	-536813548
 1792              		.cfi_endproc
 1793              	.LFE40:
 1794              		.size	CySysTickSetReload, .-CySysTickSetReload
 1795              		.section	.text.CySysTickGetReload,"ax",%progbits
 1796              		.align	2
 1797              		.global	CySysTickGetReload
 1798              		.code	16
 1799              		.thumb_func
 1800              		.type	CySysTickGetReload, %function
 1801              	CySysTickGetReload:
 1802              	.LFB41:
3247:Generated_Source\PSoC4/CyLib.c **** 
3248:Generated_Source\PSoC4/CyLib.c **** 
3249:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3250:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
3251:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3252:Generated_Source\PSoC4/CyLib.c **** *
3253:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
3254:Generated_Source\PSoC4/CyLib.c **** *
3255:Generated_Source\PSoC4/CyLib.c **** * \return
3256:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
3257:Generated_Source\PSoC4/CyLib.c **** *
3258:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3259:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
3260:Generated_Source\PSoC4/CyLib.c **** {
 1803              		.loc 1 3260 0
 1804              		.cfi_startproc
 1805              		@ args = 0, pretend = 0, frame = 0
 1806              		@ frame_needed = 0, uses_anonymous_args = 0
 1807              		@ link register save eliminated.
3261:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1808              		.loc 1 3261 0
 1809 0000 024B     		ldr	r3, .L135
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 92


 1810 0002 1868     		ldr	r0, [r3]
 1811 0004 0002     		lsls	r0, r0, #8
 1812 0006 000A     		lsrs	r0, r0, #8
3262:Generated_Source\PSoC4/CyLib.c **** }
 1813              		.loc 1 3262 0
 1814              		@ sp needed
 1815 0008 7047     		bx	lr
 1816              	.L136:
 1817 000a C046     		.align	2
 1818              	.L135:
 1819 000c 14E000E0 		.word	-536813548
 1820              		.cfi_endproc
 1821              	.LFE41:
 1822              		.size	CySysTickGetReload, .-CySysTickGetReload
 1823              		.section	.text.CySysTickGetValue,"ax",%progbits
 1824              		.align	2
 1825              		.global	CySysTickGetValue
 1826              		.code	16
 1827              		.thumb_func
 1828              		.type	CySysTickGetValue, %function
 1829              	CySysTickGetValue:
 1830              	.LFB42:
3263:Generated_Source\PSoC4/CyLib.c **** 
3264:Generated_Source\PSoC4/CyLib.c **** 
3265:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3266:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
3267:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3268:Generated_Source\PSoC4/CyLib.c **** *
3269:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
3270:Generated_Source\PSoC4/CyLib.c **** *
3271:Generated_Source\PSoC4/CyLib.c **** * \return
3272:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
3273:Generated_Source\PSoC4/CyLib.c **** *
3274:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3275:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
3276:Generated_Source\PSoC4/CyLib.c **** {
 1831              		.loc 1 3276 0
 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 0
 1834              		@ frame_needed = 0, uses_anonymous_args = 0
 1835              		@ link register save eliminated.
3277:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1836              		.loc 1 3277 0
 1837 0000 024B     		ldr	r3, .L138
 1838 0002 1868     		ldr	r0, [r3]
 1839 0004 0002     		lsls	r0, r0, #8
 1840 0006 000A     		lsrs	r0, r0, #8
3278:Generated_Source\PSoC4/CyLib.c **** }
 1841              		.loc 1 3278 0
 1842              		@ sp needed
 1843 0008 7047     		bx	lr
 1844              	.L139:
 1845 000a C046     		.align	2
 1846              	.L138:
 1847 000c 18E000E0 		.word	-536813544
 1848              		.cfi_endproc
 1849              	.LFE42:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 93


 1850              		.size	CySysTickGetValue, .-CySysTickGetValue
 1851              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1852              		.align	2
 1853              		.global	CySysTickSetClockSource
 1854              		.code	16
 1855              		.thumb_func
 1856              		.type	CySysTickSetClockSource, %function
 1857              	CySysTickSetClockSource:
 1858              	.LFB43:
3279:Generated_Source\PSoC4/CyLib.c **** 
3280:Generated_Source\PSoC4/CyLib.c **** 
3281:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
3282:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3283:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
3284:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3285:Generated_Source\PSoC4/CyLib.c ****     *
3286:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
3287:Generated_Source\PSoC4/CyLib.c ****     *
3288:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
3289:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
3290:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
3291:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
3292:Generated_Source\PSoC4/CyLib.c ****     *
3293:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
3294:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
3295:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
3296:Generated_Source\PSoC4/CyLib.c ****     *
3297:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
3298:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
3299:Generated_Source\PSoC4/CyLib.c ****     *
3300:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
3301:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
3302:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
3303:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3304:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3305:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3306:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3307:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
3308:Generated_Source\PSoC4/CyLib.c ****     {
 1859              		.loc 1 3308 0
 1860              		.cfi_startproc
 1861              		@ args = 0, pretend = 0, frame = 0
 1862              		@ frame_needed = 0, uses_anonymous_args = 0
 1863              		@ link register save eliminated.
 1864              	.LVL139:
3309:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1865              		.loc 1 3309 0
 1866 0000 0128     		cmp	r0, #1
 1867 0002 05D1     		bne	.L141
3310:Generated_Source\PSoC4/CyLib.c ****         {
3311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1868              		.loc 1 3311 0
 1869 0004 054A     		ldr	r2, .L143
 1870 0006 1168     		ldr	r1, [r2]
 1871 0008 0423     		movs	r3, #4
 1872 000a 0B43     		orrs	r3, r1
 1873 000c 1360     		str	r3, [r2]
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 94


 1874 000e 04E0     		b	.L140
 1875              	.L141:
3312:Generated_Source\PSoC4/CyLib.c ****         }
3313:Generated_Source\PSoC4/CyLib.c ****         else
3314:Generated_Source\PSoC4/CyLib.c ****         {
3315:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1876              		.loc 1 3315 0
 1877 0010 024A     		ldr	r2, .L143
 1878 0012 1368     		ldr	r3, [r2]
 1879 0014 0421     		movs	r1, #4
 1880 0016 8B43     		bics	r3, r1
 1881 0018 1360     		str	r3, [r2]
 1882              	.L140:
3316:Generated_Source\PSoC4/CyLib.c ****         }
3317:Generated_Source\PSoC4/CyLib.c ****     }
 1883              		.loc 1 3317 0
 1884              		@ sp needed
 1885 001a 7047     		bx	lr
 1886              	.L144:
 1887              		.align	2
 1888              	.L143:
 1889 001c 10E000E0 		.word	-536813552
 1890              		.cfi_endproc
 1891              	.LFE43:
 1892              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1893              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1894              		.align	2
 1895              		.global	CySysTickGetClockSource
 1896              		.code	16
 1897              		.thumb_func
 1898              		.type	CySysTickGetClockSource, %function
 1899              	CySysTickGetClockSource:
 1900              	.LFB44:
3318:Generated_Source\PSoC4/CyLib.c **** 
3319:Generated_Source\PSoC4/CyLib.c ****     
3320:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3321:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
3322:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3323:Generated_Source\PSoC4/CyLib.c ****     *
3324:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
3325:Generated_Source\PSoC4/CyLib.c ****     *
3326:Generated_Source\PSoC4/CyLib.c ****     *  \return 
3327:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
3328:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3329:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3330:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3332:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
3333:Generated_Source\PSoC4/CyLib.c ****     {
 1901              		.loc 1 3333 0
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 0
 1904              		@ frame_needed = 0, uses_anonymous_args = 0
 1905              		@ link register save eliminated.
3334:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1906              		.loc 1 3334 0
 1907 0000 024B     		ldr	r3, .L146
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 95


 1908 0002 1868     		ldr	r0, [r3]
 1909 0004 8008     		lsrs	r0, r0, #2
 1910 0006 0123     		movs	r3, #1
 1911 0008 1840     		ands	r0, r3
3335:Generated_Source\PSoC4/CyLib.c ****     }
 1912              		.loc 1 3335 0
 1913              		@ sp needed
 1914 000a 7047     		bx	lr
 1915              	.L147:
 1916              		.align	2
 1917              	.L146:
 1918 000c 10E000E0 		.word	-536813552
 1919              		.cfi_endproc
 1920              	.LFE44:
 1921              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1922              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1923              		.align	2
 1924              		.global	CySysTickGetCountFlag
 1925              		.code	16
 1926              		.thumb_func
 1927              		.type	CySysTickGetCountFlag, %function
 1928              	CySysTickGetCountFlag:
 1929              	.LFB45:
3336:Generated_Source\PSoC4/CyLib.c ****     
3337:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3338:Generated_Source\PSoC4/CyLib.c **** 
3339:Generated_Source\PSoC4/CyLib.c **** 
3340:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3341:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3342:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3343:Generated_Source\PSoC4/CyLib.c **** *
3344:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3345:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3346:Generated_Source\PSoC4/CyLib.c **** *
3347:Generated_Source\PSoC4/CyLib.c **** * \return
3348:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3349:Generated_Source\PSoC4/CyLib.c **** *
3350:Generated_Source\PSoC4/CyLib.c **** *
3351:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3352:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3353:Generated_Source\PSoC4/CyLib.c **** *
3354:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3355:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3356:Generated_Source\PSoC4/CyLib.c **** {
 1930              		.loc 1 3356 0
 1931              		.cfi_startproc
 1932              		@ args = 0, pretend = 0, frame = 0
 1933              		@ frame_needed = 0, uses_anonymous_args = 0
 1934              		@ link register save eliminated.
3357:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1935              		.loc 1 3357 0
 1936 0000 024B     		ldr	r3, .L149
 1937 0002 1868     		ldr	r0, [r3]
 1938 0004 000C     		lsrs	r0, r0, #16
 1939 0006 0123     		movs	r3, #1
 1940 0008 1840     		ands	r0, r3
3358:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 96


 1941              		.loc 1 3358 0
 1942              		@ sp needed
 1943 000a 7047     		bx	lr
 1944              	.L150:
 1945              		.align	2
 1946              	.L149:
 1947 000c 10E000E0 		.word	-536813552
 1948              		.cfi_endproc
 1949              	.LFE45:
 1950              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1951              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1952              		.align	2
 1953              		.code	16
 1954              		.thumb_func
 1955              		.type	CySysTickServiceCallbacks, %function
 1956              	CySysTickServiceCallbacks:
 1957              	.LFB49:
3359:Generated_Source\PSoC4/CyLib.c **** 
3360:Generated_Source\PSoC4/CyLib.c **** 
3361:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3362:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3363:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3364:Generated_Source\PSoC4/CyLib.c **** *
3365:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3366:Generated_Source\PSoC4/CyLib.c **** *
3367:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3368:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3369:Generated_Source\PSoC4/CyLib.c **** {
3370:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3371:Generated_Source\PSoC4/CyLib.c **** }
3372:Generated_Source\PSoC4/CyLib.c **** 
3373:Generated_Source\PSoC4/CyLib.c **** 
3374:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3375:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3376:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3377:Generated_Source\PSoC4/CyLib.c **** *
3378:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3379:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3380:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3381:Generated_Source\PSoC4/CyLib.c **** *
3382:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3383:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3384:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3385:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3386:Generated_Source\PSoC4/CyLib.c **** *  functions.
3387:Generated_Source\PSoC4/CyLib.c **** *
3388:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3389:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3390:Generated_Source\PSoC4/CyLib.c **** *
3391:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3392:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3393:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3394:Generated_Source\PSoC4/CyLib.c **** *
3395:Generated_Source\PSoC4/CyLib.c **** * \return
3396:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3397:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3398:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 97


3399:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3400:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3401:Generated_Source\PSoC4/CyLib.c **** *
3402:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3403:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3404:Generated_Source\PSoC4/CyLib.c **** {
3405:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3406:Generated_Source\PSoC4/CyLib.c **** 
3407:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3408:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3409:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3410:Generated_Source\PSoC4/CyLib.c **** }
3411:Generated_Source\PSoC4/CyLib.c **** 
3412:Generated_Source\PSoC4/CyLib.c **** 
3413:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3414:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3415:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3416:Generated_Source\PSoC4/CyLib.c **** *
3417:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3418:Generated_Source\PSoC4/CyLib.c **** *
3419:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3420:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3421:Generated_Source\PSoC4/CyLib.c **** *
3422:Generated_Source\PSoC4/CyLib.c **** * \return
3423:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3424:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3425:Generated_Source\PSoC4/CyLib.c **** *
3426:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3427:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3428:Generated_Source\PSoC4/CyLib.c **** {
3429:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3430:Generated_Source\PSoC4/CyLib.c **** }
3431:Generated_Source\PSoC4/CyLib.c **** 
3432:Generated_Source\PSoC4/CyLib.c **** 
3433:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3434:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3435:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3436:Generated_Source\PSoC4/CyLib.c **** *
3437:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3438:Generated_Source\PSoC4/CyLib.c **** *
3439:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3440:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3441:Generated_Source\PSoC4/CyLib.c **** {
 1958              		.loc 1 3441 0
 1959              		.cfi_startproc
 1960              		@ args = 0, pretend = 0, frame = 0
 1961              		@ frame_needed = 0, uses_anonymous_args = 0
 1962 0000 10B5     		push	{r4, lr}
 1963              		.cfi_def_cfa_offset 8
 1964              		.cfi_offset 4, -8
 1965              		.cfi_offset 14, -4
3442:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3443:Generated_Source\PSoC4/CyLib.c **** 
3444:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3445:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1966              		.loc 1 3445 0
 1967 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 98


 1968              	.LVL140:
 1969 0006 0128     		cmp	r0, #1
 1970 0008 0BD1     		bne	.L151
 1971 000a 07E0     		b	.L156
 1972              	.LVL141:
 1973              	.L155:
3446:Generated_Source\PSoC4/CyLib.c ****     {
3447:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3448:Generated_Source\PSoC4/CyLib.c ****         {
3449:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1974              		.loc 1 3449 0
 1975 000c A300     		lsls	r3, r4, #2
 1976 000e 054A     		ldr	r2, .L157
 1977 0010 9B58     		ldr	r3, [r3, r2]
 1978 0012 002B     		cmp	r3, #0
 1979 0014 00D0     		beq	.L154
3450:Generated_Source\PSoC4/CyLib.c ****             {
3451:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1980              		.loc 1 3451 0
 1981 0016 9847     		blx	r3
 1982              	.LVL142:
 1983              	.L154:
3447:Generated_Source\PSoC4/CyLib.c ****         {
 1984              		.loc 1 3447 0 discriminator 2
 1985 0018 0134     		adds	r4, r4, #1
 1986              	.LVL143:
 1987 001a 00E0     		b	.L152
 1988              	.LVL144:
 1989              	.L156:
 1990 001c 0024     		movs	r4, #0
 1991              	.L152:
 1992              	.LVL145:
3447:Generated_Source\PSoC4/CyLib.c ****         {
 1993              		.loc 1 3447 0 is_stmt 0 discriminator 1
 1994 001e 042C     		cmp	r4, #4
 1995 0020 F4D9     		bls	.L155
 1996              	.LVL146:
 1997              	.L151:
3452:Generated_Source\PSoC4/CyLib.c ****             }
3453:Generated_Source\PSoC4/CyLib.c ****         }
3454:Generated_Source\PSoC4/CyLib.c ****     }
3455:Generated_Source\PSoC4/CyLib.c **** }
 1998              		.loc 1 3455 0 is_stmt 1
 1999              		@ sp needed
 2000 0022 10BD     		pop	{r4, pc}
 2001              	.L158:
 2002              		.align	2
 2003              	.L157:
 2004 0024 00000000 		.word	.LANCHOR2
 2005              		.cfi_endproc
 2006              	.LFE49:
 2007              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2008              		.section	.text.CySysTickClear,"ax",%progbits
 2009              		.align	2
 2010              		.global	CySysTickClear
 2011              		.code	16
 2012              		.thumb_func
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 99


 2013              		.type	CySysTickClear, %function
 2014              	CySysTickClear:
 2015              	.LFB46:
3369:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2016              		.loc 1 3369 0
 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 0
 2019              		@ frame_needed = 0, uses_anonymous_args = 0
 2020              		@ link register save eliminated.
3370:Generated_Source\PSoC4/CyLib.c **** }
 2021              		.loc 1 3370 0
 2022 0000 0022     		movs	r2, #0
 2023 0002 014B     		ldr	r3, .L160
 2024 0004 1A60     		str	r2, [r3]
3371:Generated_Source\PSoC4/CyLib.c **** 
 2025              		.loc 1 3371 0
 2026              		@ sp needed
 2027 0006 7047     		bx	lr
 2028              	.L161:
 2029              		.align	2
 2030              	.L160:
 2031 0008 18E000E0 		.word	-536813544
 2032              		.cfi_endproc
 2033              	.LFE46:
 2034              		.size	CySysTickClear, .-CySysTickClear
 2035              		.section	.text.CySysTickInit,"ax",%progbits
 2036              		.align	2
 2037              		.global	CySysTickInit
 2038              		.code	16
 2039              		.thumb_func
 2040              		.type	CySysTickInit, %function
 2041              	CySysTickInit:
 2042              	.LFB35:
3148:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 2043              		.loc 1 3148 0
 2044              		.cfi_startproc
 2045              		@ args = 0, pretend = 0, frame = 0
 2046              		@ frame_needed = 0, uses_anonymous_args = 0
 2047 0000 10B5     		push	{r4, lr}
 2048              		.cfi_def_cfa_offset 8
 2049              		.cfi_offset 4, -8
 2050              		.cfi_offset 14, -4
 2051              	.LVL147:
3151:Generated_Source\PSoC4/CyLib.c ****     {
 2052              		.loc 1 3151 0
 2053 0002 0023     		movs	r3, #0
 2054 0004 04E0     		b	.L163
 2055              	.LVL148:
 2056              	.L164:
3153:Generated_Source\PSoC4/CyLib.c ****     }
 2057              		.loc 1 3153 0 discriminator 3
 2058 0006 9900     		lsls	r1, r3, #2
 2059 0008 0020     		movs	r0, #0
 2060 000a 0B4A     		ldr	r2, .L165
 2061 000c 8850     		str	r0, [r1, r2]
3151:Generated_Source\PSoC4/CyLib.c ****     {
 2062              		.loc 1 3151 0 discriminator 3
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 100


 2063 000e 0133     		adds	r3, r3, #1
 2064              	.LVL149:
 2065              	.L163:
3151:Generated_Source\PSoC4/CyLib.c ****     {
 2066              		.loc 1 3151 0 is_stmt 0 discriminator 1
 2067 0010 042B     		cmp	r3, #4
 2068 0012 F8D9     		bls	.L164
3156:Generated_Source\PSoC4/CyLib.c **** 
 2069              		.loc 1 3156 0 is_stmt 1
 2070 0014 0949     		ldr	r1, .L165+4
 2071 0016 0F20     		movs	r0, #15
 2072 0018 FFF7FEFF 		bl	CyIntSetSysVector
 2073              	.LVL150:
3159:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 2074              		.loc 1 3159 0
 2075 001c 0120     		movs	r0, #1
 2076 001e FFF7FEFF 		bl	CySysTickSetClockSource
 2077              	.LVL151:
3162:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2078              		.loc 1 3162 0
 2079 0022 074B     		ldr	r3, .L165+8
 2080 0024 1869     		ldr	r0, [r3, #16]
 2081 0026 FA21     		movs	r1, #250
 2082 0028 8900     		lsls	r1, r1, #2
 2083 002a FFF7FEFF 		bl	__aeabi_uidiv
 2084              	.LVL152:
 2085 002e FFF7FEFF 		bl	CySysTickSetReload
 2086              	.LVL153:
3163:Generated_Source\PSoC4/CyLib.c **** }
 2087              		.loc 1 3163 0
 2088 0032 FFF7FEFF 		bl	CySysTickClear
 2089              	.LVL154:
3164:Generated_Source\PSoC4/CyLib.c **** 
 2090              		.loc 1 3164 0
 2091              		@ sp needed
 2092 0036 10BD     		pop	{r4, pc}
 2093              	.L166:
 2094              		.align	2
 2095              	.L165:
 2096 0038 00000000 		.word	.LANCHOR2
 2097 003c 00000000 		.word	CySysTickServiceCallbacks
 2098 0040 00000000 		.word	.LANCHOR1
 2099              		.cfi_endproc
 2100              	.LFE35:
 2101              		.size	CySysTickInit, .-CySysTickInit
 2102              		.section	.text.CySysTickStart,"ax",%progbits
 2103              		.align	2
 2104              		.global	CySysTickStart
 2105              		.code	16
 2106              		.thumb_func
 2107              		.type	CySysTickStart, %function
 2108              	CySysTickStart:
 2109              	.LFB34:
3119:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2110              		.loc 1 3119 0
 2111              		.cfi_startproc
 2112              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 101


 2113              		@ frame_needed = 0, uses_anonymous_args = 0
 2114 0000 10B5     		push	{r4, lr}
 2115              		.cfi_def_cfa_offset 8
 2116              		.cfi_offset 4, -8
 2117              		.cfi_offset 14, -4
3120:Generated_Source\PSoC4/CyLib.c ****     {
 2118              		.loc 1 3120 0
 2119 0002 064B     		ldr	r3, .L169
 2120 0004 5B69     		ldr	r3, [r3, #20]
 2121 0006 002B     		cmp	r3, #0
 2122 0008 04D1     		bne	.L168
3122:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2123              		.loc 1 3122 0
 2124 000a FFF7FEFF 		bl	CySysTickInit
 2125              	.LVL155:
3123:Generated_Source\PSoC4/CyLib.c ****     }
 2126              		.loc 1 3123 0
 2127 000e 0122     		movs	r2, #1
 2128 0010 024B     		ldr	r3, .L169
 2129 0012 5A61     		str	r2, [r3, #20]
 2130              	.L168:
3126:Generated_Source\PSoC4/CyLib.c **** }
 2131              		.loc 1 3126 0
 2132 0014 FFF7FEFF 		bl	CySysTickEnable
 2133              	.LVL156:
3127:Generated_Source\PSoC4/CyLib.c **** 
 2134              		.loc 1 3127 0
 2135              		@ sp needed
 2136 0018 10BD     		pop	{r4, pc}
 2137              	.L170:
 2138 001a C046     		.align	2
 2139              	.L169:
 2140 001c 00000000 		.word	.LANCHOR2
 2141              		.cfi_endproc
 2142              	.LFE34:
 2143              		.size	CySysTickStart, .-CySysTickStart
 2144              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2145              		.align	2
 2146              		.global	CySysTickSetCallback
 2147              		.code	16
 2148              		.thumb_func
 2149              		.type	CySysTickSetCallback, %function
 2150              	CySysTickSetCallback:
 2151              	.LFB47:
3404:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2152              		.loc 1 3404 0
 2153              		.cfi_startproc
 2154              		@ args = 0, pretend = 0, frame = 0
 2155              		@ frame_needed = 0, uses_anonymous_args = 0
 2156              		@ link register save eliminated.
 2157              	.LVL157:
3407:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2158              		.loc 1 3407 0
 2159 0000 024A     		ldr	r2, .L172
 2160 0002 8300     		lsls	r3, r0, #2
 2161 0004 9858     		ldr	r0, [r3, r2]
 2162              	.LVL158:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 102


3408:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2163              		.loc 1 3408 0
 2164 0006 9950     		str	r1, [r3, r2]
3410:Generated_Source\PSoC4/CyLib.c **** 
 2165              		.loc 1 3410 0
 2166              		@ sp needed
 2167 0008 7047     		bx	lr
 2168              	.L173:
 2169 000a C046     		.align	2
 2170              	.L172:
 2171 000c 00000000 		.word	.LANCHOR2
 2172              		.cfi_endproc
 2173              	.LFE47:
 2174              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2175              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2176              		.align	2
 2177              		.global	CySysTickGetCallback
 2178              		.code	16
 2179              		.thumb_func
 2180              		.type	CySysTickGetCallback, %function
 2181              	CySysTickGetCallback:
 2182              	.LFB48:
3428:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2183              		.loc 1 3428 0
 2184              		.cfi_startproc
 2185              		@ args = 0, pretend = 0, frame = 0
 2186              		@ frame_needed = 0, uses_anonymous_args = 0
 2187              		@ link register save eliminated.
 2188              	.LVL159:
3429:Generated_Source\PSoC4/CyLib.c **** }
 2189              		.loc 1 3429 0
 2190 0000 8000     		lsls	r0, r0, #2
 2191              	.LVL160:
 2192 0002 014B     		ldr	r3, .L175
 2193 0004 C058     		ldr	r0, [r0, r3]
3430:Generated_Source\PSoC4/CyLib.c **** 
 2194              		.loc 1 3430 0
 2195              		@ sp needed
 2196 0006 7047     		bx	lr
 2197              	.L176:
 2198              		.align	2
 2199              	.L175:
 2200 0008 00000000 		.word	.LANCHOR2
 2201              		.cfi_endproc
 2202              	.LFE48:
 2203              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2204              		.section	.text.CyGetUniqueId,"ax",%progbits
 2205              		.align	2
 2206              		.global	CyGetUniqueId
 2207              		.code	16
 2208              		.thumb_func
 2209              		.type	CyGetUniqueId, %function
 2210              	CyGetUniqueId:
 2211              	.LFB50:
3456:Generated_Source\PSoC4/CyLib.c **** 
3457:Generated_Source\PSoC4/CyLib.c **** 
3458:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 103


3459:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3460:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3461:Generated_Source\PSoC4/CyLib.c **** *
3462:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3463:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3464:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3465:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3466:Generated_Source\PSoC4/CyLib.c **** *
3467:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3468:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3469:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3470:Generated_Source\PSoC4/CyLib.c **** *
3471:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3472:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3473:Generated_Source\PSoC4/CyLib.c **** {
 2212              		.loc 1 3473 0
 2213              		.cfi_startproc
 2214              		@ args = 0, pretend = 0, frame = 0
 2215              		@ frame_needed = 0, uses_anonymous_args = 0
 2216              		@ link register save eliminated.
 2217              	.LVL161:
3474:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3475:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2218              		.loc 1 3475 0
 2219 0000 134B     		ldr	r3, .L178
 2220 0002 1B78     		ldrb	r3, [r3]
 2221 0004 DAB2     		uxtb	r2, r3
 2222 0006 0260     		str	r2, [r0]
3476:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2223              		.loc 1 3476 0
 2224 0008 124B     		ldr	r3, .L178+4
 2225 000a 1B78     		ldrb	r3, [r3]
 2226 000c 1B02     		lsls	r3, r3, #8
 2227 000e 1343     		orrs	r3, r2
 2228 0010 0360     		str	r3, [r0]
3477:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2229              		.loc 1 3477 0
 2230 0012 114A     		ldr	r2, .L178+8
 2231 0014 1278     		ldrb	r2, [r2]
 2232 0016 1204     		lsls	r2, r2, #16
 2233 0018 1343     		orrs	r3, r2
 2234 001a 0360     		str	r3, [r0]
3478:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2235              		.loc 1 3478 0
 2236 001c 0F4A     		ldr	r2, .L178+12
 2237 001e 1278     		ldrb	r2, [r2]
 2238 0020 1206     		lsls	r2, r2, #24
 2239 0022 1343     		orrs	r3, r2
 2240 0024 0360     		str	r3, [r0]
3479:Generated_Source\PSoC4/CyLib.c **** 
3480:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2241              		.loc 1 3480 0
 2242 0026 0E4B     		ldr	r3, .L178+16
 2243 0028 1B78     		ldrb	r3, [r3]
 2244 002a DAB2     		uxtb	r2, r3
 2245 002c 4260     		str	r2, [r0, #4]
3481:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 104


 2246              		.loc 1 3481 0
 2247 002e 0D4B     		ldr	r3, .L178+20
 2248 0030 1B78     		ldrb	r3, [r3]
 2249 0032 1B02     		lsls	r3, r3, #8
 2250 0034 1343     		orrs	r3, r2
 2251 0036 4360     		str	r3, [r0, #4]
3482:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2252              		.loc 1 3482 0
 2253 0038 0B4A     		ldr	r2, .L178+24
 2254 003a 1278     		ldrb	r2, [r2]
 2255 003c 1204     		lsls	r2, r2, #16
 2256 003e 1343     		orrs	r3, r2
 2257 0040 4360     		str	r3, [r0, #4]
3483:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2258              		.loc 1 3483 0
 2259 0042 0A4A     		ldr	r2, .L178+28
 2260 0044 1278     		ldrb	r2, [r2]
 2261 0046 1206     		lsls	r2, r2, #24
 2262 0048 1343     		orrs	r3, r2
 2263 004a 4360     		str	r3, [r0, #4]
3484:Generated_Source\PSoC4/CyLib.c **** #else
3485:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3486:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3487:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3488:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3489:Generated_Source\PSoC4/CyLib.c **** 
3490:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3491:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3492:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3493:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3494:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3495:Generated_Source\PSoC4/CyLib.c **** }
 2264              		.loc 1 3495 0
 2265              		@ sp needed
 2266 004c 7047     		bx	lr
 2267              	.L179:
 2268 004e C046     		.align	2
 2269              	.L178:
 2270 0050 78F1FF0F 		.word	268431736
 2271 0054 79F1FF0F 		.word	268431737
 2272 0058 7AF1FF0F 		.word	268431738
 2273 005c 7BF1FF0F 		.word	268431739
 2274 0060 7CF1FF0F 		.word	268431740
 2275 0064 7DF1FF0F 		.word	268431741
 2276 0068 7EF1FF0F 		.word	268431742
 2277 006c 7FF1FF0F 		.word	268431743
 2278              		.cfi_endproc
 2279              	.LFE50:
 2280              		.size	CyGetUniqueId, .-CyGetUniqueId
 2281              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2282              		.align	2
 2283              		.global	CySysSetRamAccessArbPriority
 2284              		.code	16
 2285              		.thumb_func
 2286              		.type	CySysSetRamAccessArbPriority, %function
 2287              	CySysSetRamAccessArbPriority:
 2288              	.LFB51:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 105


3496:Generated_Source\PSoC4/CyLib.c **** 
3497:Generated_Source\PSoC4/CyLib.c **** 
3498:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3499:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3500:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3501:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3502:Generated_Source\PSoC4/CyLib.c ****     *
3503:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3504:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3505:Generated_Source\PSoC4/CyLib.c ****     *  details.
3506:Generated_Source\PSoC4/CyLib.c ****     *
3507:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3508:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3509:Generated_Source\PSoC4/CyLib.c ****     *
3510:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3511:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3512:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3513:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3514:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3515:Generated_Source\PSoC4/CyLib.c ****     *
3516:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3517:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3518:Generated_Source\PSoC4/CyLib.c ****     {
 2289              		.loc 1 3518 0
 2290              		.cfi_startproc
 2291              		@ args = 0, pretend = 0, frame = 0
 2292              		@ frame_needed = 0, uses_anonymous_args = 0
 2293              		@ link register save eliminated.
 2294              	.LVL162:
3519:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3520:Generated_Source\PSoC4/CyLib.c **** 
3521:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2295              		.loc 1 3521 0
 2296 0000 0549     		ldr	r1, .L181
 2297 0002 0A68     		ldr	r2, [r1]
 2298 0004 054B     		ldr	r3, .L181+4
 2299 0006 1A40     		ands	r2, r3
 2300              	.LVL163:
3522:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2301              		.loc 1 3522 0
 2302 0008 4004     		lsls	r0, r0, #17
 2303              	.LVL164:
 2304 000a C023     		movs	r3, #192
 2305 000c DB02     		lsls	r3, r3, #11
 2306 000e 1840     		ands	r0, r3
 2307 0010 1043     		orrs	r0, r2
 2308              	.LVL165:
3523:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2309              		.loc 1 3523 0
 2310 0012 0860     		str	r0, [r1]
3524:Generated_Source\PSoC4/CyLib.c ****     }
 2311              		.loc 1 3524 0
 2312              		@ sp needed
 2313 0014 7047     		bx	lr
 2314              	.L182:
 2315 0016 C046     		.align	2
 2316              	.L181:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 106


 2317 0018 38001040 		.word	1074790456
 2318 001c FFFFF9FF 		.word	-393217
 2319              		.cfi_endproc
 2320              	.LFE51:
 2321              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2322              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2323              		.align	2
 2324              		.global	CySysSetFlashAccessArbPriority
 2325              		.code	16
 2326              		.thumb_func
 2327              		.type	CySysSetFlashAccessArbPriority, %function
 2328              	CySysSetFlashAccessArbPriority:
 2329              	.LFB52:
3525:Generated_Source\PSoC4/CyLib.c **** 
3526:Generated_Source\PSoC4/CyLib.c **** 
3527:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3528:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3529:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3530:Generated_Source\PSoC4/CyLib.c ****     *
3531:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3532:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3533:Generated_Source\PSoC4/CyLib.c ****     *  details.
3534:Generated_Source\PSoC4/CyLib.c ****     *
3535:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3536:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3537:Generated_Source\PSoC4/CyLib.c ****     *
3538:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3539:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3540:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3541:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3542:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3543:Generated_Source\PSoC4/CyLib.c ****     *
3544:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3545:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3546:Generated_Source\PSoC4/CyLib.c ****     {
 2330              		.loc 1 3546 0
 2331              		.cfi_startproc
 2332              		@ args = 0, pretend = 0, frame = 0
 2333              		@ frame_needed = 0, uses_anonymous_args = 0
 2334              		@ link register save eliminated.
 2335              	.LVL166:
3547:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3548:Generated_Source\PSoC4/CyLib.c **** 
3549:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2336              		.loc 1 3549 0
 2337 0000 0549     		ldr	r1, .L184
 2338 0002 0A68     		ldr	r2, [r1]
 2339 0004 054B     		ldr	r3, .L184+4
 2340 0006 1A40     		ands	r2, r3
 2341              	.LVL167:
3550:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2342              		.loc 1 3550 0
 2343 0008 4004     		lsls	r0, r0, #17
 2344              	.LVL168:
 2345 000a C023     		movs	r3, #192
 2346 000c DB02     		lsls	r3, r3, #11
 2347 000e 1840     		ands	r0, r3
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 107


 2348 0010 1043     		orrs	r0, r2
 2349              	.LVL169:
3551:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2350              		.loc 1 3551 0
 2351 0012 0860     		str	r0, [r1]
3552:Generated_Source\PSoC4/CyLib.c ****     }
 2352              		.loc 1 3552 0
 2353              		@ sp needed
 2354 0014 7047     		bx	lr
 2355              	.L185:
 2356 0016 C046     		.align	2
 2357              	.L184:
 2358 0018 30001040 		.word	1074790448
 2359 001c FFFFF9FF 		.word	-393217
 2360              		.cfi_endproc
 2361              	.LFE52:
 2362              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2363              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2364              		.align	2
 2365              		.global	CySysSetDmacAccessArbPriority
 2366              		.code	16
 2367              		.thumb_func
 2368              		.type	CySysSetDmacAccessArbPriority, %function
 2369              	CySysSetDmacAccessArbPriority:
 2370              	.LFB53:
3553:Generated_Source\PSoC4/CyLib.c **** 
3554:Generated_Source\PSoC4/CyLib.c **** 
3555:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3556:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3557:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3558:Generated_Source\PSoC4/CyLib.c ****     *
3559:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3560:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3561:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3562:Generated_Source\PSoC4/CyLib.c ****     *
3563:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3564:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3565:Generated_Source\PSoC4/CyLib.c ****     *
3566:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3567:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3568:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3569:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3570:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3571:Generated_Source\PSoC4/CyLib.c ****     *
3572:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3573:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3574:Generated_Source\PSoC4/CyLib.c ****     {
 2371              		.loc 1 3574 0
 2372              		.cfi_startproc
 2373              		@ args = 0, pretend = 0, frame = 0
 2374              		@ frame_needed = 0, uses_anonymous_args = 0
 2375              		@ link register save eliminated.
 2376              	.LVL170:
3575:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3576:Generated_Source\PSoC4/CyLib.c **** 
3577:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2377              		.loc 1 3577 0
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 108


 2378 0000 0549     		ldr	r1, .L187
 2379 0002 0A68     		ldr	r2, [r1]
 2380 0004 054B     		ldr	r3, .L187+4
 2381 0006 1A40     		ands	r2, r3
 2382              	.LVL171:
3578:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2383              		.loc 1 3578 0
 2384 0008 4004     		lsls	r0, r0, #17
 2385              	.LVL172:
 2386 000a C023     		movs	r3, #192
 2387 000c DB02     		lsls	r3, r3, #11
 2388 000e 1840     		ands	r0, r3
 2389 0010 1043     		orrs	r0, r2
 2390              	.LVL173:
3579:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2391              		.loc 1 3579 0
 2392 0012 0860     		str	r0, [r1]
3580:Generated_Source\PSoC4/CyLib.c ****     }
 2393              		.loc 1 3580 0
 2394              		@ sp needed
 2395 0014 7047     		bx	lr
 2396              	.L188:
 2397 0016 C046     		.align	2
 2398              	.L187:
 2399 0018 3C001040 		.word	1074790460
 2400 001c FFFFF9FF 		.word	-393217
 2401              		.cfi_endproc
 2402              	.LFE53:
 2403              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2404              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2405              		.align	2
 2406              		.global	CySysSetPeripheralAccessArbPriority
 2407              		.code	16
 2408              		.thumb_func
 2409              		.type	CySysSetPeripheralAccessArbPriority, %function
 2410              	CySysSetPeripheralAccessArbPriority:
 2411              	.LFB54:
3581:Generated_Source\PSoC4/CyLib.c **** 
3582:Generated_Source\PSoC4/CyLib.c **** 
3583:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3584:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3585:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3586:Generated_Source\PSoC4/CyLib.c ****     *
3587:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3588:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3589:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3590:Generated_Source\PSoC4/CyLib.c ****     *
3591:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3592:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3593:Generated_Source\PSoC4/CyLib.c ****     *
3594:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3595:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3596:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3597:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3598:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3599:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3600:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 109


3601:Generated_Source\PSoC4/CyLib.c ****     *
3602:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3603:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3604:Generated_Source\PSoC4/CyLib.c ****     {
 2412              		.loc 1 3604 0
 2413              		.cfi_startproc
 2414              		@ args = 0, pretend = 0, frame = 0
 2415              		@ frame_needed = 0, uses_anonymous_args = 0
 2416              	.LVL174:
 2417 0000 10B5     		push	{r4, lr}
 2418              		.cfi_def_cfa_offset 8
 2419              		.cfi_offset 4, -8
 2420              		.cfi_offset 14, -4
3605:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3606:Generated_Source\PSoC4/CyLib.c **** 
3607:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2421              		.loc 1 3607 0
 2422 0002 0028     		cmp	r0, #0
 2423 0004 0AD1     		bne	.L190
3608:Generated_Source\PSoC4/CyLib.c ****         {
3609:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2424              		.loc 1 3609 0
 2425 0006 1448     		ldr	r0, .L194
 2426              	.LVL175:
 2427 0008 0268     		ldr	r2, [r0]
 2428 000a 144B     		ldr	r3, .L194+4
 2429 000c 1A40     		ands	r2, r3
 2430              	.LVL176:
3610:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2431              		.loc 1 3610 0
 2432 000e 4904     		lsls	r1, r1, #17
 2433              	.LVL177:
 2434 0010 C023     		movs	r3, #192
 2435 0012 DB02     		lsls	r3, r3, #11
 2436 0014 1940     		ands	r1, r3
 2437 0016 1143     		orrs	r1, r2
 2438              	.LVL178:
3611:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 2439              		.loc 1 3611 0
 2440 0018 0160     		str	r1, [r0]
 2441 001a 1CE0     		b	.L189
 2442              	.LVL179:
 2443              	.L190:
3612:Generated_Source\PSoC4/CyLib.c ****         } else
3613:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3614:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2444              		.loc 1 3614 0
 2445 001c 0128     		cmp	r0, #1
 2446 001e 0AD1     		bne	.L192
3615:Generated_Source\PSoC4/CyLib.c ****         {
3616:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2447              		.loc 1 3616 0
 2448 0020 0F48     		ldr	r0, .L194+8
 2449              	.LVL180:
 2450 0022 0268     		ldr	r2, [r0]
 2451 0024 0D4B     		ldr	r3, .L194+4
 2452 0026 1A40     		ands	r2, r3
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 110


 2453              	.LVL181:
3617:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2454              		.loc 1 3617 0
 2455 0028 4904     		lsls	r1, r1, #17
 2456              	.LVL182:
 2457 002a C023     		movs	r3, #192
 2458 002c DB02     		lsls	r3, r3, #11
 2459 002e 1940     		ands	r1, r3
 2460 0030 1143     		orrs	r1, r2
 2461              	.LVL183:
3618:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 2462              		.loc 1 3618 0
 2463 0032 0160     		str	r1, [r0]
 2464 0034 0FE0     		b	.L189
 2465              	.LVL184:
 2466              	.L192:
3619:Generated_Source\PSoC4/CyLib.c ****         } else
3620:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3621:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3622:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 2467              		.loc 1 3622 0
 2468 0036 0228     		cmp	r0, #2
 2469 0038 0AD1     		bne	.L193
3623:Generated_Source\PSoC4/CyLib.c ****         {
3624:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2470              		.loc 1 3624 0
 2471 003a 0A48     		ldr	r0, .L194+12
 2472              	.LVL185:
 2473 003c 0268     		ldr	r2, [r0]
 2474 003e 074B     		ldr	r3, .L194+4
 2475 0040 1A40     		ands	r2, r3
 2476              	.LVL186:
3625:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2477              		.loc 1 3625 0
 2478 0042 4904     		lsls	r1, r1, #17
 2479              	.LVL187:
 2480 0044 C023     		movs	r3, #192
 2481 0046 DB02     		lsls	r3, r3, #11
 2482 0048 1940     		ands	r1, r3
 2483 004a 1143     		orrs	r1, r2
 2484              	.LVL188:
3626:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2485              		.loc 1 3626 0
 2486 004c 0160     		str	r1, [r0]
 2487 004e 02E0     		b	.L189
 2488              	.LVL189:
 2489              	.L193:
3627:Generated_Source\PSoC4/CyLib.c ****         } else
3628:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3629:Generated_Source\PSoC4/CyLib.c ****         {
3630:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3631:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 2490              		.loc 1 3631 0 discriminator 1
 2491 0050 0020     		movs	r0, #0
 2492              	.LVL190:
 2493 0052 FFF7FEFF 		bl	CyHalt
 2494              	.LVL191:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 111


 2495              	.L189:
3632:Generated_Source\PSoC4/CyLib.c ****         }
3633:Generated_Source\PSoC4/CyLib.c ****     }
 2496              		.loc 1 3633 0
 2497              		@ sp needed
 2498 0056 10BD     		pop	{r4, pc}
 2499              	.L195:
 2500              		.align	2
 2501              	.L194:
 2502 0058 00011040 		.word	1074790656
 2503 005c FFFFF9FF 		.word	-393217
 2504 0060 04011040 		.word	1074790660
 2505 0064 08011040 		.word	1074790664
 2506              		.cfi_endproc
 2507              	.LFE54:
 2508              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2509              		.global	CySysClkPumpConfig
 2510              		.global	cyImoFreqMhz2Reg
 2511              		.global	CySysTickInitVar
 2512              		.global	cydelay32kMs
 2513              		.global	cydelayFreqMhz
 2514              		.global	cydelayFreqKhz
 2515              		.global	cydelayFreqHz
 2516              		.section	.rodata
 2517              		.align	2
 2518              		.set	.LANCHOR0,. + 0
 2519              		.type	cyImoFreqMhz2Reg, %object
 2520              		.size	cyImoFreqMhz2Reg, 46
 2521              	cyImoFreqMhz2Reg:
 2522 0000 03       		.byte	3
 2523 0001 04       		.byte	4
 2524 0002 05       		.byte	5
 2525 0003 06       		.byte	6
 2526 0004 07       		.byte	7
 2527 0005 08       		.byte	8
 2528 0006 09       		.byte	9
 2529 0007 0A       		.byte	10
 2530 0008 0B       		.byte	11
 2531 0009 0C       		.byte	12
 2532 000a 0E       		.byte	14
 2533 000b 0F       		.byte	15
 2534 000c 10       		.byte	16
 2535 000d 11       		.byte	17
 2536 000e 12       		.byte	18
 2537 000f 13       		.byte	19
 2538 0010 14       		.byte	20
 2539 0011 15       		.byte	21
 2540 0012 16       		.byte	22
 2541 0013 17       		.byte	23
 2542 0014 18       		.byte	24
 2543 0015 19       		.byte	25
 2544 0016 1B       		.byte	27
 2545 0017 1C       		.byte	28
 2546 0018 1D       		.byte	29
 2547 0019 1E       		.byte	30
 2548 001a 1F       		.byte	31
 2549 001b 20       		.byte	32
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 112


 2550 001c 21       		.byte	33
 2551 001d 22       		.byte	34
 2552 001e 23       		.byte	35
 2553 001f 25       		.byte	37
 2554 0020 26       		.byte	38
 2555 0021 27       		.byte	39
 2556 0022 28       		.byte	40
 2557 0023 29       		.byte	41
 2558 0024 2A       		.byte	42
 2559 0025 2B       		.byte	43
 2560 0026 2E       		.byte	46
 2561 0027 2F       		.byte	47
 2562 0028 30       		.byte	48
 2563 0029 31       		.byte	49
 2564 002a 32       		.byte	50
 2565 002b 33       		.byte	51
 2566 002c 34       		.byte	52
 2567 002d 35       		.byte	53
 2568              		.data
 2569              		.align	2
 2570              		.set	.LANCHOR1,. + 0
 2571              		.type	CySysClkPumpConfig, %object
 2572              		.size	CySysClkPumpConfig, 4
 2573              	CySysClkPumpConfig:
 2574 0000 01000000 		.word	1
 2575              		.type	cydelay32kMs, %object
 2576              		.size	cydelay32kMs, 4
 2577              	cydelay32kMs:
 2578 0004 0000C05D 		.word	1572864000
 2579              		.type	cydelayFreqKhz, %object
 2580              		.size	cydelayFreqKhz, 4
 2581              	cydelayFreqKhz:
 2582 0008 80BB0000 		.word	48000
 2583              		.type	cydelayFreqMhz, %object
 2584              		.size	cydelayFreqMhz, 1
 2585              	cydelayFreqMhz:
 2586 000c 30       		.byte	48
 2587 000d 000000   		.space	3
 2588              		.type	cydelayFreqHz, %object
 2589              		.size	cydelayFreqHz, 4
 2590              	cydelayFreqHz:
 2591 0010 006CDC02 		.word	48000000
 2592              		.bss
 2593              		.align	2
 2594              		.set	.LANCHOR2,. + 0
 2595              		.type	CySysTickCallbacks, %object
 2596              		.size	CySysTickCallbacks, 20
 2597              	CySysTickCallbacks:
 2598 0000 00000000 		.space	20
 2598      00000000 
 2598      00000000 
 2598      00000000 
 2598      00000000 
 2599              		.type	CySysTickInitVar, %object
 2600              		.size	CySysTickInitVar, 4
 2601              	CySysTickInitVar:
 2602 0014 00000000 		.space	4
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 113


 2603              		.text
 2604              	.Letext0:
 2605              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2606              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2607              		.file 4 "Generated_Source\\PSoC4\\CyLFClk.h"
 2608              		.file 5 "Generated_Source\\PSoC4\\CyFlash.h"
 2609              		.section	.debug_info,"",%progbits
 2610              	.Ldebug_info0:
 2611 0000 3C0D0000 		.4byte	0xd3c
 2612 0004 0400     		.2byte	0x4
 2613 0006 00000000 		.4byte	.Ldebug_abbrev0
 2614 000a 04       		.byte	0x4
 2615 000b 01       		.uleb128 0x1
 2616 000c 75000000 		.4byte	.LASF120
 2617 0010 0C       		.byte	0xc
 2618 0011 93070000 		.4byte	.LASF121
 2619 0015 1A010000 		.4byte	.LASF122
 2620 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2621 001d 00000000 		.4byte	0
 2622 0021 00000000 		.4byte	.Ldebug_line0
 2623 0025 02       		.uleb128 0x2
 2624 0026 01       		.byte	0x1
 2625 0027 06       		.byte	0x6
 2626 0028 B4010000 		.4byte	.LASF0
 2627 002c 02       		.uleb128 0x2
 2628 002d 01       		.byte	0x1
 2629 002e 08       		.byte	0x8
 2630 002f F1050000 		.4byte	.LASF1
 2631 0033 02       		.uleb128 0x2
 2632 0034 02       		.byte	0x2
 2633 0035 05       		.byte	0x5
 2634 0036 FF050000 		.4byte	.LASF2
 2635 003a 02       		.uleb128 0x2
 2636 003b 02       		.byte	0x2
 2637 003c 07       		.byte	0x7
 2638 003d C1030000 		.4byte	.LASF3
 2639 0041 02       		.uleb128 0x2
 2640 0042 04       		.byte	0x4
 2641 0043 05       		.byte	0x5
 2642 0044 19020000 		.4byte	.LASF4
 2643 0048 02       		.uleb128 0x2
 2644 0049 04       		.byte	0x4
 2645 004a 07       		.byte	0x7
 2646 004b 34030000 		.4byte	.LASF5
 2647 004f 02       		.uleb128 0x2
 2648 0050 08       		.byte	0x8
 2649 0051 05       		.byte	0x5
 2650 0052 A6010000 		.4byte	.LASF6
 2651 0056 02       		.uleb128 0x2
 2652 0057 08       		.byte	0x8
 2653 0058 07       		.byte	0x7
 2654 0059 03010000 		.4byte	.LASF7
 2655 005d 03       		.uleb128 0x3
 2656 005e 04       		.byte	0x4
 2657 005f 05       		.byte	0x5
 2658 0060 696E7400 		.ascii	"int\000"
 2659 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 114


 2660 0065 04       		.byte	0x4
 2661 0066 07       		.byte	0x7
 2662 0067 18030000 		.4byte	.LASF8
 2663 006b 04       		.uleb128 0x4
 2664 006c 39020000 		.4byte	.LASF9
 2665 0070 02       		.byte	0x2
 2666 0071 F701     		.2byte	0x1f7
 2667 0073 2C000000 		.4byte	0x2c
 2668 0077 04       		.uleb128 0x4
 2669 0078 0F000000 		.4byte	.LASF10
 2670 007c 02       		.byte	0x2
 2671 007d F801     		.2byte	0x1f8
 2672 007f 3A000000 		.4byte	0x3a
 2673 0083 04       		.uleb128 0x4
 2674 0084 79020000 		.4byte	.LASF11
 2675 0088 02       		.byte	0x2
 2676 0089 F901     		.2byte	0x1f9
 2677 008b 48000000 		.4byte	0x48
 2678 008f 02       		.uleb128 0x2
 2679 0090 04       		.byte	0x4
 2680 0091 04       		.byte	0x4
 2681 0092 57050000 		.4byte	.LASF12
 2682 0096 02       		.uleb128 0x2
 2683 0097 08       		.byte	0x8
 2684 0098 04       		.byte	0x4
 2685 0099 55020000 		.4byte	.LASF13
 2686 009d 02       		.uleb128 0x2
 2687 009e 01       		.byte	0x1
 2688 009f 08       		.byte	0x8
 2689 00a0 42060000 		.4byte	.LASF14
 2690 00a4 04       		.uleb128 0x4
 2691 00a5 BE050000 		.4byte	.LASF15
 2692 00a9 02       		.byte	0x2
 2693 00aa A102     		.2byte	0x2a1
 2694 00ac B0000000 		.4byte	0xb0
 2695 00b0 05       		.uleb128 0x5
 2696 00b1 6B000000 		.4byte	0x6b
 2697 00b5 04       		.uleb128 0x4
 2698 00b6 72040000 		.4byte	.LASF16
 2699 00ba 02       		.byte	0x2
 2700 00bb A302     		.2byte	0x2a3
 2701 00bd C1000000 		.4byte	0xc1
 2702 00c1 05       		.uleb128 0x5
 2703 00c2 83000000 		.4byte	0x83
 2704 00c6 04       		.uleb128 0x4
 2705 00c7 47060000 		.4byte	.LASF17
 2706 00cb 02       		.byte	0x2
 2707 00cc B302     		.2byte	0x2b3
 2708 00ce D2000000 		.4byte	0xd2
 2709 00d2 06       		.uleb128 0x6
 2710 00d3 04       		.byte	0x4
 2711 00d4 D8000000 		.4byte	0xd8
 2712 00d8 07       		.uleb128 0x7
 2713 00d9 02       		.uleb128 0x2
 2714 00da 08       		.byte	0x8
 2715 00db 04       		.byte	0x4
 2716 00dc EB040000 		.4byte	.LASF18
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 115


 2717 00e0 02       		.uleb128 0x2
 2718 00e1 04       		.byte	0x4
 2719 00e2 07       		.byte	0x7
 2720 00e3 9B040000 		.4byte	.LASF19
 2721 00e7 04       		.uleb128 0x4
 2722 00e8 82050000 		.4byte	.LASF20
 2723 00ec 03       		.byte	0x3
 2724 00ed 0801     		.2byte	0x108
 2725 00ef D2000000 		.4byte	0xd2
 2726 00f3 08       		.uleb128 0x8
 2727 00f4 6A070000 		.4byte	.LASF33
 2728 00f8 01       		.byte	0x1
 2729 00f9 62       		.byte	0x62
 2730 00fa 00000000 		.4byte	.LFB1
 2731 00fe 14000000 		.4byte	.LFE1-.LFB1
 2732 0102 01       		.uleb128 0x1
 2733 0103 9C       		.byte	0x9c
 2734 0104 09       		.uleb128 0x9
 2735 0105 58040000 		.4byte	.LASF22
 2736 0109 01       		.byte	0x1
 2737 010a 1401     		.2byte	0x114
 2738 010c 00000000 		.4byte	.LFB4
 2739 0110 54000000 		.4byte	.LFE4-.LFB4
 2740 0114 01       		.uleb128 0x1
 2741 0115 9C       		.byte	0x9c
 2742 0116 39010000 		.4byte	0x139
 2743 011a 0A       		.uleb128 0xa
 2744 011b 6900     		.ascii	"i\000"
 2745 011d 01       		.byte	0x1
 2746 011e 1701     		.2byte	0x117
 2747 0120 83000000 		.4byte	0x83
 2748 0124 00000000 		.4byte	.LLST0
 2749 0128 0B       		.uleb128 0xb
 2750 0129 C0010000 		.4byte	.LASF21
 2751 012d 01       		.byte	0x1
 2752 012e 1A01     		.2byte	0x11a
 2753 0130 83000000 		.4byte	0x83
 2754 0134 37000000 		.4byte	.LLST1
 2755 0138 00       		.byte	0
 2756 0139 0C       		.uleb128 0xc
 2757 013a 61030000 		.4byte	.LASF23
 2758 013e 01       		.byte	0x1
 2759 013f 83       		.byte	0x83
 2760 0140 00000000 		.4byte	.LFB2
 2761 0144 18000000 		.4byte	.LFE2-.LFB2
 2762 0148 01       		.uleb128 0x1
 2763 0149 9C       		.byte	0x9c
 2764 014a 58010000 		.4byte	0x158
 2765 014e 0D       		.uleb128 0xd
 2766 014f 06000000 		.4byte	.LVL8
 2767 0153 04010000 		.4byte	0x104
 2768 0157 00       		.byte	0
 2769 0158 0E       		.uleb128 0xe
 2770 0159 FB010000 		.4byte	.LASF35
 2771 015d 01       		.byte	0x1
 2772 015e 4C01     		.2byte	0x14c
 2773 0160 83000000 		.4byte	0x83
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 116


 2774 0164 00000000 		.4byte	.LFB5
 2775 0168 14000000 		.4byte	.LFE5-.LFB5
 2776 016c 01       		.uleb128 0x1
 2777 016d 9C       		.byte	0x9c
 2778 016e 09       		.uleb128 0x9
 2779 016f 1F000000 		.4byte	.LASF24
 2780 0173 01       		.byte	0x1
 2781 0174 1C02     		.2byte	0x21c
 2782 0176 00000000 		.4byte	.LFB6
 2783 017a 20000000 		.4byte	.LFE6-.LFB6
 2784 017e 01       		.uleb128 0x1
 2785 017f 9C       		.byte	0x9c
 2786 0180 C7010000 		.4byte	0x1c7
 2787 0184 0F       		.uleb128 0xf
 2788 0185 27060000 		.4byte	.LASF28
 2789 0189 01       		.byte	0x1
 2790 018a 1C02     		.2byte	0x21c
 2791 018c 83000000 		.4byte	0x83
 2792 0190 7E000000 		.4byte	.LLST2
 2793 0194 0B       		.uleb128 0xb
 2794 0195 D1010000 		.4byte	.LASF25
 2795 0199 01       		.byte	0x1
 2796 019a 1E02     		.2byte	0x21e
 2797 019c 6B000000 		.4byte	0x6b
 2798 01a0 AA000000 		.4byte	.LLST3
 2799 01a4 0B       		.uleb128 0xb
 2800 01a5 BF070000 		.4byte	.LASF26
 2801 01a9 01       		.byte	0x1
 2802 01aa 1F02     		.2byte	0x21f
 2803 01ac 83000000 		.4byte	0x83
 2804 01b0 BD000000 		.4byte	.LLST4
 2805 01b4 0D       		.uleb128 0xd
 2806 01b5 08000000 		.4byte	.LVL10
 2807 01b9 080D0000 		.4byte	0xd08
 2808 01bd 0D       		.uleb128 0xd
 2809 01be 1A000000 		.4byte	.LVL14
 2810 01c2 130D0000 		.4byte	0xd13
 2811 01c6 00       		.byte	0
 2812 01c7 09       		.uleb128 0x9
 2813 01c8 4B000000 		.4byte	.LASF27
 2814 01cc 01       		.byte	0x1
 2815 01cd 6402     		.2byte	0x264
 2816 01cf 00000000 		.4byte	.LFB7
 2817 01d3 38000000 		.4byte	.LFE7-.LFB7
 2818 01d7 01       		.uleb128 0x1
 2819 01d8 9C       		.byte	0x9c
 2820 01d9 EC010000 		.4byte	0x1ec
 2821 01dd 10       		.uleb128 0x10
 2822 01de 4E020000 		.4byte	.LASF29
 2823 01e2 01       		.byte	0x1
 2824 01e3 6402     		.2byte	0x264
 2825 01e5 83000000 		.4byte	0x83
 2826 01e9 01       		.uleb128 0x1
 2827 01ea 50       		.byte	0x50
 2828 01eb 00       		.byte	0
 2829 01ec 11       		.uleb128 0x11
 2830 01ed 85020000 		.4byte	.LASF38
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 117


 2831 01f1 01       		.byte	0x1
 2832 01f2 8902     		.2byte	0x289
 2833 01f4 83000000 		.4byte	0x83
 2834 01f8 00000000 		.4byte	.LFB8
 2835 01fc 1C000000 		.4byte	.LFE8-.LFB8
 2836 0200 01       		.uleb128 0x1
 2837 0201 9C       		.byte	0x9c
 2838 0202 39020000 		.4byte	0x239
 2839 0206 0B       		.uleb128 0xb
 2840 0207 D1010000 		.4byte	.LASF25
 2841 020b 01       		.byte	0x1
 2842 020c 8B02     		.2byte	0x28b
 2843 020e 6B000000 		.4byte	0x6b
 2844 0212 DB000000 		.4byte	.LLST5
 2845 0216 0B       		.uleb128 0xb
 2846 0217 FF040000 		.4byte	.LASF30
 2847 021b 01       		.byte	0x1
 2848 021c 8C02     		.2byte	0x28c
 2849 021e 83000000 		.4byte	0x83
 2850 0222 EE000000 		.4byte	.LLST6
 2851 0226 0D       		.uleb128 0xd
 2852 0227 06000000 		.4byte	.LVL17
 2853 022b 080D0000 		.4byte	0xd08
 2854 022f 0D       		.uleb128 0xd
 2855 0230 12000000 		.4byte	.LVL19
 2856 0234 130D0000 		.4byte	0xd13
 2857 0238 00       		.byte	0
 2858 0239 09       		.uleb128 0x9
 2859 023a 64060000 		.4byte	.LASF31
 2860 023e 01       		.byte	0x1
 2861 023f C602     		.2byte	0x2c6
 2862 0241 00000000 		.4byte	.LFB9
 2863 0245 30000000 		.4byte	.LFE9-.LFB9
 2864 0249 01       		.uleb128 0x1
 2865 024a 9C       		.byte	0x9c
 2866 024b 82020000 		.4byte	0x282
 2867 024f 0F       		.uleb128 0xf
 2868 0250 57070000 		.4byte	.LASF32
 2869 0254 01       		.byte	0x1
 2870 0255 C602     		.2byte	0x2c6
 2871 0257 83000000 		.4byte	0x83
 2872 025b 0C010000 		.4byte	.LLST7
 2873 025f 0B       		.uleb128 0xb
 2874 0260 D1010000 		.4byte	.LASF25
 2875 0264 01       		.byte	0x1
 2876 0265 C802     		.2byte	0x2c8
 2877 0267 6B000000 		.4byte	0x6b
 2878 026b 38010000 		.4byte	.LLST8
 2879 026f 0D       		.uleb128 0xd
 2880 0270 08000000 		.4byte	.LVL22
 2881 0274 080D0000 		.4byte	0xd08
 2882 0278 0D       		.uleb128 0xd
 2883 0279 24000000 		.4byte	.LVL24
 2884 027d 130D0000 		.4byte	0xd13
 2885 0281 00       		.byte	0
 2886 0282 12       		.uleb128 0x12
 2887 0283 F2060000 		.4byte	.LASF34
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 118


 2888 0287 01       		.byte	0x1
 2889 0288 4E0A     		.2byte	0xa4e
 2890 028a 00000000 		.4byte	.LFB12
 2891 028e 20000000 		.4byte	.LFE12-.LFB12
 2892 0292 01       		.uleb128 0x1
 2893 0293 9C       		.byte	0x9c
 2894 0294 0E       		.uleb128 0xe
 2895 0295 46030000 		.4byte	.LASF36
 2896 0299 01       		.byte	0x1
 2897 029a 600A     		.2byte	0xa60
 2898 029c 83000000 		.4byte	0x83
 2899 02a0 00000000 		.4byte	.LFB13
 2900 02a4 10000000 		.4byte	.LFE13-.LFB13
 2901 02a8 01       		.uleb128 0x1
 2902 02a9 9C       		.byte	0x9c
 2903 02aa 12       		.uleb128 0x12
 2904 02ab 62020000 		.4byte	.LASF37
 2905 02af 01       		.byte	0x1
 2906 02b0 700A     		.2byte	0xa70
 2907 02b2 00000000 		.4byte	.LFB14
 2908 02b6 0C000000 		.4byte	.LFE14-.LFB14
 2909 02ba 01       		.uleb128 0x1
 2910 02bb 9C       		.byte	0x9c
 2911 02bc 11       		.uleb128 0x11
 2912 02bd AD030000 		.4byte	.LASF39
 2913 02c1 01       		.byte	0x1
 2914 02c2 8A0A     		.2byte	0xa8a
 2915 02c4 83000000 		.4byte	0x83
 2916 02c8 00000000 		.4byte	.LFB15
 2917 02cc 14000000 		.4byte	.LFE15-.LFB15
 2918 02d0 01       		.uleb128 0x1
 2919 02d1 9C       		.byte	0x9c
 2920 02d2 F5020000 		.4byte	0x2f5
 2921 02d6 0F       		.uleb128 0xf
 2922 02d7 3B060000 		.4byte	.LASF40
 2923 02db 01       		.byte	0x1
 2924 02dc 8A0A     		.2byte	0xa8a
 2925 02de 83000000 		.4byte	0x83
 2926 02e2 4B010000 		.4byte	.LLST9
 2927 02e6 13       		.uleb128 0x13
 2928 02e7 87040000 		.4byte	.LASF41
 2929 02eb 01       		.byte	0x1
 2930 02ec 8C0A     		.2byte	0xa8c
 2931 02ee 83000000 		.4byte	0x83
 2932 02f2 01       		.uleb128 0x1
 2933 02f3 50       		.byte	0x50
 2934 02f4 00       		.byte	0
 2935 02f5 11       		.uleb128 0x11
 2936 02f6 67000000 		.4byte	.LASF42
 2937 02fa 01       		.byte	0x1
 2938 02fb A10A     		.2byte	0xaa1
 2939 02fd 83000000 		.4byte	0x83
 2940 0301 00000000 		.4byte	.LFB16
 2941 0305 10000000 		.4byte	.LFE16-.LFB16
 2942 0309 01       		.uleb128 0x1
 2943 030a 9C       		.byte	0x9c
 2944 030b 1E030000 		.4byte	0x31e
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 119


 2945 030f 13       		.uleb128 0x13
 2946 0310 16000000 		.4byte	.LASF43
 2947 0314 01       		.byte	0x1
 2948 0315 A30A     		.2byte	0xaa3
 2949 0317 83000000 		.4byte	0x83
 2950 031b 01       		.uleb128 0x1
 2951 031c 50       		.byte	0x50
 2952 031d 00       		.byte	0
 2953 031e 09       		.uleb128 0x9
 2954 031f 52010000 		.4byte	.LASF44
 2955 0323 01       		.byte	0x1
 2956 0324 B80A     		.2byte	0xab8
 2957 0326 00000000 		.4byte	.LFB17
 2958 032a 0C000000 		.4byte	.LFE17-.LFB17
 2959 032e 01       		.uleb128 0x1
 2960 032f 9C       		.byte	0x9c
 2961 0330 43030000 		.4byte	0x343
 2962 0334 10       		.uleb128 0x10
 2963 0335 80020000 		.4byte	.LASF45
 2964 0339 01       		.byte	0x1
 2965 033a B80A     		.2byte	0xab8
 2966 033c 83000000 		.4byte	0x83
 2967 0340 01       		.uleb128 0x1
 2968 0341 50       		.byte	0x50
 2969 0342 00       		.byte	0
 2970 0343 09       		.uleb128 0x9
 2971 0344 09060000 		.4byte	.LASF46
 2972 0348 01       		.byte	0x1
 2973 0349 6F0B     		.2byte	0xb6f
 2974 034b 00000000 		.4byte	.LFB24
 2975 034f 14000000 		.4byte	.LFE24-.LFB24
 2976 0353 01       		.uleb128 0x1
 2977 0354 9C       		.byte	0x9c
 2978 0355 6A030000 		.4byte	0x36a
 2979 0359 0F       		.uleb128 0xf
 2980 035a 02040000 		.4byte	.LASF47
 2981 035e 01       		.byte	0x1
 2982 035f 6F0B     		.2byte	0xb6f
 2983 0361 6B000000 		.4byte	0x6b
 2984 0365 69010000 		.4byte	.LLST10
 2985 0369 00       		.byte	0
 2986 036a 11       		.uleb128 0x11
 2987 036b 98010000 		.4byte	.LASF48
 2988 036f 01       		.byte	0x1
 2989 0370 810B     		.2byte	0xb81
 2990 0372 6B000000 		.4byte	0x6b
 2991 0376 00000000 		.4byte	.LFB25
 2992 037a 18000000 		.4byte	.LFE25-.LFB25
 2993 037e 01       		.uleb128 0x1
 2994 037f 9C       		.byte	0x9c
 2995 0380 95030000 		.4byte	0x395
 2996 0384 0F       		.uleb128 0xf
 2997 0385 02040000 		.4byte	.LASF47
 2998 0389 01       		.byte	0x1
 2999 038a 810B     		.2byte	0xb81
 3000 038c 6B000000 		.4byte	0x6b
 3001 0390 8A010000 		.4byte	.LLST11
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 120


 3002 0394 00       		.byte	0
 3003 0395 09       		.uleb128 0x9
 3004 0396 22020000 		.4byte	.LASF49
 3005 039a 01       		.byte	0x1
 3006 039b 910B     		.2byte	0xb91
 3007 039d 00000000 		.4byte	.LFB26
 3008 03a1 14000000 		.4byte	.LFE26-.LFB26
 3009 03a5 01       		.uleb128 0x1
 3010 03a6 9C       		.byte	0x9c
 3011 03a7 BC030000 		.4byte	0x3bc
 3012 03ab 0F       		.uleb128 0xf
 3013 03ac 02040000 		.4byte	.LASF47
 3014 03b0 01       		.byte	0x1
 3015 03b1 910B     		.2byte	0xb91
 3016 03b3 6B000000 		.4byte	0x6b
 3017 03b7 AB010000 		.4byte	.LLST12
 3018 03bb 00       		.byte	0
 3019 03bc 09       		.uleb128 0x9
 3020 03bd 88030000 		.4byte	.LASF50
 3021 03c1 01       		.byte	0x1
 3022 03c2 9F0B     		.2byte	0xb9f
 3023 03c4 00000000 		.4byte	.LFB27
 3024 03c8 14000000 		.4byte	.LFE27-.LFB27
 3025 03cc 01       		.uleb128 0x1
 3026 03cd 9C       		.byte	0x9c
 3027 03ce E3030000 		.4byte	0x3e3
 3028 03d2 0F       		.uleb128 0xf
 3029 03d3 02040000 		.4byte	.LASF47
 3030 03d7 01       		.byte	0x1
 3031 03d8 9F0B     		.2byte	0xb9f
 3032 03da 6B000000 		.4byte	0x6b
 3033 03de CC010000 		.4byte	.LLST13
 3034 03e2 00       		.byte	0
 3035 03e3 09       		.uleb128 0x9
 3036 03e4 D9040000 		.4byte	.LASF51
 3037 03e8 01       		.byte	0x1
 3038 03e9 AE0B     		.2byte	0xbae
 3039 03eb 00000000 		.4byte	.LFB28
 3040 03ef 14000000 		.4byte	.LFE28-.LFB28
 3041 03f3 01       		.uleb128 0x1
 3042 03f4 9C       		.byte	0x9c
 3043 03f5 0A040000 		.4byte	0x40a
 3044 03f9 0F       		.uleb128 0xf
 3045 03fa 02040000 		.4byte	.LASF47
 3046 03fe 01       		.byte	0x1
 3047 03ff AE0B     		.2byte	0xbae
 3048 0401 6B000000 		.4byte	0x6b
 3049 0405 ED010000 		.4byte	.LLST14
 3050 0409 00       		.byte	0
 3051 040a 09       		.uleb128 0x9
 3052 040b CD050000 		.4byte	.LASF52
 3053 040f 01       		.byte	0x1
 3054 0410 BD0B     		.2byte	0xbbd
 3055 0412 00000000 		.4byte	.LFB29
 3056 0416 04000000 		.4byte	.LFE29-.LFB29
 3057 041a 01       		.uleb128 0x1
 3058 041b 9C       		.byte	0x9c
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 121


 3059 041c 2F040000 		.4byte	0x42f
 3060 0420 10       		.uleb128 0x10
 3061 0421 3B060000 		.4byte	.LASF40
 3062 0425 01       		.byte	0x1
 3063 0426 BD0B     		.2byte	0xbbd
 3064 0428 6B000000 		.4byte	0x6b
 3065 042c 01       		.uleb128 0x1
 3066 042d 50       		.byte	0x50
 3067 042e 00       		.byte	0
 3068 042f 11       		.uleb128 0x11
 3069 0430 46040000 		.4byte	.LASF53
 3070 0434 01       		.byte	0x1
 3071 0435 D10A     		.2byte	0xad1
 3072 0437 C6000000 		.4byte	0xc6
 3073 043b 00000000 		.4byte	.LFB18
 3074 043f 20000000 		.4byte	.LFE18-.LFB18
 3075 0443 01       		.uleb128 0x1
 3076 0444 9C       		.byte	0x9c
 3077 0445 97040000 		.4byte	0x497
 3078 0449 0F       		.uleb128 0xf
 3079 044a 02040000 		.4byte	.LASF47
 3080 044e 01       		.byte	0x1
 3081 044f D10A     		.2byte	0xad1
 3082 0451 6B000000 		.4byte	0x6b
 3083 0455 0E020000 		.4byte	.LLST15
 3084 0459 0F       		.uleb128 0xf
 3085 045a F7040000 		.4byte	.LASF54
 3086 045e 01       		.byte	0x1
 3087 045f D10A     		.2byte	0xad1
 3088 0461 C6000000 		.4byte	0xc6
 3089 0465 2F020000 		.4byte	.LLST16
 3090 0469 13       		.uleb128 0x13
 3091 046a 02070000 		.4byte	.LASF55
 3092 046e 01       		.byte	0x1
 3093 046f D30A     		.2byte	0xad3
 3094 0471 C6000000 		.4byte	0xc6
 3095 0475 01       		.uleb128 0x1
 3096 0476 50       		.byte	0x50
 3097 0477 14       		.uleb128 0x14
 3098 0478 00000000 		.4byte	.LASF56
 3099 047c 01       		.byte	0x1
 3100 047d D40A     		.2byte	0xad4
 3101 047f 97040000 		.4byte	0x497
 3102 0483 00000020 		.4byte	0x20000000
 3103 0487 15       		.uleb128 0x15
 3104 0488 10000000 		.4byte	.LVL45
 3105 048c 0A040000 		.4byte	0x40a
 3106 0490 16       		.uleb128 0x16
 3107 0491 01       		.uleb128 0x1
 3108 0492 50       		.byte	0x50
 3109 0493 01       		.uleb128 0x1
 3110 0494 30       		.byte	0x30
 3111 0495 00       		.byte	0
 3112 0496 00       		.byte	0
 3113 0497 06       		.uleb128 0x6
 3114 0498 04       		.byte	0x4
 3115 0499 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 122


 3116 049d 11       		.uleb128 0x11
 3117 049e 15060000 		.4byte	.LASF57
 3118 04a2 01       		.byte	0x1
 3119 04a3 F30A     		.2byte	0xaf3
 3120 04a5 C6000000 		.4byte	0xc6
 3121 04a9 00000000 		.4byte	.LFB19
 3122 04ad 1C000000 		.4byte	.LFE19-.LFB19
 3123 04b1 01       		.uleb128 0x1
 3124 04b2 9C       		.byte	0x9c
 3125 04b3 E7040000 		.4byte	0x4e7
 3126 04b7 0F       		.uleb128 0xf
 3127 04b8 02040000 		.4byte	.LASF47
 3128 04bc 01       		.byte	0x1
 3129 04bd F30A     		.2byte	0xaf3
 3130 04bf 6B000000 		.4byte	0x6b
 3131 04c3 5B020000 		.4byte	.LLST17
 3132 04c7 14       		.uleb128 0x14
 3133 04c8 00000000 		.4byte	.LASF56
 3134 04cc 01       		.byte	0x1
 3135 04cd F50A     		.2byte	0xaf5
 3136 04cf 97040000 		.4byte	0x497
 3137 04d3 00000020 		.4byte	0x20000000
 3138 04d7 15       		.uleb128 0x15
 3139 04d8 0E000000 		.4byte	.LVL51
 3140 04dc 0A040000 		.4byte	0x40a
 3141 04e0 16       		.uleb128 0x16
 3142 04e1 01       		.uleb128 0x1
 3143 04e2 50       		.byte	0x50
 3144 04e3 01       		.uleb128 0x1
 3145 04e4 30       		.byte	0x30
 3146 04e5 00       		.byte	0
 3147 04e6 00       		.byte	0
 3148 04e7 11       		.uleb128 0x11
 3149 04e8 F3030000 		.4byte	.LASF58
 3150 04ec 01       		.byte	0x1
 3151 04ed 090B     		.2byte	0xb09
 3152 04ef C6000000 		.4byte	0xc6
 3153 04f3 00000000 		.4byte	.LFB20
 3154 04f7 22000000 		.4byte	.LFE20-.LFB20
 3155 04fb 01       		.uleb128 0x1
 3156 04fc 9C       		.byte	0x9c
 3157 04fd 4F050000 		.4byte	0x54f
 3158 0501 0F       		.uleb128 0xf
 3159 0502 02040000 		.4byte	.LASF47
 3160 0506 01       		.byte	0x1
 3161 0507 090B     		.2byte	0xb09
 3162 0509 6B000000 		.4byte	0x6b
 3163 050d 7C020000 		.4byte	.LLST18
 3164 0511 0F       		.uleb128 0xf
 3165 0512 F7040000 		.4byte	.LASF54
 3166 0516 01       		.byte	0x1
 3167 0517 090B     		.2byte	0xb09
 3168 0519 C6000000 		.4byte	0xc6
 3169 051d 9D020000 		.4byte	.LLST19
 3170 0521 13       		.uleb128 0x13
 3171 0522 02070000 		.4byte	.LASF55
 3172 0526 01       		.byte	0x1
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 123


 3173 0527 0B0B     		.2byte	0xb0b
 3174 0529 C6000000 		.4byte	0xc6
 3175 052d 01       		.uleb128 0x1
 3176 052e 50       		.byte	0x50
 3177 052f 14       		.uleb128 0x14
 3178 0530 00000000 		.4byte	.LASF56
 3179 0534 01       		.byte	0x1
 3180 0535 0C0B     		.2byte	0xb0c
 3181 0537 97040000 		.4byte	0x497
 3182 053b 00000020 		.4byte	0x20000000
 3183 053f 15       		.uleb128 0x15
 3184 0540 10000000 		.4byte	.LVL55
 3185 0544 0A040000 		.4byte	0x40a
 3186 0548 16       		.uleb128 0x16
 3187 0549 01       		.uleb128 0x1
 3188 054a 50       		.byte	0x50
 3189 054b 01       		.uleb128 0x1
 3190 054c 30       		.byte	0x30
 3191 054d 00       		.byte	0
 3192 054e 00       		.byte	0
 3193 054f 11       		.uleb128 0x11
 3194 0550 94050000 		.4byte	.LASF59
 3195 0554 01       		.byte	0x1
 3196 0555 250B     		.2byte	0xb25
 3197 0557 C6000000 		.4byte	0xc6
 3198 055b 00000000 		.4byte	.LFB21
 3199 055f 1E000000 		.4byte	.LFE21-.LFB21
 3200 0563 01       		.uleb128 0x1
 3201 0564 9C       		.byte	0x9c
 3202 0565 99050000 		.4byte	0x599
 3203 0569 0F       		.uleb128 0xf
 3204 056a 02040000 		.4byte	.LASF47
 3205 056e 01       		.byte	0x1
 3206 056f 250B     		.2byte	0xb25
 3207 0571 6B000000 		.4byte	0x6b
 3208 0575 C9020000 		.4byte	.LLST20
 3209 0579 14       		.uleb128 0x14
 3210 057a 00000000 		.4byte	.LASF56
 3211 057e 01       		.byte	0x1
 3212 057f 270B     		.2byte	0xb27
 3213 0581 97040000 		.4byte	0x497
 3214 0585 00000020 		.4byte	0x20000000
 3215 0589 15       		.uleb128 0x15
 3216 058a 0E000000 		.4byte	.LVL61
 3217 058e 0A040000 		.4byte	0x40a
 3218 0592 16       		.uleb128 0x16
 3219 0593 01       		.uleb128 0x1
 3220 0594 50       		.byte	0x50
 3221 0595 01       		.uleb128 0x1
 3222 0596 30       		.byte	0x30
 3223 0597 00       		.byte	0
 3224 0598 00       		.byte	0
 3225 0599 09       		.uleb128 0x9
 3226 059a 46050000 		.4byte	.LASF60
 3227 059e 01       		.byte	0x1
 3228 059f 380B     		.2byte	0xb38
 3229 05a1 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 124


 3230 05a5 4C000000 		.4byte	.LFE22-.LFB22
 3231 05a9 01       		.uleb128 0x1
 3232 05aa 9C       		.byte	0x9c
 3233 05ab 38060000 		.4byte	0x638
 3234 05af 0F       		.uleb128 0xf
 3235 05b0 02040000 		.4byte	.LASF47
 3236 05b4 01       		.byte	0x1
 3237 05b5 380B     		.2byte	0xb38
 3238 05b7 6B000000 		.4byte	0x6b
 3239 05bb EA020000 		.4byte	.LLST21
 3240 05bf 0F       		.uleb128 0xf
 3241 05c0 09040000 		.4byte	.LASF61
 3242 05c4 01       		.byte	0x1
 3243 05c5 380B     		.2byte	0xb38
 3244 05c7 6B000000 		.4byte	0x6b
 3245 05cb 0B030000 		.4byte	.LLST22
 3246 05cf 0B       		.uleb128 0xb
 3247 05d0 D1010000 		.4byte	.LASF25
 3248 05d4 01       		.byte	0x1
 3249 05d5 3A0B     		.2byte	0xb3a
 3250 05d7 6B000000 		.4byte	0x6b
 3251 05db 2C030000 		.4byte	.LLST23
 3252 05df 0B       		.uleb128 0xb
 3253 05e0 5C020000 		.4byte	.LASF62
 3254 05e4 01       		.byte	0x1
 3255 05e5 3B0B     		.2byte	0xb3b
 3256 05e7 83000000 		.4byte	0x83
 3257 05eb 3F030000 		.4byte	.LLST24
 3258 05ef 0B       		.uleb128 0xb
 3259 05f0 E2020000 		.4byte	.LASF63
 3260 05f4 01       		.byte	0x1
 3261 05f5 3C0B     		.2byte	0xb3c
 3262 05f7 83000000 		.4byte	0x83
 3263 05fb 52030000 		.4byte	.LLST25
 3264 05ff 17       		.uleb128 0x17
 3265 0600 10000000 		.4byte	.LVL64
 3266 0604 0A040000 		.4byte	0x40a
 3267 0608 12060000 		.4byte	0x612
 3268 060c 16       		.uleb128 0x16
 3269 060d 01       		.uleb128 0x1
 3270 060e 50       		.byte	0x50
 3271 060f 01       		.uleb128 0x1
 3272 0610 30       		.byte	0x30
 3273 0611 00       		.byte	0
 3274 0612 17       		.uleb128 0x17
 3275 0613 1A000000 		.4byte	.LVL65
 3276 0617 0A040000 		.4byte	0x40a
 3277 061b 25060000 		.4byte	0x625
 3278 061f 16       		.uleb128 0x16
 3279 0620 01       		.uleb128 0x1
 3280 0621 50       		.byte	0x50
 3281 0622 01       		.uleb128 0x1
 3282 0623 30       		.byte	0x30
 3283 0624 00       		.byte	0
 3284 0625 0D       		.uleb128 0xd
 3285 0626 26000000 		.4byte	.LVL67
 3286 062a 080D0000 		.4byte	0xd08
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 125


 3287 062e 0D       		.uleb128 0xd
 3288 062f 46000000 		.4byte	.LVL73
 3289 0633 130D0000 		.4byte	0xd13
 3290 0637 00       		.byte	0
 3291 0638 11       		.uleb128 0x11
 3292 0639 B6020000 		.4byte	.LASF64
 3293 063d 01       		.byte	0x1
 3294 063e 5A0B     		.2byte	0xb5a
 3295 0640 6B000000 		.4byte	0x6b
 3296 0644 00000000 		.4byte	.LFB23
 3297 0648 2C000000 		.4byte	.LFE23-.LFB23
 3298 064c 01       		.uleb128 0x1
 3299 064d 9C       		.byte	0x9c
 3300 064e 82060000 		.4byte	0x682
 3301 0652 0F       		.uleb128 0xf
 3302 0653 02040000 		.4byte	.LASF47
 3303 0657 01       		.byte	0x1
 3304 0658 5A0B     		.2byte	0xb5a
 3305 065a 6B000000 		.4byte	0x6b
 3306 065e 86030000 		.4byte	.LLST26
 3307 0662 0B       		.uleb128 0xb
 3308 0663 09040000 		.4byte	.LASF61
 3309 0667 01       		.byte	0x1
 3310 0668 5C0B     		.2byte	0xb5c
 3311 066a 6B000000 		.4byte	0x6b
 3312 066e A7030000 		.4byte	.LLST27
 3313 0672 15       		.uleb128 0x15
 3314 0673 0E000000 		.4byte	.LVL77
 3315 0677 0A040000 		.4byte	0x40a
 3316 067b 16       		.uleb128 0x16
 3317 067c 01       		.uleb128 0x1
 3318 067d 50       		.byte	0x50
 3319 067e 01       		.uleb128 0x1
 3320 067f 30       		.byte	0x30
 3321 0680 00       		.byte	0
 3322 0681 00       		.byte	0
 3323 0682 12       		.uleb128 0x12
 3324 0683 6F010000 		.4byte	.LASF65
 3325 0687 01       		.byte	0x1
 3326 0688 D50B     		.2byte	0xbd5
 3327 068a 00000000 		.4byte	.LFB30
 3328 068e 18000000 		.4byte	.LFE30-.LFB30
 3329 0692 01       		.uleb128 0x1
 3330 0693 9C       		.byte	0x9c
 3331 0694 09       		.uleb128 0x9
 3332 0695 B8060000 		.4byte	.LASF66
 3333 0699 01       		.byte	0x1
 3334 069a E90B     		.2byte	0xbe9
 3335 069c 00000000 		.4byte	.LFB31
 3336 06a0 30000000 		.4byte	.LFE31-.LFB31
 3337 06a4 01       		.uleb128 0x1
 3338 06a5 9C       		.byte	0x9c
 3339 06a6 CD060000 		.4byte	0x6cd
 3340 06aa 0F       		.uleb128 0xf
 3341 06ab A3050000 		.4byte	.LASF67
 3342 06af 01       		.byte	0x1
 3343 06b0 E90B     		.2byte	0xbe9
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 126


 3344 06b2 83000000 		.4byte	0x83
 3345 06b6 BA030000 		.4byte	.LLST28
 3346 06ba 0D       		.uleb128 0xd
 3347 06bb 0E000000 		.4byte	.LVL82
 3348 06bf 1E0D0000 		.4byte	0xd1e
 3349 06c3 0D       		.uleb128 0xd
 3350 06c4 26000000 		.4byte	.LVL84
 3351 06c8 1E0D0000 		.4byte	0xd1e
 3352 06cc 00       		.byte	0
 3353 06cd 0C       		.uleb128 0xc
 3354 06ce 9D020000 		.4byte	.LASF68
 3355 06d2 01       		.byte	0x1
 3356 06d3 A7       		.byte	0xa7
 3357 06d4 00000000 		.4byte	.LFB3
 3358 06d8 F4000000 		.4byte	.LFE3-.LFB3
 3359 06dc 01       		.uleb128 0x1
 3360 06dd 9C       		.byte	0x9c
 3361 06de 96070000 		.4byte	0x796
 3362 06e2 18       		.uleb128 0x18
 3363 06e3 6900     		.ascii	"i\000"
 3364 06e5 01       		.byte	0x1
 3365 06e6 AA       		.byte	0xaa
 3366 06e7 83000000 		.4byte	0x83
 3367 06eb D8030000 		.4byte	.LLST29
 3368 06ef 19       		.uleb128 0x19
 3369 06f0 C0010000 		.4byte	.LASF21
 3370 06f4 01       		.byte	0x1
 3371 06f5 AD       		.byte	0xad
 3372 06f6 83000000 		.4byte	0x83
 3373 06fa 0F040000 		.4byte	.LLST30
 3374 06fe 19       		.uleb128 0x19
 3375 06ff D1010000 		.4byte	.LASF25
 3376 0703 01       		.byte	0x1
 3377 0704 AE       		.byte	0xae
 3378 0705 6B000000 		.4byte	0x6b
 3379 0709 45040000 		.4byte	.LLST31
 3380 070d 19       		.uleb128 0x19
 3381 070e D4030000 		.4byte	.LASF69
 3382 0712 01       		.byte	0x1
 3383 0713 AF       		.byte	0xaf
 3384 0714 83000000 		.4byte	0x83
 3385 0718 58040000 		.4byte	.LLST32
 3386 071c 19       		.uleb128 0x19
 3387 071d E0010000 		.4byte	.LASF70
 3388 0721 01       		.byte	0x1
 3389 0722 B0       		.byte	0xb0
 3390 0723 83000000 		.4byte	0x83
 3391 0727 8D040000 		.4byte	.LLST33
 3392 072b 1A       		.uleb128 0x1a
 3393 072c AC060000 		.4byte	.LASF71
 3394 0730 01       		.byte	0x1
 3395 0731 B1       		.byte	0xb1
 3396 0732 C1000000 		.4byte	0xc1
 3397 0736 02       		.uleb128 0x2
 3398 0737 91       		.byte	0x91
 3399 0738 6C       		.sleb128 -20
 3400 0739 0D       		.uleb128 0xd
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 127


 3401 073a 08000000 		.4byte	.LVL87
 3402 073e 290D0000 		.4byte	0xd29
 3403 0742 0D       		.uleb128 0xd
 3404 0743 10000000 		.4byte	.LVL88
 3405 0747 080D0000 		.4byte	0xd08
 3406 074b 17       		.uleb128 0x17
 3407 074c 82000000 		.4byte	.LVL101
 3408 0750 340D0000 		.4byte	0xd34
 3409 0754 5F070000 		.4byte	0x75f
 3410 0758 16       		.uleb128 0x16
 3411 0759 01       		.uleb128 0x1
 3412 075a 50       		.byte	0x50
 3413 075b 02       		.uleb128 0x2
 3414 075c 08       		.byte	0x8
 3415 075d 30       		.byte	0x30
 3416 075e 00       		.byte	0
 3417 075f 17       		.uleb128 0x17
 3418 0760 9E000000 		.4byte	.LVL104
 3419 0764 94060000 		.4byte	0x694
 3420 0768 72070000 		.4byte	0x772
 3421 076c 16       		.uleb128 0x16
 3422 076d 01       		.uleb128 0x1
 3423 076e 50       		.byte	0x50
 3424 076f 01       		.uleb128 0x1
 3425 0770 31       		.byte	0x31
 3426 0771 00       		.byte	0
 3427 0772 17       		.uleb128 0x17
 3428 0773 B2000000 		.4byte	.LVL107
 3429 0777 94060000 		.4byte	0x694
 3430 077b 85070000 		.4byte	0x785
 3431 077f 16       		.uleb128 0x16
 3432 0780 01       		.uleb128 0x1
 3433 0781 50       		.byte	0x50
 3434 0782 01       		.uleb128 0x1
 3435 0783 31       		.byte	0x31
 3436 0784 00       		.byte	0
 3437 0785 15       		.uleb128 0x15
 3438 0786 C8000000 		.4byte	.LVL109
 3439 078a 130D0000 		.4byte	0xd13
 3440 078e 16       		.uleb128 0x16
 3441 078f 01       		.uleb128 0x1
 3442 0790 50       		.byte	0x50
 3443 0791 02       		.uleb128 0x2
 3444 0792 75       		.byte	0x75
 3445 0793 00       		.sleb128 0
 3446 0794 00       		.byte	0
 3447 0795 00       		.byte	0
 3448 0796 09       		.uleb128 0x9
 3449 0797 12040000 		.4byte	.LASF72
 3450 079b 01       		.byte	0x1
 3451 079c 0003     		.2byte	0x300
 3452 079e 00000000 		.4byte	.LFB10
 3453 07a2 80000000 		.4byte	.LFE10-.LFB10
 3454 07a6 01       		.uleb128 0x1
 3455 07a7 9C       		.byte	0x9c
 3456 07a8 2F080000 		.4byte	0x82f
 3457 07ac 0F       		.uleb128 0xf
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 128


 3458 07ad C0010000 		.4byte	.LASF21
 3459 07b1 01       		.byte	0x1
 3460 07b2 0003     		.2byte	0x300
 3461 07b4 83000000 		.4byte	0x83
 3462 07b8 AC040000 		.4byte	.LLST34
 3463 07bc 13       		.uleb128 0x13
 3464 07bd 5F070000 		.4byte	.LASF73
 3465 07c1 01       		.byte	0x1
 3466 07c2 0303     		.2byte	0x303
 3467 07c4 3F080000 		.4byte	0x83f
 3468 07c8 02       		.uleb128 0x2
 3469 07c9 91       		.byte	0x91
 3470 07ca 68       		.sleb128 -24
 3471 07cb 13       		.uleb128 0x13
 3472 07cc 2F020000 		.4byte	.LASF74
 3473 07d0 01       		.byte	0x1
 3474 07d1 0403     		.2byte	0x304
 3475 07d3 54080000 		.4byte	0x854
 3476 07d7 02       		.uleb128 0x2
 3477 07d8 91       		.byte	0x91
 3478 07d9 58       		.sleb128 -40
 3479 07da 0B       		.uleb128 0xb
 3480 07db 11020000 		.4byte	.LASF75
 3481 07df 01       		.byte	0x1
 3482 07e0 0D03     		.2byte	0x30d
 3483 07e2 83000000 		.4byte	0x83
 3484 07e6 E5040000 		.4byte	.LLST35
 3485 07ea 0B       		.uleb128 0xb
 3486 07eb D1010000 		.4byte	.LASF25
 3487 07ef 01       		.byte	0x1
 3488 07f0 1403     		.2byte	0x314
 3489 07f2 6B000000 		.4byte	0x6b
 3490 07f6 1C050000 		.4byte	.LLST36
 3491 07fa 0D       		.uleb128 0xd
 3492 07fb 0A000000 		.4byte	.LVL112
 3493 07ff 080D0000 		.4byte	0xd08
 3494 0803 0D       		.uleb128 0xd
 3495 0804 10000000 		.4byte	.LVL114
 3496 0808 58010000 		.4byte	0x158
 3497 080c 0D       		.uleb128 0xd
 3498 080d 18000000 		.4byte	.LVL116
 3499 0811 04010000 		.4byte	0x104
 3500 0815 0D       		.uleb128 0xd
 3501 0816 56000000 		.4byte	.LVL120
 3502 081a CD060000 		.4byte	0x6cd
 3503 081e 15       		.uleb128 0x15
 3504 081f 5C000000 		.4byte	.LVL121
 3505 0823 130D0000 		.4byte	0xd13
 3506 0827 16       		.uleb128 0x16
 3507 0828 01       		.uleb128 0x1
 3508 0829 50       		.byte	0x50
 3509 082a 02       		.uleb128 0x2
 3510 082b 75       		.byte	0x75
 3511 082c 00       		.sleb128 0
 3512 082d 00       		.byte	0
 3513 082e 00       		.byte	0
 3514 082f 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 129


 3515 0830 C1000000 		.4byte	0xc1
 3516 0834 3F080000 		.4byte	0x83f
 3517 0838 1C       		.uleb128 0x1c
 3518 0839 E0000000 		.4byte	0xe0
 3519 083d 01       		.byte	0x1
 3520 083e 00       		.byte	0
 3521 083f 05       		.uleb128 0x5
 3522 0840 2F080000 		.4byte	0x82f
 3523 0844 1B       		.uleb128 0x1b
 3524 0845 C1000000 		.4byte	0xc1
 3525 0849 54080000 		.4byte	0x854
 3526 084d 1C       		.uleb128 0x1c
 3527 084e E0000000 		.4byte	0xe0
 3528 0852 03       		.byte	0x3
 3529 0853 00       		.byte	0
 3530 0854 05       		.uleb128 0x5
 3531 0855 44080000 		.4byte	0x844
 3532 0859 09       		.uleb128 0x9
 3533 085a 31060000 		.4byte	.LASF76
 3534 085e 01       		.byte	0x1
 3535 085f 000C     		.2byte	0xc00
 3536 0861 00000000 		.4byte	.LFB32
 3537 0865 14000000 		.4byte	.LFE32-.LFB32
 3538 0869 01       		.uleb128 0x1
 3539 086a 9C       		.byte	0x9c
 3540 086b 89080000 		.4byte	0x889
 3541 086f 0F       		.uleb128 0xf
 3542 0870 B2070000 		.4byte	.LASF77
 3543 0874 01       		.byte	0x1
 3544 0875 000C     		.2byte	0xc00
 3545 0877 77000000 		.4byte	0x77
 3546 087b 2F050000 		.4byte	.LLST37
 3547 087f 0D       		.uleb128 0xd
 3548 0880 0C000000 		.4byte	.LVL126
 3549 0884 1E0D0000 		.4byte	0xd1e
 3550 0888 00       		.byte	0
 3551 0889 09       		.uleb128 0x9
 3552 088a 73050000 		.4byte	.LASF78
 3553 088e 01       		.byte	0x1
 3554 088f 300A     		.2byte	0xa30
 3555 0891 00000000 		.4byte	.LFB11
 3556 0895 44000000 		.4byte	.LFE11-.LFB11
 3557 0899 01       		.uleb128 0x1
 3558 089a 9C       		.byte	0x9c
 3559 089b CE080000 		.4byte	0x8ce
 3560 089f 0F       		.uleb128 0xf
 3561 08a0 C3050000 		.4byte	.LASF79
 3562 08a4 01       		.byte	0x1
 3563 08a5 300A     		.2byte	0xa30
 3564 08a7 83000000 		.4byte	0x83
 3565 08ab 50050000 		.4byte	.LLST38
 3566 08af 17       		.uleb128 0x17
 3567 08b0 2E000000 		.4byte	.LVL130
 3568 08b4 59080000 		.4byte	0x859
 3569 08b8 C4080000 		.4byte	0x8c4
 3570 08bc 16       		.uleb128 0x16
 3571 08bd 01       		.uleb128 0x1
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 130


 3572 08be 50       		.byte	0x50
 3573 08bf 03       		.uleb128 0x3
 3574 08c0 0A       		.byte	0xa
 3575 08c1 E803     		.2byte	0x3e8
 3576 08c3 00       		.byte	0
 3577 08c4 0D       		.uleb128 0xd
 3578 08c5 32000000 		.4byte	.LVL131
 3579 08c9 AA020000 		.4byte	0x2aa
 3580 08cd 00       		.byte	0
 3581 08ce 1D       		.uleb128 0x1d
 3582 08cf C5010000 		.4byte	.LASF80
 3583 08d3 01       		.byte	0x1
 3584 08d4 0E0C     		.2byte	0xc0e
 3585 08d6 00000000 		.4byte	.LFB33
 3586 08da 4C000000 		.4byte	.LFE33-.LFB33
 3587 08de 01       		.uleb128 0x1
 3588 08df 9C       		.byte	0x9c
 3589 08e0 F5080000 		.4byte	0x8f5
 3590 08e4 0F       		.uleb128 0xf
 3591 08e5 C0010000 		.4byte	.LASF21
 3592 08e9 01       		.byte	0x1
 3593 08ea 0E0C     		.2byte	0xc0e
 3594 08ec 83000000 		.4byte	0x83
 3595 08f0 7C050000 		.4byte	.LLST39
 3596 08f4 00       		.byte	0
 3597 08f5 12       		.uleb128 0x12
 3598 08f6 49070000 		.4byte	.LASF81
 3599 08fa 01       		.byte	0x1
 3600 08fb 7A0C     		.2byte	0xc7a
 3601 08fd 00000000 		.4byte	.LFB37
 3602 0901 10000000 		.4byte	.LFE37-.LFB37
 3603 0905 01       		.uleb128 0x1
 3604 0906 9C       		.byte	0x9c
 3605 0907 12       		.uleb128 0x12
 3606 0908 7F010000 		.4byte	.LASF82
 3607 090c 01       		.byte	0x1
 3608 090d 8A0C     		.2byte	0xc8a
 3609 090f 00000000 		.4byte	.LFB38
 3610 0913 10000000 		.4byte	.LFE38-.LFB38
 3611 0917 01       		.uleb128 0x1
 3612 0918 9C       		.byte	0x9c
 3613 0919 09       		.uleb128 0x9
 3614 091a 54060000 		.4byte	.LASF83
 3615 091e 01       		.byte	0x1
 3616 091f 690C     		.2byte	0xc69
 3617 0921 00000000 		.4byte	.LFB36
 3618 0925 18000000 		.4byte	.LFE36-.LFB36
 3619 0929 01       		.uleb128 0x1
 3620 092a 9C       		.byte	0x9c
 3621 092b 39090000 		.4byte	0x939
 3622 092f 0D       		.uleb128 0xd
 3623 0930 06000000 		.4byte	.LVL136
 3624 0934 07090000 		.4byte	0x907
 3625 0938 00       		.byte	0
 3626 0939 12       		.uleb128 0x12
 3627 093a D8060000 		.4byte	.LASF84
 3628 093e 01       		.byte	0x1
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 131


 3629 093f 9A0C     		.2byte	0xc9a
 3630 0941 00000000 		.4byte	.LFB39
 3631 0945 10000000 		.4byte	.LFE39-.LFB39
 3632 0949 01       		.uleb128 0x1
 3633 094a 9C       		.byte	0x9c
 3634 094b 09       		.uleb128 0x9
 3635 094c C6070000 		.4byte	.LASF85
 3636 0950 01       		.byte	0x1
 3637 0951 AB0C     		.2byte	0xcab
 3638 0953 00000000 		.4byte	.LFB40
 3639 0957 10000000 		.4byte	.LFE40-.LFB40
 3640 095b 01       		.uleb128 0x1
 3641 095c 9C       		.byte	0x9c
 3642 095d 72090000 		.4byte	0x972
 3643 0961 0F       		.uleb128 0xf
 3644 0962 E2020000 		.4byte	.LASF63
 3645 0966 01       		.byte	0x1
 3646 0967 AB0C     		.2byte	0xcab
 3647 0969 83000000 		.4byte	0x83
 3648 096d 9D050000 		.4byte	.LLST40
 3649 0971 00       		.byte	0
 3650 0972 0E       		.uleb128 0xe
 3651 0973 E8010000 		.4byte	.LASF86
 3652 0977 01       		.byte	0x1
 3653 0978 BB0C     		.2byte	0xcbb
 3654 097a 83000000 		.4byte	0x83
 3655 097e 00000000 		.4byte	.LFB41
 3656 0982 10000000 		.4byte	.LFE41-.LFB41
 3657 0986 01       		.uleb128 0x1
 3658 0987 9C       		.byte	0x9c
 3659 0988 0E       		.uleb128 0xe
 3660 0989 26050000 		.4byte	.LASF87
 3661 098d 01       		.byte	0x1
 3662 098e CB0C     		.2byte	0xccb
 3663 0990 83000000 		.4byte	0x83
 3664 0994 00000000 		.4byte	.LFB42
 3665 0998 10000000 		.4byte	.LFE42-.LFB42
 3666 099c 01       		.uleb128 0x1
 3667 099d 9C       		.byte	0x9c
 3668 099e 09       		.uleb128 0x9
 3669 099f DB030000 		.4byte	.LASF88
 3670 09a3 01       		.byte	0x1
 3671 09a4 EB0C     		.2byte	0xceb
 3672 09a6 00000000 		.4byte	.LFB43
 3673 09aa 20000000 		.4byte	.LFE43-.LFB43
 3674 09ae 01       		.uleb128 0x1
 3675 09af 9C       		.byte	0x9c
 3676 09b0 C3090000 		.4byte	0x9c3
 3677 09b4 10       		.uleb128 0x10
 3678 09b5 E8020000 		.4byte	.LASF89
 3679 09b9 01       		.byte	0x1
 3680 09ba EB0C     		.2byte	0xceb
 3681 09bc 83000000 		.4byte	0x83
 3682 09c0 01       		.uleb128 0x1
 3683 09c1 50       		.byte	0x50
 3684 09c2 00       		.byte	0
 3685 09c3 0E       		.uleb128 0xe
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 132


 3686 09c4 C0060000 		.4byte	.LASF90
 3687 09c8 01       		.byte	0x1
 3688 09c9 040D     		.2byte	0xd04
 3689 09cb 83000000 		.4byte	0x83
 3690 09cf 00000000 		.4byte	.LFB44
 3691 09d3 10000000 		.4byte	.LFE44-.LFB44
 3692 09d7 01       		.uleb128 0x1
 3693 09d8 9C       		.byte	0x9c
 3694 09d9 0E       		.uleb128 0xe
 3695 09da 02030000 		.4byte	.LASF91
 3696 09de 01       		.byte	0x1
 3697 09df 1B0D     		.2byte	0xd1b
 3698 09e1 83000000 		.4byte	0x83
 3699 09e5 00000000 		.4byte	.LFB45
 3700 09e9 10000000 		.4byte	.LFE45-.LFB45
 3701 09ed 01       		.uleb128 0x1
 3702 09ee 9C       		.byte	0x9c
 3703 09ef 1E       		.uleb128 0x1e
 3704 09f0 D9070000 		.4byte	.LASF123
 3705 09f4 01       		.byte	0x1
 3706 09f5 700D     		.2byte	0xd70
 3707 09f7 00000000 		.4byte	.LFB49
 3708 09fb 28000000 		.4byte	.LFE49-.LFB49
 3709 09ff 01       		.uleb128 0x1
 3710 0a00 9C       		.byte	0x9c
 3711 0a01 1D0A0000 		.4byte	0xa1d
 3712 0a05 0A       		.uleb128 0xa
 3713 0a06 6900     		.ascii	"i\000"
 3714 0a08 01       		.byte	0x1
 3715 0a09 720D     		.2byte	0xd72
 3716 0a0b 83000000 		.4byte	0x83
 3717 0a0f BE050000 		.4byte	.LLST41
 3718 0a13 0D       		.uleb128 0xd
 3719 0a14 06000000 		.4byte	.LVL140
 3720 0a18 D9090000 		.4byte	0x9d9
 3721 0a1c 00       		.byte	0
 3722 0a1d 12       		.uleb128 0x12
 3723 0a1e 25030000 		.4byte	.LASF92
 3724 0a22 01       		.byte	0x1
 3725 0a23 280D     		.2byte	0xd28
 3726 0a25 00000000 		.4byte	.LFB46
 3727 0a29 0C000000 		.4byte	.LFE46-.LFB46
 3728 0a2d 01       		.uleb128 0x1
 3729 0a2e 9C       		.byte	0x9c
 3730 0a2f 1D       		.uleb128 0x1d
 3731 0a30 D4020000 		.4byte	.LASF93
 3732 0a34 01       		.byte	0x1
 3733 0a35 4B0C     		.2byte	0xc4b
 3734 0a37 00000000 		.4byte	.LFB35
 3735 0a3b 44000000 		.4byte	.LFE35-.LFB35
 3736 0a3f 01       		.uleb128 0x1
 3737 0a40 9C       		.byte	0x9c
 3738 0a41 950A0000 		.4byte	0xa95
 3739 0a45 0A       		.uleb128 0xa
 3740 0a46 6900     		.ascii	"i\000"
 3741 0a48 01       		.byte	0x1
 3742 0a49 4D0C     		.2byte	0xc4d
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 133


 3743 0a4b 83000000 		.4byte	0x83
 3744 0a4f DC050000 		.4byte	.LLST42
 3745 0a53 17       		.uleb128 0x17
 3746 0a54 1C000000 		.4byte	.LVL150
 3747 0a58 2F040000 		.4byte	0x42f
 3748 0a5c 6F0A0000 		.4byte	0xa6f
 3749 0a60 16       		.uleb128 0x16
 3750 0a61 01       		.uleb128 0x1
 3751 0a62 50       		.byte	0x50
 3752 0a63 01       		.uleb128 0x1
 3753 0a64 3F       		.byte	0x3f
 3754 0a65 16       		.uleb128 0x16
 3755 0a66 01       		.uleb128 0x1
 3756 0a67 51       		.byte	0x51
 3757 0a68 05       		.uleb128 0x5
 3758 0a69 03       		.byte	0x3
 3759 0a6a 00000000 		.4byte	CySysTickServiceCallbacks
 3760 0a6e 00       		.byte	0
 3761 0a6f 17       		.uleb128 0x17
 3762 0a70 22000000 		.4byte	.LVL151
 3763 0a74 9E090000 		.4byte	0x99e
 3764 0a78 820A0000 		.4byte	0xa82
 3765 0a7c 16       		.uleb128 0x16
 3766 0a7d 01       		.uleb128 0x1
 3767 0a7e 50       		.byte	0x50
 3768 0a7f 01       		.uleb128 0x1
 3769 0a80 31       		.byte	0x31
 3770 0a81 00       		.byte	0
 3771 0a82 0D       		.uleb128 0xd
 3772 0a83 32000000 		.4byte	.LVL153
 3773 0a87 4B090000 		.4byte	0x94b
 3774 0a8b 0D       		.uleb128 0xd
 3775 0a8c 36000000 		.4byte	.LVL154
 3776 0a90 1D0A0000 		.4byte	0xa1d
 3777 0a94 00       		.byte	0
 3778 0a95 09       		.uleb128 0x9
 3779 0a96 78040000 		.4byte	.LASF94
 3780 0a9a 01       		.byte	0x1
 3781 0a9b 2E0C     		.2byte	0xc2e
 3782 0a9d 00000000 		.4byte	.LFB34
 3783 0aa1 20000000 		.4byte	.LFE34-.LFB34
 3784 0aa5 01       		.uleb128 0x1
 3785 0aa6 9C       		.byte	0x9c
 3786 0aa7 BE0A0000 		.4byte	0xabe
 3787 0aab 0D       		.uleb128 0xd
 3788 0aac 0E000000 		.4byte	.LVL155
 3789 0ab0 2F0A0000 		.4byte	0xa2f
 3790 0ab4 0D       		.uleb128 0xd
 3791 0ab5 18000000 		.4byte	.LVL156
 3792 0ab9 19090000 		.4byte	0x919
 3793 0abd 00       		.byte	0
 3794 0abe 11       		.uleb128 0x11
 3795 0abf 7B060000 		.4byte	.LASF95
 3796 0ac3 01       		.byte	0x1
 3797 0ac4 4B0D     		.2byte	0xd4b
 3798 0ac6 E7000000 		.4byte	0xe7
 3799 0aca 00000000 		.4byte	.LFB47
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 134


 3800 0ace 10000000 		.4byte	.LFE47-.LFB47
 3801 0ad2 01       		.uleb128 0x1
 3802 0ad3 9C       		.byte	0x9c
 3803 0ad4 050B0000 		.4byte	0xb05
 3804 0ad8 0F       		.uleb128 0xf
 3805 0ad9 02040000 		.4byte	.LASF47
 3806 0add 01       		.byte	0x1
 3807 0ade 4B0D     		.2byte	0xd4b
 3808 0ae0 83000000 		.4byte	0x83
 3809 0ae4 FB050000 		.4byte	.LLST43
 3810 0ae8 10       		.uleb128 0x10
 3811 0ae9 0C050000 		.4byte	.LASF96
 3812 0aed 01       		.byte	0x1
 3813 0aee 4B0D     		.2byte	0xd4b
 3814 0af0 E7000000 		.4byte	0xe7
 3815 0af4 01       		.uleb128 0x1
 3816 0af5 51       		.byte	0x51
 3817 0af6 13       		.uleb128 0x13
 3818 0af7 60000000 		.4byte	.LASF97
 3819 0afb 01       		.byte	0x1
 3820 0afc 4D0D     		.2byte	0xd4d
 3821 0afe E7000000 		.4byte	0xe7
 3822 0b02 01       		.uleb128 0x1
 3823 0b03 50       		.byte	0x50
 3824 0b04 00       		.byte	0
 3825 0b05 11       		.uleb128 0x11
 3826 0b06 98030000 		.4byte	.LASF98
 3827 0b0a 01       		.byte	0x1
 3828 0b0b 630D     		.2byte	0xd63
 3829 0b0d E7000000 		.4byte	0xe7
 3830 0b11 00000000 		.4byte	.LFB48
 3831 0b15 0C000000 		.4byte	.LFE48-.LFB48
 3832 0b19 01       		.uleb128 0x1
 3833 0b1a 9C       		.byte	0x9c
 3834 0b1b 300B0000 		.4byte	0xb30
 3835 0b1f 0F       		.uleb128 0xf
 3836 0b20 02040000 		.4byte	.LASF47
 3837 0b24 01       		.byte	0x1
 3838 0b25 630D     		.2byte	0xd63
 3839 0b27 83000000 		.4byte	0x83
 3840 0b2b 1C060000 		.4byte	.LLST44
 3841 0b2f 00       		.byte	0
 3842 0b30 09       		.uleb128 0x9
 3843 0b31 F4020000 		.4byte	.LASF99
 3844 0b35 01       		.byte	0x1
 3845 0b36 900D     		.2byte	0xd90
 3846 0b38 00000000 		.4byte	.LFB50
 3847 0b3c 70000000 		.4byte	.LFE50-.LFB50
 3848 0b40 01       		.uleb128 0x1
 3849 0b41 9C       		.byte	0x9c
 3850 0b42 550B0000 		.4byte	0xb55
 3851 0b46 10       		.uleb128 0x10
 3852 0b47 A3060000 		.4byte	.LASF100
 3853 0b4b 01       		.byte	0x1
 3854 0b4c 900D     		.2byte	0xd90
 3855 0b4e 550B0000 		.4byte	0xb55
 3856 0b52 01       		.uleb128 0x1
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 135


 3857 0b53 50       		.byte	0x50
 3858 0b54 00       		.byte	0
 3859 0b55 06       		.uleb128 0x6
 3860 0b56 04       		.byte	0x4
 3861 0b57 83000000 		.4byte	0x83
 3862 0b5b 09       		.uleb128 0x9
 3863 0b5c D4050000 		.4byte	.LASF101
 3864 0b60 01       		.byte	0x1
 3865 0b61 BD0D     		.2byte	0xdbd
 3866 0b63 00000000 		.4byte	.LFB51
 3867 0b67 20000000 		.4byte	.LFE51-.LFB51
 3868 0b6b 01       		.uleb128 0x1
 3869 0b6c 9C       		.byte	0x9c
 3870 0b6d 920B0000 		.4byte	0xb92
 3871 0b71 0F       		.uleb128 0xf
 3872 0b72 94040000 		.4byte	.LASF102
 3873 0b76 01       		.byte	0x1
 3874 0b77 BD0D     		.2byte	0xdbd
 3875 0b79 83000000 		.4byte	0x83
 3876 0b7d 3D060000 		.4byte	.LLST45
 3877 0b81 0B       		.uleb128 0xb
 3878 0b82 D4030000 		.4byte	.LASF69
 3879 0b86 01       		.byte	0x1
 3880 0b87 BF0D     		.2byte	0xdbf
 3881 0b89 83000000 		.4byte	0x83
 3882 0b8d 5E060000 		.4byte	.LLST46
 3883 0b91 00       		.byte	0
 3884 0b92 09       		.uleb128 0x9
 3885 0b93 27040000 		.4byte	.LASF103
 3886 0b97 01       		.byte	0x1
 3887 0b98 D90D     		.2byte	0xdd9
 3888 0b9a 00000000 		.4byte	.LFB52
 3889 0b9e 20000000 		.4byte	.LFE52-.LFB52
 3890 0ba2 01       		.uleb128 0x1
 3891 0ba3 9C       		.byte	0x9c
 3892 0ba4 C90B0000 		.4byte	0xbc9
 3893 0ba8 0F       		.uleb128 0xf
 3894 0ba9 94040000 		.4byte	.LASF102
 3895 0bad 01       		.byte	0x1
 3896 0bae D90D     		.2byte	0xdd9
 3897 0bb0 83000000 		.4byte	0x83
 3898 0bb4 7C060000 		.4byte	.LLST47
 3899 0bb8 0B       		.uleb128 0xb
 3900 0bb9 D4030000 		.4byte	.LASF69
 3901 0bbd 01       		.byte	0x1
 3902 0bbe DB0D     		.2byte	0xddb
 3903 0bc0 83000000 		.4byte	0x83
 3904 0bc4 9D060000 		.4byte	.LLST48
 3905 0bc8 00       		.byte	0
 3906 0bc9 09       		.uleb128 0x9
 3907 0bca 2B070000 		.4byte	.LASF104
 3908 0bce 01       		.byte	0x1
 3909 0bcf F50D     		.2byte	0xdf5
 3910 0bd1 00000000 		.4byte	.LFB53
 3911 0bd5 20000000 		.4byte	.LFE53-.LFB53
 3912 0bd9 01       		.uleb128 0x1
 3913 0bda 9C       		.byte	0x9c
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 136


 3914 0bdb 000C0000 		.4byte	0xc00
 3915 0bdf 0F       		.uleb128 0xf
 3916 0be0 94040000 		.4byte	.LASF102
 3917 0be4 01       		.byte	0x1
 3918 0be5 F50D     		.2byte	0xdf5
 3919 0be7 83000000 		.4byte	0x83
 3920 0beb BB060000 		.4byte	.LLST49
 3921 0bef 0B       		.uleb128 0xb
 3922 0bf0 D4030000 		.4byte	.LASF69
 3923 0bf4 01       		.byte	0x1
 3924 0bf5 F70D     		.2byte	0xdf7
 3925 0bf7 83000000 		.4byte	0x83
 3926 0bfb DC060000 		.4byte	.LLST50
 3927 0bff 00       		.byte	0
 3928 0c00 09       		.uleb128 0x9
 3929 0c01 B5040000 		.4byte	.LASF105
 3930 0c05 01       		.byte	0x1
 3931 0c06 130E     		.2byte	0xe13
 3932 0c08 00000000 		.4byte	.LFB54
 3933 0c0c 68000000 		.4byte	.LFE54-.LFB54
 3934 0c10 01       		.uleb128 0x1
 3935 0c11 9C       		.byte	0x9c
 3936 0c12 560C0000 		.4byte	0xc56
 3937 0c16 0F       		.uleb128 0xf
 3938 0c17 5F010000 		.4byte	.LASF106
 3939 0c1b 01       		.byte	0x1
 3940 0c1c 130E     		.2byte	0xe13
 3941 0c1e 83000000 		.4byte	0x83
 3942 0c22 FA060000 		.4byte	.LLST51
 3943 0c26 0F       		.uleb128 0xf
 3944 0c27 94040000 		.4byte	.LASF102
 3945 0c2b 01       		.byte	0x1
 3946 0c2c 130E     		.2byte	0xe13
 3947 0c2e 83000000 		.4byte	0x83
 3948 0c32 66070000 		.4byte	.LLST52
 3949 0c36 0B       		.uleb128 0xb
 3950 0c37 D4030000 		.4byte	.LASF69
 3951 0c3b 01       		.byte	0x1
 3952 0c3c 150E     		.2byte	0xe15
 3953 0c3e 83000000 		.4byte	0x83
 3954 0c42 D2070000 		.4byte	.LLST53
 3955 0c46 15       		.uleb128 0x15
 3956 0c47 56000000 		.4byte	.LVL191
 3957 0c4b 0A040000 		.4byte	0x40a
 3958 0c4f 16       		.uleb128 0x16
 3959 0c50 01       		.uleb128 0x1
 3960 0c51 50       		.byte	0x50
 3961 0c52 01       		.uleb128 0x1
 3962 0c53 30       		.byte	0x30
 3963 0c54 00       		.byte	0
 3964 0c55 00       		.byte	0
 3965 0c56 1B       		.uleb128 0x1b
 3966 0c57 E7000000 		.4byte	0xe7
 3967 0c5b 660C0000 		.4byte	0xc66
 3968 0c5f 1C       		.uleb128 0x1c
 3969 0c60 E0000000 		.4byte	0xe0
 3970 0c64 04       		.byte	0x4
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 137


 3971 0c65 00       		.byte	0
 3972 0c66 1A       		.uleb128 0x1a
 3973 0c67 90060000 		.4byte	.LASF107
 3974 0c6b 01       		.byte	0x1
 3975 0c6c 22       		.byte	0x22
 3976 0c6d 560C0000 		.4byte	0xc56
 3977 0c71 05       		.uleb128 0x5
 3978 0c72 03       		.byte	0x3
 3979 0c73 00000000 		.4byte	CySysTickCallbacks
 3980 0c77 1F       		.uleb128 0x1f
 3981 0c78 38050000 		.4byte	.LASF108
 3982 0c7c 01       		.byte	0x1
 3983 0c7d 1B       		.byte	0x1b
 3984 0c7e 83000000 		.4byte	0x83
 3985 0c82 05       		.uleb128 0x5
 3986 0c83 03       		.byte	0x3
 3987 0c84 00000000 		.4byte	cydelayFreqHz
 3988 0c88 1F       		.uleb128 0x1f
 3989 0c89 3F020000 		.4byte	.LASF109
 3990 0c8d 01       		.byte	0x1
 3991 0c8e 1C       		.byte	0x1c
 3992 0c8f 83000000 		.4byte	0x83
 3993 0c93 05       		.uleb128 0x5
 3994 0c94 03       		.byte	0x3
 3995 0c95 00000000 		.4byte	cydelayFreqKhz
 3996 0c99 1F       		.uleb128 0x1f
 3997 0c9a 09070000 		.4byte	.LASF110
 3998 0c9e 01       		.byte	0x1
 3999 0c9f 1D       		.byte	0x1d
 4000 0ca0 6B000000 		.4byte	0x6b
 4001 0ca4 05       		.uleb128 0x5
 4002 0ca5 03       		.byte	0x3
 4003 0ca6 00000000 		.4byte	cydelayFreqMhz
 4004 0caa 1F       		.uleb128 0x1f
 4005 0cab C7020000 		.4byte	.LASF111
 4006 0caf 01       		.byte	0x1
 4007 0cb0 1E       		.byte	0x1e
 4008 0cb1 83000000 		.4byte	0x83
 4009 0cb5 05       		.uleb128 0x5
 4010 0cb6 03       		.byte	0x3
 4011 0cb7 00000000 		.4byte	cydelay32kMs
 4012 0cbb 1F       		.uleb128 0x1f
 4013 0cbc A4040000 		.4byte	.LASF112
 4014 0cc0 01       		.byte	0x1
 4015 0cc1 36       		.byte	0x36
 4016 0cc2 83000000 		.4byte	0x83
 4017 0cc6 05       		.uleb128 0x5
 4018 0cc7 03       		.byte	0x3
 4019 0cc8 00000000 		.4byte	CySysTickInitVar
 4020 0ccc 1B       		.uleb128 0x1b
 4021 0ccd DC0C0000 		.4byte	0xcdc
 4022 0cd1 DC0C0000 		.4byte	0xcdc
 4023 0cd5 1C       		.uleb128 0x1c
 4024 0cd6 E0000000 		.4byte	0xe0
 4025 0cda 2D       		.byte	0x2d
 4026 0cdb 00       		.byte	0
 4027 0cdc 20       		.uleb128 0x20
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 138


 4028 0cdd 6B000000 		.4byte	0x6b
 4029 0ce1 1F       		.uleb128 0x1f
 4030 0ce2 15050000 		.4byte	.LASF113
 4031 0ce6 01       		.byte	0x1
 4032 0ce7 3B       		.byte	0x3b
 4033 0ce8 F20C0000 		.4byte	0xcf2
 4034 0cec 05       		.uleb128 0x5
 4035 0ced 03       		.byte	0x3
 4036 0cee 00000000 		.4byte	cyImoFreqMhz2Reg
 4037 0cf2 20       		.uleb128 0x20
 4038 0cf3 CC0C0000 		.4byte	0xccc
 4039 0cf7 1F       		.uleb128 0x1f
 4040 0cf8 38000000 		.4byte	.LASF114
 4041 0cfc 01       		.byte	0x1
 4042 0cfd 51       		.byte	0x51
 4043 0cfe 83000000 		.4byte	0x83
 4044 0d02 05       		.uleb128 0x5
 4045 0d03 03       		.byte	0x3
 4046 0d04 00000000 		.4byte	CySysClkPumpConfig
 4047 0d08 21       		.uleb128 0x21
 4048 0d09 71030000 		.4byte	.LASF115
 4049 0d0d 71030000 		.4byte	.LASF115
 4050 0d11 03       		.byte	0x3
 4051 0d12 F8       		.byte	0xf8
 4052 0d13 21       		.uleb128 0x21
 4053 0d14 5D050000 		.4byte	.LASF116
 4054 0d18 5D050000 		.4byte	.LASF116
 4055 0d1c 03       		.byte	0x3
 4056 0d1d F9       		.byte	0xf9
 4057 0d1e 21       		.uleb128 0x21
 4058 0d1f B0050000 		.4byte	.LASF117
 4059 0d23 B0050000 		.4byte	.LASF117
 4060 0d27 03       		.byte	0x3
 4061 0d28 EF       		.byte	0xef
 4062 0d29 21       		.uleb128 0x21
 4063 0d2a 18070000 		.4byte	.LASF118
 4064 0d2e 18070000 		.4byte	.LASF118
 4065 0d32 04       		.byte	0x4
 4066 0d33 54       		.byte	0x54
 4067 0d34 21       		.uleb128 0x21
 4068 0d35 7B070000 		.4byte	.LASF119
 4069 0d39 7B070000 		.4byte	.LASF119
 4070 0d3d 05       		.byte	0x5
 4071 0d3e 52       		.byte	0x52
 4072 0d3f 00       		.byte	0
 4073              		.section	.debug_abbrev,"",%progbits
 4074              	.Ldebug_abbrev0:
 4075 0000 01       		.uleb128 0x1
 4076 0001 11       		.uleb128 0x11
 4077 0002 01       		.byte	0x1
 4078 0003 25       		.uleb128 0x25
 4079 0004 0E       		.uleb128 0xe
 4080 0005 13       		.uleb128 0x13
 4081 0006 0B       		.uleb128 0xb
 4082 0007 03       		.uleb128 0x3
 4083 0008 0E       		.uleb128 0xe
 4084 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 139


 4085 000a 0E       		.uleb128 0xe
 4086 000b 55       		.uleb128 0x55
 4087 000c 17       		.uleb128 0x17
 4088 000d 11       		.uleb128 0x11
 4089 000e 01       		.uleb128 0x1
 4090 000f 10       		.uleb128 0x10
 4091 0010 17       		.uleb128 0x17
 4092 0011 00       		.byte	0
 4093 0012 00       		.byte	0
 4094 0013 02       		.uleb128 0x2
 4095 0014 24       		.uleb128 0x24
 4096 0015 00       		.byte	0
 4097 0016 0B       		.uleb128 0xb
 4098 0017 0B       		.uleb128 0xb
 4099 0018 3E       		.uleb128 0x3e
 4100 0019 0B       		.uleb128 0xb
 4101 001a 03       		.uleb128 0x3
 4102 001b 0E       		.uleb128 0xe
 4103 001c 00       		.byte	0
 4104 001d 00       		.byte	0
 4105 001e 03       		.uleb128 0x3
 4106 001f 24       		.uleb128 0x24
 4107 0020 00       		.byte	0
 4108 0021 0B       		.uleb128 0xb
 4109 0022 0B       		.uleb128 0xb
 4110 0023 3E       		.uleb128 0x3e
 4111 0024 0B       		.uleb128 0xb
 4112 0025 03       		.uleb128 0x3
 4113 0026 08       		.uleb128 0x8
 4114 0027 00       		.byte	0
 4115 0028 00       		.byte	0
 4116 0029 04       		.uleb128 0x4
 4117 002a 16       		.uleb128 0x16
 4118 002b 00       		.byte	0
 4119 002c 03       		.uleb128 0x3
 4120 002d 0E       		.uleb128 0xe
 4121 002e 3A       		.uleb128 0x3a
 4122 002f 0B       		.uleb128 0xb
 4123 0030 3B       		.uleb128 0x3b
 4124 0031 05       		.uleb128 0x5
 4125 0032 49       		.uleb128 0x49
 4126 0033 13       		.uleb128 0x13
 4127 0034 00       		.byte	0
 4128 0035 00       		.byte	0
 4129 0036 05       		.uleb128 0x5
 4130 0037 35       		.uleb128 0x35
 4131 0038 00       		.byte	0
 4132 0039 49       		.uleb128 0x49
 4133 003a 13       		.uleb128 0x13
 4134 003b 00       		.byte	0
 4135 003c 00       		.byte	0
 4136 003d 06       		.uleb128 0x6
 4137 003e 0F       		.uleb128 0xf
 4138 003f 00       		.byte	0
 4139 0040 0B       		.uleb128 0xb
 4140 0041 0B       		.uleb128 0xb
 4141 0042 49       		.uleb128 0x49
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 140


 4142 0043 13       		.uleb128 0x13
 4143 0044 00       		.byte	0
 4144 0045 00       		.byte	0
 4145 0046 07       		.uleb128 0x7
 4146 0047 15       		.uleb128 0x15
 4147 0048 00       		.byte	0
 4148 0049 27       		.uleb128 0x27
 4149 004a 19       		.uleb128 0x19
 4150 004b 00       		.byte	0
 4151 004c 00       		.byte	0
 4152 004d 08       		.uleb128 0x8
 4153 004e 2E       		.uleb128 0x2e
 4154 004f 00       		.byte	0
 4155 0050 3F       		.uleb128 0x3f
 4156 0051 19       		.uleb128 0x19
 4157 0052 03       		.uleb128 0x3
 4158 0053 0E       		.uleb128 0xe
 4159 0054 3A       		.uleb128 0x3a
 4160 0055 0B       		.uleb128 0xb
 4161 0056 3B       		.uleb128 0x3b
 4162 0057 0B       		.uleb128 0xb
 4163 0058 27       		.uleb128 0x27
 4164 0059 19       		.uleb128 0x19
 4165 005a 11       		.uleb128 0x11
 4166 005b 01       		.uleb128 0x1
 4167 005c 12       		.uleb128 0x12
 4168 005d 06       		.uleb128 0x6
 4169 005e 40       		.uleb128 0x40
 4170 005f 18       		.uleb128 0x18
 4171 0060 9742     		.uleb128 0x2117
 4172 0062 19       		.uleb128 0x19
 4173 0063 00       		.byte	0
 4174 0064 00       		.byte	0
 4175 0065 09       		.uleb128 0x9
 4176 0066 2E       		.uleb128 0x2e
 4177 0067 01       		.byte	0x1
 4178 0068 3F       		.uleb128 0x3f
 4179 0069 19       		.uleb128 0x19
 4180 006a 03       		.uleb128 0x3
 4181 006b 0E       		.uleb128 0xe
 4182 006c 3A       		.uleb128 0x3a
 4183 006d 0B       		.uleb128 0xb
 4184 006e 3B       		.uleb128 0x3b
 4185 006f 05       		.uleb128 0x5
 4186 0070 27       		.uleb128 0x27
 4187 0071 19       		.uleb128 0x19
 4188 0072 11       		.uleb128 0x11
 4189 0073 01       		.uleb128 0x1
 4190 0074 12       		.uleb128 0x12
 4191 0075 06       		.uleb128 0x6
 4192 0076 40       		.uleb128 0x40
 4193 0077 18       		.uleb128 0x18
 4194 0078 9742     		.uleb128 0x2117
 4195 007a 19       		.uleb128 0x19
 4196 007b 01       		.uleb128 0x1
 4197 007c 13       		.uleb128 0x13
 4198 007d 00       		.byte	0
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 141


 4199 007e 00       		.byte	0
 4200 007f 0A       		.uleb128 0xa
 4201 0080 34       		.uleb128 0x34
 4202 0081 00       		.byte	0
 4203 0082 03       		.uleb128 0x3
 4204 0083 08       		.uleb128 0x8
 4205 0084 3A       		.uleb128 0x3a
 4206 0085 0B       		.uleb128 0xb
 4207 0086 3B       		.uleb128 0x3b
 4208 0087 05       		.uleb128 0x5
 4209 0088 49       		.uleb128 0x49
 4210 0089 13       		.uleb128 0x13
 4211 008a 02       		.uleb128 0x2
 4212 008b 17       		.uleb128 0x17
 4213 008c 00       		.byte	0
 4214 008d 00       		.byte	0
 4215 008e 0B       		.uleb128 0xb
 4216 008f 34       		.uleb128 0x34
 4217 0090 00       		.byte	0
 4218 0091 03       		.uleb128 0x3
 4219 0092 0E       		.uleb128 0xe
 4220 0093 3A       		.uleb128 0x3a
 4221 0094 0B       		.uleb128 0xb
 4222 0095 3B       		.uleb128 0x3b
 4223 0096 05       		.uleb128 0x5
 4224 0097 49       		.uleb128 0x49
 4225 0098 13       		.uleb128 0x13
 4226 0099 02       		.uleb128 0x2
 4227 009a 17       		.uleb128 0x17
 4228 009b 00       		.byte	0
 4229 009c 00       		.byte	0
 4230 009d 0C       		.uleb128 0xc
 4231 009e 2E       		.uleb128 0x2e
 4232 009f 01       		.byte	0x1
 4233 00a0 3F       		.uleb128 0x3f
 4234 00a1 19       		.uleb128 0x19
 4235 00a2 03       		.uleb128 0x3
 4236 00a3 0E       		.uleb128 0xe
 4237 00a4 3A       		.uleb128 0x3a
 4238 00a5 0B       		.uleb128 0xb
 4239 00a6 3B       		.uleb128 0x3b
 4240 00a7 0B       		.uleb128 0xb
 4241 00a8 27       		.uleb128 0x27
 4242 00a9 19       		.uleb128 0x19
 4243 00aa 11       		.uleb128 0x11
 4244 00ab 01       		.uleb128 0x1
 4245 00ac 12       		.uleb128 0x12
 4246 00ad 06       		.uleb128 0x6
 4247 00ae 40       		.uleb128 0x40
 4248 00af 18       		.uleb128 0x18
 4249 00b0 9742     		.uleb128 0x2117
 4250 00b2 19       		.uleb128 0x19
 4251 00b3 01       		.uleb128 0x1
 4252 00b4 13       		.uleb128 0x13
 4253 00b5 00       		.byte	0
 4254 00b6 00       		.byte	0
 4255 00b7 0D       		.uleb128 0xd
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 142


 4256 00b8 898201   		.uleb128 0x4109
 4257 00bb 00       		.byte	0
 4258 00bc 11       		.uleb128 0x11
 4259 00bd 01       		.uleb128 0x1
 4260 00be 31       		.uleb128 0x31
 4261 00bf 13       		.uleb128 0x13
 4262 00c0 00       		.byte	0
 4263 00c1 00       		.byte	0
 4264 00c2 0E       		.uleb128 0xe
 4265 00c3 2E       		.uleb128 0x2e
 4266 00c4 00       		.byte	0
 4267 00c5 3F       		.uleb128 0x3f
 4268 00c6 19       		.uleb128 0x19
 4269 00c7 03       		.uleb128 0x3
 4270 00c8 0E       		.uleb128 0xe
 4271 00c9 3A       		.uleb128 0x3a
 4272 00ca 0B       		.uleb128 0xb
 4273 00cb 3B       		.uleb128 0x3b
 4274 00cc 05       		.uleb128 0x5
 4275 00cd 27       		.uleb128 0x27
 4276 00ce 19       		.uleb128 0x19
 4277 00cf 49       		.uleb128 0x49
 4278 00d0 13       		.uleb128 0x13
 4279 00d1 11       		.uleb128 0x11
 4280 00d2 01       		.uleb128 0x1
 4281 00d3 12       		.uleb128 0x12
 4282 00d4 06       		.uleb128 0x6
 4283 00d5 40       		.uleb128 0x40
 4284 00d6 18       		.uleb128 0x18
 4285 00d7 9742     		.uleb128 0x2117
 4286 00d9 19       		.uleb128 0x19
 4287 00da 00       		.byte	0
 4288 00db 00       		.byte	0
 4289 00dc 0F       		.uleb128 0xf
 4290 00dd 05       		.uleb128 0x5
 4291 00de 00       		.byte	0
 4292 00df 03       		.uleb128 0x3
 4293 00e0 0E       		.uleb128 0xe
 4294 00e1 3A       		.uleb128 0x3a
 4295 00e2 0B       		.uleb128 0xb
 4296 00e3 3B       		.uleb128 0x3b
 4297 00e4 05       		.uleb128 0x5
 4298 00e5 49       		.uleb128 0x49
 4299 00e6 13       		.uleb128 0x13
 4300 00e7 02       		.uleb128 0x2
 4301 00e8 17       		.uleb128 0x17
 4302 00e9 00       		.byte	0
 4303 00ea 00       		.byte	0
 4304 00eb 10       		.uleb128 0x10
 4305 00ec 05       		.uleb128 0x5
 4306 00ed 00       		.byte	0
 4307 00ee 03       		.uleb128 0x3
 4308 00ef 0E       		.uleb128 0xe
 4309 00f0 3A       		.uleb128 0x3a
 4310 00f1 0B       		.uleb128 0xb
 4311 00f2 3B       		.uleb128 0x3b
 4312 00f3 05       		.uleb128 0x5
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 143


 4313 00f4 49       		.uleb128 0x49
 4314 00f5 13       		.uleb128 0x13
 4315 00f6 02       		.uleb128 0x2
 4316 00f7 18       		.uleb128 0x18
 4317 00f8 00       		.byte	0
 4318 00f9 00       		.byte	0
 4319 00fa 11       		.uleb128 0x11
 4320 00fb 2E       		.uleb128 0x2e
 4321 00fc 01       		.byte	0x1
 4322 00fd 3F       		.uleb128 0x3f
 4323 00fe 19       		.uleb128 0x19
 4324 00ff 03       		.uleb128 0x3
 4325 0100 0E       		.uleb128 0xe
 4326 0101 3A       		.uleb128 0x3a
 4327 0102 0B       		.uleb128 0xb
 4328 0103 3B       		.uleb128 0x3b
 4329 0104 05       		.uleb128 0x5
 4330 0105 27       		.uleb128 0x27
 4331 0106 19       		.uleb128 0x19
 4332 0107 49       		.uleb128 0x49
 4333 0108 13       		.uleb128 0x13
 4334 0109 11       		.uleb128 0x11
 4335 010a 01       		.uleb128 0x1
 4336 010b 12       		.uleb128 0x12
 4337 010c 06       		.uleb128 0x6
 4338 010d 40       		.uleb128 0x40
 4339 010e 18       		.uleb128 0x18
 4340 010f 9742     		.uleb128 0x2117
 4341 0111 19       		.uleb128 0x19
 4342 0112 01       		.uleb128 0x1
 4343 0113 13       		.uleb128 0x13
 4344 0114 00       		.byte	0
 4345 0115 00       		.byte	0
 4346 0116 12       		.uleb128 0x12
 4347 0117 2E       		.uleb128 0x2e
 4348 0118 00       		.byte	0
 4349 0119 3F       		.uleb128 0x3f
 4350 011a 19       		.uleb128 0x19
 4351 011b 03       		.uleb128 0x3
 4352 011c 0E       		.uleb128 0xe
 4353 011d 3A       		.uleb128 0x3a
 4354 011e 0B       		.uleb128 0xb
 4355 011f 3B       		.uleb128 0x3b
 4356 0120 05       		.uleb128 0x5
 4357 0121 27       		.uleb128 0x27
 4358 0122 19       		.uleb128 0x19
 4359 0123 11       		.uleb128 0x11
 4360 0124 01       		.uleb128 0x1
 4361 0125 12       		.uleb128 0x12
 4362 0126 06       		.uleb128 0x6
 4363 0127 40       		.uleb128 0x40
 4364 0128 18       		.uleb128 0x18
 4365 0129 9742     		.uleb128 0x2117
 4366 012b 19       		.uleb128 0x19
 4367 012c 00       		.byte	0
 4368 012d 00       		.byte	0
 4369 012e 13       		.uleb128 0x13
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 144


 4370 012f 34       		.uleb128 0x34
 4371 0130 00       		.byte	0
 4372 0131 03       		.uleb128 0x3
 4373 0132 0E       		.uleb128 0xe
 4374 0133 3A       		.uleb128 0x3a
 4375 0134 0B       		.uleb128 0xb
 4376 0135 3B       		.uleb128 0x3b
 4377 0136 05       		.uleb128 0x5
 4378 0137 49       		.uleb128 0x49
 4379 0138 13       		.uleb128 0x13
 4380 0139 02       		.uleb128 0x2
 4381 013a 18       		.uleb128 0x18
 4382 013b 00       		.byte	0
 4383 013c 00       		.byte	0
 4384 013d 14       		.uleb128 0x14
 4385 013e 34       		.uleb128 0x34
 4386 013f 00       		.byte	0
 4387 0140 03       		.uleb128 0x3
 4388 0141 0E       		.uleb128 0xe
 4389 0142 3A       		.uleb128 0x3a
 4390 0143 0B       		.uleb128 0xb
 4391 0144 3B       		.uleb128 0x3b
 4392 0145 05       		.uleb128 0x5
 4393 0146 49       		.uleb128 0x49
 4394 0147 13       		.uleb128 0x13
 4395 0148 1C       		.uleb128 0x1c
 4396 0149 06       		.uleb128 0x6
 4397 014a 00       		.byte	0
 4398 014b 00       		.byte	0
 4399 014c 15       		.uleb128 0x15
 4400 014d 898201   		.uleb128 0x4109
 4401 0150 01       		.byte	0x1
 4402 0151 11       		.uleb128 0x11
 4403 0152 01       		.uleb128 0x1
 4404 0153 31       		.uleb128 0x31
 4405 0154 13       		.uleb128 0x13
 4406 0155 00       		.byte	0
 4407 0156 00       		.byte	0
 4408 0157 16       		.uleb128 0x16
 4409 0158 8A8201   		.uleb128 0x410a
 4410 015b 00       		.byte	0
 4411 015c 02       		.uleb128 0x2
 4412 015d 18       		.uleb128 0x18
 4413 015e 9142     		.uleb128 0x2111
 4414 0160 18       		.uleb128 0x18
 4415 0161 00       		.byte	0
 4416 0162 00       		.byte	0
 4417 0163 17       		.uleb128 0x17
 4418 0164 898201   		.uleb128 0x4109
 4419 0167 01       		.byte	0x1
 4420 0168 11       		.uleb128 0x11
 4421 0169 01       		.uleb128 0x1
 4422 016a 31       		.uleb128 0x31
 4423 016b 13       		.uleb128 0x13
 4424 016c 01       		.uleb128 0x1
 4425 016d 13       		.uleb128 0x13
 4426 016e 00       		.byte	0
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 145


 4427 016f 00       		.byte	0
 4428 0170 18       		.uleb128 0x18
 4429 0171 34       		.uleb128 0x34
 4430 0172 00       		.byte	0
 4431 0173 03       		.uleb128 0x3
 4432 0174 08       		.uleb128 0x8
 4433 0175 3A       		.uleb128 0x3a
 4434 0176 0B       		.uleb128 0xb
 4435 0177 3B       		.uleb128 0x3b
 4436 0178 0B       		.uleb128 0xb
 4437 0179 49       		.uleb128 0x49
 4438 017a 13       		.uleb128 0x13
 4439 017b 02       		.uleb128 0x2
 4440 017c 17       		.uleb128 0x17
 4441 017d 00       		.byte	0
 4442 017e 00       		.byte	0
 4443 017f 19       		.uleb128 0x19
 4444 0180 34       		.uleb128 0x34
 4445 0181 00       		.byte	0
 4446 0182 03       		.uleb128 0x3
 4447 0183 0E       		.uleb128 0xe
 4448 0184 3A       		.uleb128 0x3a
 4449 0185 0B       		.uleb128 0xb
 4450 0186 3B       		.uleb128 0x3b
 4451 0187 0B       		.uleb128 0xb
 4452 0188 49       		.uleb128 0x49
 4453 0189 13       		.uleb128 0x13
 4454 018a 02       		.uleb128 0x2
 4455 018b 17       		.uleb128 0x17
 4456 018c 00       		.byte	0
 4457 018d 00       		.byte	0
 4458 018e 1A       		.uleb128 0x1a
 4459 018f 34       		.uleb128 0x34
 4460 0190 00       		.byte	0
 4461 0191 03       		.uleb128 0x3
 4462 0192 0E       		.uleb128 0xe
 4463 0193 3A       		.uleb128 0x3a
 4464 0194 0B       		.uleb128 0xb
 4465 0195 3B       		.uleb128 0x3b
 4466 0196 0B       		.uleb128 0xb
 4467 0197 49       		.uleb128 0x49
 4468 0198 13       		.uleb128 0x13
 4469 0199 02       		.uleb128 0x2
 4470 019a 18       		.uleb128 0x18
 4471 019b 00       		.byte	0
 4472 019c 00       		.byte	0
 4473 019d 1B       		.uleb128 0x1b
 4474 019e 01       		.uleb128 0x1
 4475 019f 01       		.byte	0x1
 4476 01a0 49       		.uleb128 0x49
 4477 01a1 13       		.uleb128 0x13
 4478 01a2 01       		.uleb128 0x1
 4479 01a3 13       		.uleb128 0x13
 4480 01a4 00       		.byte	0
 4481 01a5 00       		.byte	0
 4482 01a6 1C       		.uleb128 0x1c
 4483 01a7 21       		.uleb128 0x21
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 146


 4484 01a8 00       		.byte	0
 4485 01a9 49       		.uleb128 0x49
 4486 01aa 13       		.uleb128 0x13
 4487 01ab 2F       		.uleb128 0x2f
 4488 01ac 0B       		.uleb128 0xb
 4489 01ad 00       		.byte	0
 4490 01ae 00       		.byte	0
 4491 01af 1D       		.uleb128 0x1d
 4492 01b0 2E       		.uleb128 0x2e
 4493 01b1 01       		.byte	0x1
 4494 01b2 3F       		.uleb128 0x3f
 4495 01b3 19       		.uleb128 0x19
 4496 01b4 03       		.uleb128 0x3
 4497 01b5 0E       		.uleb128 0xe
 4498 01b6 3A       		.uleb128 0x3a
 4499 01b7 0B       		.uleb128 0xb
 4500 01b8 3B       		.uleb128 0x3b
 4501 01b9 05       		.uleb128 0x5
 4502 01ba 27       		.uleb128 0x27
 4503 01bb 19       		.uleb128 0x19
 4504 01bc 11       		.uleb128 0x11
 4505 01bd 01       		.uleb128 0x1
 4506 01be 12       		.uleb128 0x12
 4507 01bf 06       		.uleb128 0x6
 4508 01c0 40       		.uleb128 0x40
 4509 01c1 18       		.uleb128 0x18
 4510 01c2 9642     		.uleb128 0x2116
 4511 01c4 19       		.uleb128 0x19
 4512 01c5 01       		.uleb128 0x1
 4513 01c6 13       		.uleb128 0x13
 4514 01c7 00       		.byte	0
 4515 01c8 00       		.byte	0
 4516 01c9 1E       		.uleb128 0x1e
 4517 01ca 2E       		.uleb128 0x2e
 4518 01cb 01       		.byte	0x1
 4519 01cc 03       		.uleb128 0x3
 4520 01cd 0E       		.uleb128 0xe
 4521 01ce 3A       		.uleb128 0x3a
 4522 01cf 0B       		.uleb128 0xb
 4523 01d0 3B       		.uleb128 0x3b
 4524 01d1 05       		.uleb128 0x5
 4525 01d2 27       		.uleb128 0x27
 4526 01d3 19       		.uleb128 0x19
 4527 01d4 11       		.uleb128 0x11
 4528 01d5 01       		.uleb128 0x1
 4529 01d6 12       		.uleb128 0x12
 4530 01d7 06       		.uleb128 0x6
 4531 01d8 40       		.uleb128 0x40
 4532 01d9 18       		.uleb128 0x18
 4533 01da 9642     		.uleb128 0x2116
 4534 01dc 19       		.uleb128 0x19
 4535 01dd 01       		.uleb128 0x1
 4536 01de 13       		.uleb128 0x13
 4537 01df 00       		.byte	0
 4538 01e0 00       		.byte	0
 4539 01e1 1F       		.uleb128 0x1f
 4540 01e2 34       		.uleb128 0x34
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 147


 4541 01e3 00       		.byte	0
 4542 01e4 03       		.uleb128 0x3
 4543 01e5 0E       		.uleb128 0xe
 4544 01e6 3A       		.uleb128 0x3a
 4545 01e7 0B       		.uleb128 0xb
 4546 01e8 3B       		.uleb128 0x3b
 4547 01e9 0B       		.uleb128 0xb
 4548 01ea 49       		.uleb128 0x49
 4549 01eb 13       		.uleb128 0x13
 4550 01ec 3F       		.uleb128 0x3f
 4551 01ed 19       		.uleb128 0x19
 4552 01ee 02       		.uleb128 0x2
 4553 01ef 18       		.uleb128 0x18
 4554 01f0 00       		.byte	0
 4555 01f1 00       		.byte	0
 4556 01f2 20       		.uleb128 0x20
 4557 01f3 26       		.uleb128 0x26
 4558 01f4 00       		.byte	0
 4559 01f5 49       		.uleb128 0x49
 4560 01f6 13       		.uleb128 0x13
 4561 01f7 00       		.byte	0
 4562 01f8 00       		.byte	0
 4563 01f9 21       		.uleb128 0x21
 4564 01fa 2E       		.uleb128 0x2e
 4565 01fb 00       		.byte	0
 4566 01fc 3F       		.uleb128 0x3f
 4567 01fd 19       		.uleb128 0x19
 4568 01fe 3C       		.uleb128 0x3c
 4569 01ff 19       		.uleb128 0x19
 4570 0200 6E       		.uleb128 0x6e
 4571 0201 0E       		.uleb128 0xe
 4572 0202 03       		.uleb128 0x3
 4573 0203 0E       		.uleb128 0xe
 4574 0204 3A       		.uleb128 0x3a
 4575 0205 0B       		.uleb128 0xb
 4576 0206 3B       		.uleb128 0x3b
 4577 0207 0B       		.uleb128 0xb
 4578 0208 00       		.byte	0
 4579 0209 00       		.byte	0
 4580 020a 00       		.byte	0
 4581              		.section	.debug_loc,"",%progbits
 4582              	.Ldebug_loc0:
 4583              	.LLST0:
 4584 0000 00000000 		.4byte	.LVL0
 4585 0004 04000000 		.4byte	.LVL1
 4586 0008 0200     		.2byte	0x2
 4587 000a 30       		.byte	0x30
 4588 000b 9F       		.byte	0x9f
 4589 000c 04000000 		.4byte	.LVL1
 4590 0010 16000000 		.4byte	.LVL2
 4591 0014 0100     		.2byte	0x1
 4592 0016 53       		.byte	0x53
 4593 0017 16000000 		.4byte	.LVL2
 4594 001b 18000000 		.4byte	.LVL3
 4595 001f 0300     		.2byte	0x3
 4596 0021 73       		.byte	0x73
 4597 0022 7D       		.sleb128 -3
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 148


 4598 0023 9F       		.byte	0x9f
 4599 0024 18000000 		.4byte	.LVL3
 4600 0028 20000000 		.4byte	.LVL5
 4601 002c 0100     		.2byte	0x1
 4602 002e 53       		.byte	0x53
 4603 002f 00000000 		.4byte	0
 4604 0033 00000000 		.4byte	0
 4605              	.LLST1:
 4606 0037 00000000 		.4byte	.LVL0
 4607 003b 16000000 		.4byte	.LVL2
 4608 003f 0200     		.2byte	0x2
 4609 0041 33       		.byte	0x33
 4610 0042 9F       		.byte	0x9f
 4611 0043 16000000 		.4byte	.LVL2
 4612 0047 18000000 		.4byte	.LVL3
 4613 004b 0100     		.2byte	0x1
 4614 004d 53       		.byte	0x53
 4615 004e 18000000 		.4byte	.LVL3
 4616 0052 20000000 		.4byte	.LVL5
 4617 0056 0200     		.2byte	0x2
 4618 0058 33       		.byte	0x33
 4619 0059 9F       		.byte	0x9f
 4620 005a 20000000 		.4byte	.LVL5
 4621 005e 30000000 		.4byte	.LVL6
 4622 0062 0100     		.2byte	0x1
 4623 0064 53       		.byte	0x53
 4624 0065 30000000 		.4byte	.LVL6
 4625 0069 32000000 		.4byte	.LVL7
 4626 006d 0700     		.2byte	0x7
 4627 006f 73       		.byte	0x73
 4628 0070 B39C8080 		.sleb128 -268431821
 4628      7F
 4629 0075 9F       		.byte	0x9f
 4630 0076 00000000 		.4byte	0
 4631 007a 00000000 		.4byte	0
 4632              	.LLST2:
 4633 007e 00000000 		.4byte	.LVL9
 4634 0082 07000000 		.4byte	.LVL10-1
 4635 0086 0100     		.2byte	0x1
 4636 0088 50       		.byte	0x50
 4637 0089 07000000 		.4byte	.LVL10-1
 4638 008d 12000000 		.4byte	.LVL12
 4639 0091 0100     		.2byte	0x1
 4640 0093 54       		.byte	0x54
 4641 0094 12000000 		.4byte	.LVL12
 4642 0098 20000000 		.4byte	.LFE6
 4643 009c 0400     		.2byte	0x4
 4644 009e F3       		.byte	0xf3
 4645 009f 01       		.uleb128 0x1
 4646 00a0 50       		.byte	0x50
 4647 00a1 9F       		.byte	0x9f
 4648 00a2 00000000 		.4byte	0
 4649 00a6 00000000 		.4byte	0
 4650              	.LLST3:
 4651 00aa 08000000 		.4byte	.LVL10
 4652 00ae 19000000 		.4byte	.LVL14-1
 4653 00b2 0100     		.2byte	0x1
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 149


 4654 00b4 50       		.byte	0x50
 4655 00b5 00000000 		.4byte	0
 4656 00b9 00000000 		.4byte	0
 4657              	.LLST4:
 4658 00bd 10000000 		.4byte	.LVL11
 4659 00c1 14000000 		.4byte	.LVL13
 4660 00c5 0100     		.2byte	0x1
 4661 00c7 53       		.byte	0x53
 4662 00c8 14000000 		.4byte	.LVL13
 4663 00cc 1A000000 		.4byte	.LVL15
 4664 00d0 0100     		.2byte	0x1
 4665 00d2 54       		.byte	0x54
 4666 00d3 00000000 		.4byte	0
 4667 00d7 00000000 		.4byte	0
 4668              	.LLST5:
 4669 00db 06000000 		.4byte	.LVL17
 4670 00df 11000000 		.4byte	.LVL19-1
 4671 00e3 0100     		.2byte	0x1
 4672 00e5 50       		.byte	0x50
 4673 00e6 00000000 		.4byte	0
 4674 00ea 00000000 		.4byte	0
 4675              	.LLST6:
 4676 00ee 0E000000 		.4byte	.LVL18
 4677 00f2 14000000 		.4byte	.LVL20
 4678 00f6 0100     		.2byte	0x1
 4679 00f8 54       		.byte	0x54
 4680 00f9 14000000 		.4byte	.LVL20
 4681 00fd 1C000000 		.4byte	.LFE8
 4682 0101 0100     		.2byte	0x1
 4683 0103 50       		.byte	0x50
 4684 0104 00000000 		.4byte	0
 4685 0108 00000000 		.4byte	0
 4686              	.LLST7:
 4687 010c 00000000 		.4byte	.LVL21
 4688 0110 07000000 		.4byte	.LVL22-1
 4689 0114 0100     		.2byte	0x1
 4690 0116 50       		.byte	0x50
 4691 0117 07000000 		.4byte	.LVL22-1
 4692 011b 14000000 		.4byte	.LVL23
 4693 011f 0100     		.2byte	0x1
 4694 0121 54       		.byte	0x54
 4695 0122 14000000 		.4byte	.LVL23
 4696 0126 30000000 		.4byte	.LFE9
 4697 012a 0400     		.2byte	0x4
 4698 012c F3       		.byte	0xf3
 4699 012d 01       		.uleb128 0x1
 4700 012e 50       		.byte	0x50
 4701 012f 9F       		.byte	0x9f
 4702 0130 00000000 		.4byte	0
 4703 0134 00000000 		.4byte	0
 4704              	.LLST8:
 4705 0138 08000000 		.4byte	.LVL22
 4706 013c 23000000 		.4byte	.LVL24-1
 4707 0140 0100     		.2byte	0x1
 4708 0142 50       		.byte	0x50
 4709 0143 00000000 		.4byte	0
 4710 0147 00000000 		.4byte	0
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 150


 4711              	.LLST9:
 4712 014b 00000000 		.4byte	.LVL25
 4713 014f 04000000 		.4byte	.LVL26
 4714 0153 0100     		.2byte	0x1
 4715 0155 50       		.byte	0x50
 4716 0156 04000000 		.4byte	.LVL26
 4717 015a 14000000 		.4byte	.LFE15
 4718 015e 0100     		.2byte	0x1
 4719 0160 52       		.byte	0x52
 4720 0161 00000000 		.4byte	0
 4721 0165 00000000 		.4byte	0
 4722              	.LLST10:
 4723 0169 00000000 		.4byte	.LVL31
 4724 016d 04000000 		.4byte	.LVL32
 4725 0171 0100     		.2byte	0x1
 4726 0173 50       		.byte	0x50
 4727 0174 04000000 		.4byte	.LVL32
 4728 0178 14000000 		.4byte	.LFE24
 4729 017c 0400     		.2byte	0x4
 4730 017e F3       		.byte	0xf3
 4731 017f 01       		.uleb128 0x1
 4732 0180 50       		.byte	0x50
 4733 0181 9F       		.byte	0x9f
 4734 0182 00000000 		.4byte	0
 4735 0186 00000000 		.4byte	0
 4736              	.LLST11:
 4737 018a 00000000 		.4byte	.LVL33
 4738 018e 08000000 		.4byte	.LVL34
 4739 0192 0100     		.2byte	0x1
 4740 0194 50       		.byte	0x50
 4741 0195 08000000 		.4byte	.LVL34
 4742 0199 18000000 		.4byte	.LFE25
 4743 019d 0400     		.2byte	0x4
 4744 019f F3       		.byte	0xf3
 4745 01a0 01       		.uleb128 0x1
 4746 01a1 50       		.byte	0x50
 4747 01a2 9F       		.byte	0x9f
 4748 01a3 00000000 		.4byte	0
 4749 01a7 00000000 		.4byte	0
 4750              	.LLST12:
 4751 01ab 00000000 		.4byte	.LVL35
 4752 01af 04000000 		.4byte	.LVL36
 4753 01b3 0100     		.2byte	0x1
 4754 01b5 50       		.byte	0x50
 4755 01b6 04000000 		.4byte	.LVL36
 4756 01ba 14000000 		.4byte	.LFE26
 4757 01be 0400     		.2byte	0x4
 4758 01c0 F3       		.byte	0xf3
 4759 01c1 01       		.uleb128 0x1
 4760 01c2 50       		.byte	0x50
 4761 01c3 9F       		.byte	0x9f
 4762 01c4 00000000 		.4byte	0
 4763 01c8 00000000 		.4byte	0
 4764              	.LLST13:
 4765 01cc 00000000 		.4byte	.LVL37
 4766 01d0 04000000 		.4byte	.LVL38
 4767 01d4 0100     		.2byte	0x1
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 151


 4768 01d6 50       		.byte	0x50
 4769 01d7 04000000 		.4byte	.LVL38
 4770 01db 14000000 		.4byte	.LFE27
 4771 01df 0400     		.2byte	0x4
 4772 01e1 F3       		.byte	0xf3
 4773 01e2 01       		.uleb128 0x1
 4774 01e3 50       		.byte	0x50
 4775 01e4 9F       		.byte	0x9f
 4776 01e5 00000000 		.4byte	0
 4777 01e9 00000000 		.4byte	0
 4778              	.LLST14:
 4779 01ed 00000000 		.4byte	.LVL39
 4780 01f1 04000000 		.4byte	.LVL40
 4781 01f5 0100     		.2byte	0x1
 4782 01f7 50       		.byte	0x50
 4783 01f8 04000000 		.4byte	.LVL40
 4784 01fc 14000000 		.4byte	.LFE28
 4785 0200 0400     		.2byte	0x4
 4786 0202 F3       		.byte	0xf3
 4787 0203 01       		.uleb128 0x1
 4788 0204 50       		.byte	0x50
 4789 0205 9F       		.byte	0x9f
 4790 0206 00000000 		.4byte	0
 4791 020a 00000000 		.4byte	0
 4792              	.LLST15:
 4793 020e 00000000 		.4byte	.LVL42
 4794 0212 0C000000 		.4byte	.LVL44
 4795 0216 0100     		.2byte	0x1
 4796 0218 50       		.byte	0x50
 4797 0219 0C000000 		.4byte	.LVL44
 4798 021d 20000000 		.4byte	.LFE18
 4799 0221 0400     		.2byte	0x4
 4800 0223 F3       		.byte	0xf3
 4801 0224 01       		.uleb128 0x1
 4802 0225 50       		.byte	0x50
 4803 0226 9F       		.byte	0x9f
 4804 0227 00000000 		.4byte	0
 4805 022b 00000000 		.4byte	0
 4806              	.LLST16:
 4807 022f 00000000 		.4byte	.LVL42
 4808 0233 0F000000 		.4byte	.LVL45-1
 4809 0237 0100     		.2byte	0x1
 4810 0239 51       		.byte	0x51
 4811 023a 0F000000 		.4byte	.LVL45-1
 4812 023e 1E000000 		.4byte	.LVL47
 4813 0242 0100     		.2byte	0x1
 4814 0244 55       		.byte	0x55
 4815 0245 1E000000 		.4byte	.LVL47
 4816 0249 20000000 		.4byte	.LFE18
 4817 024d 0400     		.2byte	0x4
 4818 024f F3       		.byte	0xf3
 4819 0250 01       		.uleb128 0x1
 4820 0251 51       		.byte	0x51
 4821 0252 9F       		.byte	0x9f
 4822 0253 00000000 		.4byte	0
 4823 0257 00000000 		.4byte	0
 4824              	.LLST17:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 152


 4825 025b 00000000 		.4byte	.LVL48
 4826 025f 0A000000 		.4byte	.LVL50
 4827 0263 0100     		.2byte	0x1
 4828 0265 50       		.byte	0x50
 4829 0266 0A000000 		.4byte	.LVL50
 4830 026a 1C000000 		.4byte	.LFE19
 4831 026e 0400     		.2byte	0x4
 4832 0270 F3       		.byte	0xf3
 4833 0271 01       		.uleb128 0x1
 4834 0272 50       		.byte	0x50
 4835 0273 9F       		.byte	0x9f
 4836 0274 00000000 		.4byte	0
 4837 0278 00000000 		.4byte	0
 4838              	.LLST18:
 4839 027c 00000000 		.4byte	.LVL52
 4840 0280 0C000000 		.4byte	.LVL54
 4841 0284 0100     		.2byte	0x1
 4842 0286 50       		.byte	0x50
 4843 0287 0C000000 		.4byte	.LVL54
 4844 028b 22000000 		.4byte	.LFE20
 4845 028f 0400     		.2byte	0x4
 4846 0291 F3       		.byte	0xf3
 4847 0292 01       		.uleb128 0x1
 4848 0293 50       		.byte	0x50
 4849 0294 9F       		.byte	0x9f
 4850 0295 00000000 		.4byte	0
 4851 0299 00000000 		.4byte	0
 4852              	.LLST19:
 4853 029d 00000000 		.4byte	.LVL52
 4854 02a1 0F000000 		.4byte	.LVL55-1
 4855 02a5 0100     		.2byte	0x1
 4856 02a7 51       		.byte	0x51
 4857 02a8 0F000000 		.4byte	.LVL55-1
 4858 02ac 20000000 		.4byte	.LVL57
 4859 02b0 0100     		.2byte	0x1
 4860 02b2 55       		.byte	0x55
 4861 02b3 20000000 		.4byte	.LVL57
 4862 02b7 22000000 		.4byte	.LFE20
 4863 02bb 0400     		.2byte	0x4
 4864 02bd F3       		.byte	0xf3
 4865 02be 01       		.uleb128 0x1
 4866 02bf 51       		.byte	0x51
 4867 02c0 9F       		.byte	0x9f
 4868 02c1 00000000 		.4byte	0
 4869 02c5 00000000 		.4byte	0
 4870              	.LLST20:
 4871 02c9 00000000 		.4byte	.LVL58
 4872 02cd 0A000000 		.4byte	.LVL60
 4873 02d1 0100     		.2byte	0x1
 4874 02d3 50       		.byte	0x50
 4875 02d4 0A000000 		.4byte	.LVL60
 4876 02d8 1E000000 		.4byte	.LFE21
 4877 02dc 0400     		.2byte	0x4
 4878 02de F3       		.byte	0xf3
 4879 02df 01       		.uleb128 0x1
 4880 02e0 50       		.byte	0x50
 4881 02e1 9F       		.byte	0x9f
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 153


 4882 02e2 00000000 		.4byte	0
 4883 02e6 00000000 		.4byte	0
 4884              	.LLST21:
 4885 02ea 00000000 		.4byte	.LVL62
 4886 02ee 0C000000 		.4byte	.LVL63
 4887 02f2 0100     		.2byte	0x1
 4888 02f4 50       		.byte	0x50
 4889 02f5 0C000000 		.4byte	.LVL63
 4890 02f9 4C000000 		.4byte	.LFE22
 4891 02fd 0400     		.2byte	0x4
 4892 02ff F3       		.byte	0xf3
 4893 0300 01       		.uleb128 0x1
 4894 0301 50       		.byte	0x50
 4895 0302 9F       		.byte	0x9f
 4896 0303 00000000 		.4byte	0
 4897 0307 00000000 		.4byte	0
 4898              	.LLST22:
 4899 030b 00000000 		.4byte	.LVL62
 4900 030f 0F000000 		.4byte	.LVL64-1
 4901 0313 0100     		.2byte	0x1
 4902 0315 51       		.byte	0x51
 4903 0316 0F000000 		.4byte	.LVL64-1
 4904 031a 4C000000 		.4byte	.LFE22
 4905 031e 0400     		.2byte	0x4
 4906 0320 F3       		.byte	0xf3
 4907 0321 01       		.uleb128 0x1
 4908 0322 51       		.byte	0x51
 4909 0323 9F       		.byte	0x9f
 4910 0324 00000000 		.4byte	0
 4911 0328 00000000 		.4byte	0
 4912              	.LLST23:
 4913 032c 26000000 		.4byte	.LVL67
 4914 0330 45000000 		.4byte	.LVL73-1
 4915 0334 0100     		.2byte	0x1
 4916 0336 50       		.byte	0x50
 4917 0337 00000000 		.4byte	0
 4918 033b 00000000 		.4byte	0
 4919              	.LLST24:
 4920 033f 22000000 		.4byte	.LVL66
 4921 0343 46000000 		.4byte	.LVL74
 4922 0347 0100     		.2byte	0x1
 4923 0349 55       		.byte	0x55
 4924 034a 00000000 		.4byte	0
 4925 034e 00000000 		.4byte	0
 4926              	.LLST25:
 4927 0352 32000000 		.4byte	.LVL68
 4928 0356 38000000 		.4byte	.LVL69
 4929 035a 0100     		.2byte	0x1
 4930 035c 51       		.byte	0x51
 4931 035d 3A000000 		.4byte	.LVL70
 4932 0361 3C000000 		.4byte	.LVL71
 4933 0365 0100     		.2byte	0x1
 4934 0367 51       		.byte	0x51
 4935 0368 3C000000 		.4byte	.LVL71
 4936 036c 40000000 		.4byte	.LVL72
 4937 0370 0100     		.2byte	0x1
 4938 0372 53       		.byte	0x53
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 154


 4939 0373 40000000 		.4byte	.LVL72
 4940 0377 45000000 		.4byte	.LVL73-1
 4941 037b 0100     		.2byte	0x1
 4942 037d 51       		.byte	0x51
 4943 037e 00000000 		.4byte	0
 4944 0382 00000000 		.4byte	0
 4945              	.LLST26:
 4946 0386 00000000 		.4byte	.LVL75
 4947 038a 0A000000 		.4byte	.LVL76
 4948 038e 0100     		.2byte	0x1
 4949 0390 50       		.byte	0x50
 4950 0391 0A000000 		.4byte	.LVL76
 4951 0395 2C000000 		.4byte	.LFE23
 4952 0399 0400     		.2byte	0x4
 4953 039b F3       		.byte	0xf3
 4954 039c 01       		.uleb128 0x1
 4955 039d 50       		.byte	0x50
 4956 039e 9F       		.byte	0x9f
 4957 039f 00000000 		.4byte	0
 4958 03a3 00000000 		.4byte	0
 4959              	.LLST27:
 4960 03a7 24000000 		.4byte	.LVL78
 4961 03ab 26000000 		.4byte	.LVL79
 4962 03af 0100     		.2byte	0x1
 4963 03b1 50       		.byte	0x50
 4964 03b2 00000000 		.4byte	0
 4965 03b6 00000000 		.4byte	0
 4966              	.LLST28:
 4967 03ba 00000000 		.4byte	.LVL80
 4968 03be 06000000 		.4byte	.LVL81
 4969 03c2 0100     		.2byte	0x1
 4970 03c4 50       		.byte	0x50
 4971 03c5 06000000 		.4byte	.LVL81
 4972 03c9 26000000 		.4byte	.LVL85
 4973 03cd 0100     		.2byte	0x1
 4974 03cf 54       		.byte	0x54
 4975 03d0 00000000 		.4byte	0
 4976 03d4 00000000 		.4byte	0
 4977              	.LLST29:
 4978 03d8 12000000 		.4byte	.LVL89
 4979 03dc 16000000 		.4byte	.LVL90
 4980 03e0 0200     		.2byte	0x2
 4981 03e2 30       		.byte	0x30
 4982 03e3 9F       		.byte	0x9f
 4983 03e4 16000000 		.4byte	.LVL90
 4984 03e8 28000000 		.4byte	.LVL91
 4985 03ec 0100     		.2byte	0x1
 4986 03ee 53       		.byte	0x53
 4987 03ef 28000000 		.4byte	.LVL91
 4988 03f3 2A000000 		.4byte	.LVL92
 4989 03f7 0300     		.2byte	0x3
 4990 03f9 73       		.byte	0x73
 4991 03fa 7D       		.sleb128 -3
 4992 03fb 9F       		.byte	0x9f
 4993 03fc 2A000000 		.4byte	.LVL92
 4994 0400 32000000 		.4byte	.LVL94
 4995 0404 0100     		.2byte	0x1
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 155


 4996 0406 53       		.byte	0x53
 4997 0407 00000000 		.4byte	0
 4998 040b 00000000 		.4byte	0
 4999              	.LLST30:
 5000 040f 12000000 		.4byte	.LVL89
 5001 0413 28000000 		.4byte	.LVL91
 5002 0417 0200     		.2byte	0x2
 5003 0419 33       		.byte	0x33
 5004 041a 9F       		.byte	0x9f
 5005 041b 28000000 		.4byte	.LVL91
 5006 041f 2A000000 		.4byte	.LVL92
 5007 0423 0100     		.2byte	0x1
 5008 0425 53       		.byte	0x53
 5009 0426 2A000000 		.4byte	.LVL92
 5010 042a 32000000 		.4byte	.LVL94
 5011 042e 0200     		.2byte	0x2
 5012 0430 33       		.byte	0x33
 5013 0431 9F       		.byte	0x9f
 5014 0432 32000000 		.4byte	.LVL94
 5015 0436 5C000000 		.4byte	.LVL96
 5016 043a 0100     		.2byte	0x1
 5017 043c 53       		.byte	0x53
 5018 043d 00000000 		.4byte	0
 5019 0441 00000000 		.4byte	0
 5020              	.LLST31:
 5021 0445 12000000 		.4byte	.LVL89
 5022 0449 C8000000 		.4byte	.LVL109
 5023 044d 0100     		.2byte	0x1
 5024 044f 55       		.byte	0x55
 5025 0450 00000000 		.4byte	0
 5026 0454 00000000 		.4byte	0
 5027              	.LLST32:
 5028 0458 56000000 		.4byte	.LVL95
 5029 045c 6E000000 		.4byte	.LVL97
 5030 0460 0100     		.2byte	0x1
 5031 0462 51       		.byte	0x51
 5032 0463 6E000000 		.4byte	.LVL97
 5033 0467 78000000 		.4byte	.LVL99
 5034 046b 0100     		.2byte	0x1
 5035 046d 53       		.byte	0x53
 5036 046e 78000000 		.4byte	.LVL99
 5037 0472 7C000000 		.4byte	.LVL100
 5038 0476 0200     		.2byte	0x2
 5039 0478 74       		.byte	0x74
 5040 0479 00       		.sleb128 0
 5041 047a 94000000 		.4byte	.LVL102
 5042 047e B8000000 		.4byte	.LVL108
 5043 0482 0100     		.2byte	0x1
 5044 0484 56       		.byte	0x56
 5045 0485 00000000 		.4byte	0
 5046 0489 00000000 		.4byte	0
 5047              	.LLST33:
 5048 048d 04000000 		.4byte	.LVL86
 5049 0491 98000000 		.4byte	.LVL103
 5050 0495 0200     		.2byte	0x2
 5051 0497 30       		.byte	0x30
 5052 0498 9F       		.byte	0x9f
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 156


 5053 0499 98000000 		.4byte	.LVL103
 5054 049d C8000000 		.4byte	.LVL109
 5055 04a1 0100     		.2byte	0x1
 5056 04a3 54       		.byte	0x54
 5057 04a4 00000000 		.4byte	0
 5058 04a8 00000000 		.4byte	0
 5059              	.LLST34:
 5060 04ac 00000000 		.4byte	.LVL110
 5061 04b0 09000000 		.4byte	.LVL112-1
 5062 04b4 0100     		.2byte	0x1
 5063 04b6 50       		.byte	0x50
 5064 04b7 09000000 		.4byte	.LVL112-1
 5065 04bb 2C000000 		.4byte	.LVL119
 5066 04bf 0100     		.2byte	0x1
 5067 04c1 54       		.byte	0x54
 5068 04c2 2C000000 		.4byte	.LVL119
 5069 04c6 5E000000 		.4byte	.LVL122
 5070 04ca 0300     		.2byte	0x3
 5071 04cc 74       		.byte	0x74
 5072 04cd 03       		.sleb128 3
 5073 04ce 9F       		.byte	0x9f
 5074 04cf 5E000000 		.4byte	.LVL122
 5075 04d3 80000000 		.4byte	.LFE10
 5076 04d7 0400     		.2byte	0x4
 5077 04d9 F3       		.byte	0xf3
 5078 04da 01       		.uleb128 0x1
 5079 04db 50       		.byte	0x50
 5080 04dc 9F       		.byte	0x9f
 5081 04dd 00000000 		.4byte	0
 5082 04e1 00000000 		.4byte	0
 5083              	.LLST35:
 5084 04e5 06000000 		.4byte	.LVL111
 5085 04e9 14000000 		.4byte	.LVL115
 5086 04ed 0200     		.2byte	0x2
 5087 04ef 30       		.byte	0x30
 5088 04f0 9F       		.byte	0x9f
 5089 04f1 14000000 		.4byte	.LVL115
 5090 04f5 1C000000 		.4byte	.LVL117
 5091 04f9 0200     		.2byte	0x2
 5092 04fb 31       		.byte	0x31
 5093 04fc 9F       		.byte	0x9f
 5094 04fd 1C000000 		.4byte	.LVL117
 5095 0501 1E000000 		.4byte	.LVL118
 5096 0505 0200     		.2byte	0x2
 5097 0507 30       		.byte	0x30
 5098 0508 9F       		.byte	0x9f
 5099 0509 1E000000 		.4byte	.LVL118
 5100 050d 55000000 		.4byte	.LVL120-1
 5101 0511 0100     		.2byte	0x1
 5102 0513 51       		.byte	0x51
 5103 0514 00000000 		.4byte	0
 5104 0518 00000000 		.4byte	0
 5105              	.LLST36:
 5106 051c 0C000000 		.4byte	.LVL113
 5107 0520 5E000000 		.4byte	.LVL123
 5108 0524 0100     		.2byte	0x1
 5109 0526 55       		.byte	0x55
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 157


 5110 0527 00000000 		.4byte	0
 5111 052b 00000000 		.4byte	0
 5112              	.LLST37:
 5113 052f 00000000 		.4byte	.LVL124
 5114 0533 08000000 		.4byte	.LVL125
 5115 0537 0100     		.2byte	0x1
 5116 0539 50       		.byte	0x50
 5117 053a 08000000 		.4byte	.LVL125
 5118 053e 14000000 		.4byte	.LFE32
 5119 0542 0400     		.2byte	0x4
 5120 0544 F3       		.byte	0xf3
 5121 0545 01       		.uleb128 0x1
 5122 0546 50       		.byte	0x50
 5123 0547 9F       		.byte	0x9f
 5124 0548 00000000 		.4byte	0
 5125 054c 00000000 		.4byte	0
 5126              	.LLST38:
 5127 0550 00000000 		.4byte	.LVL127
 5128 0554 14000000 		.4byte	.LVL128
 5129 0558 0100     		.2byte	0x1
 5130 055a 50       		.byte	0x50
 5131 055b 14000000 		.4byte	.LVL128
 5132 055f 18000000 		.4byte	.LVL129
 5133 0563 0100     		.2byte	0x1
 5134 0565 53       		.byte	0x53
 5135 0566 18000000 		.4byte	.LVL129
 5136 056a 44000000 		.4byte	.LFE11
 5137 056e 0400     		.2byte	0x4
 5138 0570 F3       		.byte	0xf3
 5139 0571 01       		.uleb128 0x1
 5140 0572 50       		.byte	0x50
 5141 0573 9F       		.byte	0x9f
 5142 0574 00000000 		.4byte	0
 5143 0578 00000000 		.4byte	0
 5144              	.LLST39:
 5145 057c 00000000 		.4byte	.LVL132
 5146 0580 1A000000 		.4byte	.LVL133
 5147 0584 0100     		.2byte	0x1
 5148 0586 50       		.byte	0x50
 5149 0587 1A000000 		.4byte	.LVL133
 5150 058b 4C000000 		.4byte	.LFE33
 5151 058f 0400     		.2byte	0x4
 5152 0591 F3       		.byte	0xf3
 5153 0592 01       		.uleb128 0x1
 5154 0593 50       		.byte	0x50
 5155 0594 9F       		.byte	0x9f
 5156 0595 00000000 		.4byte	0
 5157 0599 00000000 		.4byte	0
 5158              	.LLST40:
 5159 059d 00000000 		.4byte	.LVL137
 5160 05a1 02000000 		.4byte	.LVL138
 5161 05a5 0100     		.2byte	0x1
 5162 05a7 50       		.byte	0x50
 5163 05a8 02000000 		.4byte	.LVL138
 5164 05ac 10000000 		.4byte	.LFE40
 5165 05b0 0400     		.2byte	0x4
 5166 05b2 F3       		.byte	0xf3
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 158


 5167 05b3 01       		.uleb128 0x1
 5168 05b4 50       		.byte	0x50
 5169 05b5 9F       		.byte	0x9f
 5170 05b6 00000000 		.4byte	0
 5171 05ba 00000000 		.4byte	0
 5172              	.LLST41:
 5173 05be 0C000000 		.4byte	.LVL141
 5174 05c2 1C000000 		.4byte	.LVL144
 5175 05c6 0100     		.2byte	0x1
 5176 05c8 54       		.byte	0x54
 5177 05c9 1E000000 		.4byte	.LVL145
 5178 05cd 22000000 		.4byte	.LVL146
 5179 05d1 0100     		.2byte	0x1
 5180 05d3 54       		.byte	0x54
 5181 05d4 00000000 		.4byte	0
 5182 05d8 00000000 		.4byte	0
 5183              	.LLST42:
 5184 05dc 02000000 		.4byte	.LVL147
 5185 05e0 06000000 		.4byte	.LVL148
 5186 05e4 0200     		.2byte	0x2
 5187 05e6 30       		.byte	0x30
 5188 05e7 9F       		.byte	0x9f
 5189 05e8 06000000 		.4byte	.LVL148
 5190 05ec 1B000000 		.4byte	.LVL150-1
 5191 05f0 0100     		.2byte	0x1
 5192 05f2 53       		.byte	0x53
 5193 05f3 00000000 		.4byte	0
 5194 05f7 00000000 		.4byte	0
 5195              	.LLST43:
 5196 05fb 00000000 		.4byte	.LVL157
 5197 05ff 06000000 		.4byte	.LVL158
 5198 0603 0100     		.2byte	0x1
 5199 0605 50       		.byte	0x50
 5200 0606 06000000 		.4byte	.LVL158
 5201 060a 10000000 		.4byte	.LFE47
 5202 060e 0400     		.2byte	0x4
 5203 0610 F3       		.byte	0xf3
 5204 0611 01       		.uleb128 0x1
 5205 0612 50       		.byte	0x50
 5206 0613 9F       		.byte	0x9f
 5207 0614 00000000 		.4byte	0
 5208 0618 00000000 		.4byte	0
 5209              	.LLST44:
 5210 061c 00000000 		.4byte	.LVL159
 5211 0620 02000000 		.4byte	.LVL160
 5212 0624 0100     		.2byte	0x1
 5213 0626 50       		.byte	0x50
 5214 0627 02000000 		.4byte	.LVL160
 5215 062b 0C000000 		.4byte	.LFE48
 5216 062f 0400     		.2byte	0x4
 5217 0631 F3       		.byte	0xf3
 5218 0632 01       		.uleb128 0x1
 5219 0633 50       		.byte	0x50
 5220 0634 9F       		.byte	0x9f
 5221 0635 00000000 		.4byte	0
 5222 0639 00000000 		.4byte	0
 5223              	.LLST45:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 159


 5224 063d 00000000 		.4byte	.LVL162
 5225 0641 0A000000 		.4byte	.LVL164
 5226 0645 0100     		.2byte	0x1
 5227 0647 50       		.byte	0x50
 5228 0648 0A000000 		.4byte	.LVL164
 5229 064c 20000000 		.4byte	.LFE51
 5230 0650 0400     		.2byte	0x4
 5231 0652 F3       		.byte	0xf3
 5232 0653 01       		.uleb128 0x1
 5233 0654 50       		.byte	0x50
 5234 0655 9F       		.byte	0x9f
 5235 0656 00000000 		.4byte	0
 5236 065a 00000000 		.4byte	0
 5237              	.LLST46:
 5238 065e 08000000 		.4byte	.LVL163
 5239 0662 12000000 		.4byte	.LVL165
 5240 0666 0100     		.2byte	0x1
 5241 0668 52       		.byte	0x52
 5242 0669 12000000 		.4byte	.LVL165
 5243 066d 20000000 		.4byte	.LFE51
 5244 0671 0100     		.2byte	0x1
 5245 0673 50       		.byte	0x50
 5246 0674 00000000 		.4byte	0
 5247 0678 00000000 		.4byte	0
 5248              	.LLST47:
 5249 067c 00000000 		.4byte	.LVL166
 5250 0680 0A000000 		.4byte	.LVL168
 5251 0684 0100     		.2byte	0x1
 5252 0686 50       		.byte	0x50
 5253 0687 0A000000 		.4byte	.LVL168
 5254 068b 20000000 		.4byte	.LFE52
 5255 068f 0400     		.2byte	0x4
 5256 0691 F3       		.byte	0xf3
 5257 0692 01       		.uleb128 0x1
 5258 0693 50       		.byte	0x50
 5259 0694 9F       		.byte	0x9f
 5260 0695 00000000 		.4byte	0
 5261 0699 00000000 		.4byte	0
 5262              	.LLST48:
 5263 069d 08000000 		.4byte	.LVL167
 5264 06a1 12000000 		.4byte	.LVL169
 5265 06a5 0100     		.2byte	0x1
 5266 06a7 52       		.byte	0x52
 5267 06a8 12000000 		.4byte	.LVL169
 5268 06ac 20000000 		.4byte	.LFE52
 5269 06b0 0100     		.2byte	0x1
 5270 06b2 50       		.byte	0x50
 5271 06b3 00000000 		.4byte	0
 5272 06b7 00000000 		.4byte	0
 5273              	.LLST49:
 5274 06bb 00000000 		.4byte	.LVL170
 5275 06bf 0A000000 		.4byte	.LVL172
 5276 06c3 0100     		.2byte	0x1
 5277 06c5 50       		.byte	0x50
 5278 06c6 0A000000 		.4byte	.LVL172
 5279 06ca 20000000 		.4byte	.LFE53
 5280 06ce 0400     		.2byte	0x4
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 160


 5281 06d0 F3       		.byte	0xf3
 5282 06d1 01       		.uleb128 0x1
 5283 06d2 50       		.byte	0x50
 5284 06d3 9F       		.byte	0x9f
 5285 06d4 00000000 		.4byte	0
 5286 06d8 00000000 		.4byte	0
 5287              	.LLST50:
 5288 06dc 08000000 		.4byte	.LVL171
 5289 06e0 12000000 		.4byte	.LVL173
 5290 06e4 0100     		.2byte	0x1
 5291 06e6 52       		.byte	0x52
 5292 06e7 12000000 		.4byte	.LVL173
 5293 06eb 20000000 		.4byte	.LFE53
 5294 06ef 0100     		.2byte	0x1
 5295 06f1 50       		.byte	0x50
 5296 06f2 00000000 		.4byte	0
 5297 06f6 00000000 		.4byte	0
 5298              	.LLST51:
 5299 06fa 00000000 		.4byte	.LVL174
 5300 06fe 08000000 		.4byte	.LVL175
 5301 0702 0100     		.2byte	0x1
 5302 0704 50       		.byte	0x50
 5303 0705 08000000 		.4byte	.LVL175
 5304 0709 1C000000 		.4byte	.LVL179
 5305 070d 0400     		.2byte	0x4
 5306 070f F3       		.byte	0xf3
 5307 0710 01       		.uleb128 0x1
 5308 0711 50       		.byte	0x50
 5309 0712 9F       		.byte	0x9f
 5310 0713 1C000000 		.4byte	.LVL179
 5311 0717 22000000 		.4byte	.LVL180
 5312 071b 0100     		.2byte	0x1
 5313 071d 50       		.byte	0x50
 5314 071e 22000000 		.4byte	.LVL180
 5315 0722 36000000 		.4byte	.LVL184
 5316 0726 0400     		.2byte	0x4
 5317 0728 F3       		.byte	0xf3
 5318 0729 01       		.uleb128 0x1
 5319 072a 50       		.byte	0x50
 5320 072b 9F       		.byte	0x9f
 5321 072c 36000000 		.4byte	.LVL184
 5322 0730 3C000000 		.4byte	.LVL185
 5323 0734 0100     		.2byte	0x1
 5324 0736 50       		.byte	0x50
 5325 0737 3C000000 		.4byte	.LVL185
 5326 073b 50000000 		.4byte	.LVL189
 5327 073f 0400     		.2byte	0x4
 5328 0741 F3       		.byte	0xf3
 5329 0742 01       		.uleb128 0x1
 5330 0743 50       		.byte	0x50
 5331 0744 9F       		.byte	0x9f
 5332 0745 50000000 		.4byte	.LVL189
 5333 0749 52000000 		.4byte	.LVL190
 5334 074d 0100     		.2byte	0x1
 5335 074f 50       		.byte	0x50
 5336 0750 52000000 		.4byte	.LVL190
 5337 0754 68000000 		.4byte	.LFE54
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 161


 5338 0758 0400     		.2byte	0x4
 5339 075a F3       		.byte	0xf3
 5340 075b 01       		.uleb128 0x1
 5341 075c 50       		.byte	0x50
 5342 075d 9F       		.byte	0x9f
 5343 075e 00000000 		.4byte	0
 5344 0762 00000000 		.4byte	0
 5345              	.LLST52:
 5346 0766 00000000 		.4byte	.LVL174
 5347 076a 10000000 		.4byte	.LVL177
 5348 076e 0100     		.2byte	0x1
 5349 0770 51       		.byte	0x51
 5350 0771 10000000 		.4byte	.LVL177
 5351 0775 1C000000 		.4byte	.LVL179
 5352 0779 0400     		.2byte	0x4
 5353 077b F3       		.byte	0xf3
 5354 077c 01       		.uleb128 0x1
 5355 077d 51       		.byte	0x51
 5356 077e 9F       		.byte	0x9f
 5357 077f 1C000000 		.4byte	.LVL179
 5358 0783 2A000000 		.4byte	.LVL182
 5359 0787 0100     		.2byte	0x1
 5360 0789 51       		.byte	0x51
 5361 078a 2A000000 		.4byte	.LVL182
 5362 078e 36000000 		.4byte	.LVL184
 5363 0792 0400     		.2byte	0x4
 5364 0794 F3       		.byte	0xf3
 5365 0795 01       		.uleb128 0x1
 5366 0796 51       		.byte	0x51
 5367 0797 9F       		.byte	0x9f
 5368 0798 36000000 		.4byte	.LVL184
 5369 079c 44000000 		.4byte	.LVL187
 5370 07a0 0100     		.2byte	0x1
 5371 07a2 51       		.byte	0x51
 5372 07a3 44000000 		.4byte	.LVL187
 5373 07a7 50000000 		.4byte	.LVL189
 5374 07ab 0400     		.2byte	0x4
 5375 07ad F3       		.byte	0xf3
 5376 07ae 01       		.uleb128 0x1
 5377 07af 51       		.byte	0x51
 5378 07b0 9F       		.byte	0x9f
 5379 07b1 50000000 		.4byte	.LVL189
 5380 07b5 55000000 		.4byte	.LVL191-1
 5381 07b9 0100     		.2byte	0x1
 5382 07bb 51       		.byte	0x51
 5383 07bc 55000000 		.4byte	.LVL191-1
 5384 07c0 68000000 		.4byte	.LFE54
 5385 07c4 0400     		.2byte	0x4
 5386 07c6 F3       		.byte	0xf3
 5387 07c7 01       		.uleb128 0x1
 5388 07c8 51       		.byte	0x51
 5389 07c9 9F       		.byte	0x9f
 5390 07ca 00000000 		.4byte	0
 5391 07ce 00000000 		.4byte	0
 5392              	.LLST53:
 5393 07d2 0E000000 		.4byte	.LVL176
 5394 07d6 18000000 		.4byte	.LVL178
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 162


 5395 07da 0100     		.2byte	0x1
 5396 07dc 52       		.byte	0x52
 5397 07dd 18000000 		.4byte	.LVL178
 5398 07e1 1C000000 		.4byte	.LVL179
 5399 07e5 0100     		.2byte	0x1
 5400 07e7 51       		.byte	0x51
 5401 07e8 28000000 		.4byte	.LVL181
 5402 07ec 32000000 		.4byte	.LVL183
 5403 07f0 0100     		.2byte	0x1
 5404 07f2 52       		.byte	0x52
 5405 07f3 32000000 		.4byte	.LVL183
 5406 07f7 36000000 		.4byte	.LVL184
 5407 07fb 0100     		.2byte	0x1
 5408 07fd 51       		.byte	0x51
 5409 07fe 42000000 		.4byte	.LVL186
 5410 0802 4C000000 		.4byte	.LVL188
 5411 0806 0100     		.2byte	0x1
 5412 0808 52       		.byte	0x52
 5413 0809 4C000000 		.4byte	.LVL188
 5414 080d 50000000 		.4byte	.LVL189
 5415 0811 0100     		.2byte	0x1
 5416 0813 51       		.byte	0x51
 5417 0814 00000000 		.4byte	0
 5418 0818 00000000 		.4byte	0
 5419              		.section	.debug_aranges,"",%progbits
 5420 0000 C4010000 		.4byte	0x1c4
 5421 0004 0200     		.2byte	0x2
 5422 0006 00000000 		.4byte	.Ldebug_info0
 5423 000a 04       		.byte	0x4
 5424 000b 00       		.byte	0
 5425 000c 0000     		.2byte	0
 5426 000e 0000     		.2byte	0
 5427 0010 00000000 		.4byte	.LFB1
 5428 0014 14000000 		.4byte	.LFE1-.LFB1
 5429 0018 00000000 		.4byte	.LFB4
 5430 001c 54000000 		.4byte	.LFE4-.LFB4
 5431 0020 00000000 		.4byte	.LFB2
 5432 0024 18000000 		.4byte	.LFE2-.LFB2
 5433 0028 00000000 		.4byte	.LFB5
 5434 002c 14000000 		.4byte	.LFE5-.LFB5
 5435 0030 00000000 		.4byte	.LFB6
 5436 0034 20000000 		.4byte	.LFE6-.LFB6
 5437 0038 00000000 		.4byte	.LFB7
 5438 003c 38000000 		.4byte	.LFE7-.LFB7
 5439 0040 00000000 		.4byte	.LFB8
 5440 0044 1C000000 		.4byte	.LFE8-.LFB8
 5441 0048 00000000 		.4byte	.LFB9
 5442 004c 30000000 		.4byte	.LFE9-.LFB9
 5443 0050 00000000 		.4byte	.LFB12
 5444 0054 20000000 		.4byte	.LFE12-.LFB12
 5445 0058 00000000 		.4byte	.LFB13
 5446 005c 10000000 		.4byte	.LFE13-.LFB13
 5447 0060 00000000 		.4byte	.LFB14
 5448 0064 0C000000 		.4byte	.LFE14-.LFB14
 5449 0068 00000000 		.4byte	.LFB15
 5450 006c 14000000 		.4byte	.LFE15-.LFB15
 5451 0070 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 163


 5452 0074 10000000 		.4byte	.LFE16-.LFB16
 5453 0078 00000000 		.4byte	.LFB17
 5454 007c 0C000000 		.4byte	.LFE17-.LFB17
 5455 0080 00000000 		.4byte	.LFB24
 5456 0084 14000000 		.4byte	.LFE24-.LFB24
 5457 0088 00000000 		.4byte	.LFB25
 5458 008c 18000000 		.4byte	.LFE25-.LFB25
 5459 0090 00000000 		.4byte	.LFB26
 5460 0094 14000000 		.4byte	.LFE26-.LFB26
 5461 0098 00000000 		.4byte	.LFB27
 5462 009c 14000000 		.4byte	.LFE27-.LFB27
 5463 00a0 00000000 		.4byte	.LFB28
 5464 00a4 14000000 		.4byte	.LFE28-.LFB28
 5465 00a8 00000000 		.4byte	.LFB29
 5466 00ac 04000000 		.4byte	.LFE29-.LFB29
 5467 00b0 00000000 		.4byte	.LFB18
 5468 00b4 20000000 		.4byte	.LFE18-.LFB18
 5469 00b8 00000000 		.4byte	.LFB19
 5470 00bc 1C000000 		.4byte	.LFE19-.LFB19
 5471 00c0 00000000 		.4byte	.LFB20
 5472 00c4 22000000 		.4byte	.LFE20-.LFB20
 5473 00c8 00000000 		.4byte	.LFB21
 5474 00cc 1E000000 		.4byte	.LFE21-.LFB21
 5475 00d0 00000000 		.4byte	.LFB22
 5476 00d4 4C000000 		.4byte	.LFE22-.LFB22
 5477 00d8 00000000 		.4byte	.LFB23
 5478 00dc 2C000000 		.4byte	.LFE23-.LFB23
 5479 00e0 00000000 		.4byte	.LFB30
 5480 00e4 18000000 		.4byte	.LFE30-.LFB30
 5481 00e8 00000000 		.4byte	.LFB31
 5482 00ec 30000000 		.4byte	.LFE31-.LFB31
 5483 00f0 00000000 		.4byte	.LFB3
 5484 00f4 F4000000 		.4byte	.LFE3-.LFB3
 5485 00f8 00000000 		.4byte	.LFB10
 5486 00fc 80000000 		.4byte	.LFE10-.LFB10
 5487 0100 00000000 		.4byte	.LFB32
 5488 0104 14000000 		.4byte	.LFE32-.LFB32
 5489 0108 00000000 		.4byte	.LFB11
 5490 010c 44000000 		.4byte	.LFE11-.LFB11
 5491 0110 00000000 		.4byte	.LFB33
 5492 0114 4C000000 		.4byte	.LFE33-.LFB33
 5493 0118 00000000 		.4byte	.LFB37
 5494 011c 10000000 		.4byte	.LFE37-.LFB37
 5495 0120 00000000 		.4byte	.LFB38
 5496 0124 10000000 		.4byte	.LFE38-.LFB38
 5497 0128 00000000 		.4byte	.LFB36
 5498 012c 18000000 		.4byte	.LFE36-.LFB36
 5499 0130 00000000 		.4byte	.LFB39
 5500 0134 10000000 		.4byte	.LFE39-.LFB39
 5501 0138 00000000 		.4byte	.LFB40
 5502 013c 10000000 		.4byte	.LFE40-.LFB40
 5503 0140 00000000 		.4byte	.LFB41
 5504 0144 10000000 		.4byte	.LFE41-.LFB41
 5505 0148 00000000 		.4byte	.LFB42
 5506 014c 10000000 		.4byte	.LFE42-.LFB42
 5507 0150 00000000 		.4byte	.LFB43
 5508 0154 20000000 		.4byte	.LFE43-.LFB43
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 164


 5509 0158 00000000 		.4byte	.LFB44
 5510 015c 10000000 		.4byte	.LFE44-.LFB44
 5511 0160 00000000 		.4byte	.LFB45
 5512 0164 10000000 		.4byte	.LFE45-.LFB45
 5513 0168 00000000 		.4byte	.LFB49
 5514 016c 28000000 		.4byte	.LFE49-.LFB49
 5515 0170 00000000 		.4byte	.LFB46
 5516 0174 0C000000 		.4byte	.LFE46-.LFB46
 5517 0178 00000000 		.4byte	.LFB35
 5518 017c 44000000 		.4byte	.LFE35-.LFB35
 5519 0180 00000000 		.4byte	.LFB34
 5520 0184 20000000 		.4byte	.LFE34-.LFB34
 5521 0188 00000000 		.4byte	.LFB47
 5522 018c 10000000 		.4byte	.LFE47-.LFB47
 5523 0190 00000000 		.4byte	.LFB48
 5524 0194 0C000000 		.4byte	.LFE48-.LFB48
 5525 0198 00000000 		.4byte	.LFB50
 5526 019c 70000000 		.4byte	.LFE50-.LFB50
 5527 01a0 00000000 		.4byte	.LFB51
 5528 01a4 20000000 		.4byte	.LFE51-.LFB51
 5529 01a8 00000000 		.4byte	.LFB52
 5530 01ac 20000000 		.4byte	.LFE52-.LFB52
 5531 01b0 00000000 		.4byte	.LFB53
 5532 01b4 20000000 		.4byte	.LFE53-.LFB53
 5533 01b8 00000000 		.4byte	.LFB54
 5534 01bc 68000000 		.4byte	.LFE54-.LFB54
 5535 01c0 00000000 		.4byte	0
 5536 01c4 00000000 		.4byte	0
 5537              		.section	.debug_ranges,"",%progbits
 5538              	.Ldebug_ranges0:
 5539 0000 00000000 		.4byte	.LFB1
 5540 0004 14000000 		.4byte	.LFE1
 5541 0008 00000000 		.4byte	.LFB4
 5542 000c 54000000 		.4byte	.LFE4
 5543 0010 00000000 		.4byte	.LFB2
 5544 0014 18000000 		.4byte	.LFE2
 5545 0018 00000000 		.4byte	.LFB5
 5546 001c 14000000 		.4byte	.LFE5
 5547 0020 00000000 		.4byte	.LFB6
 5548 0024 20000000 		.4byte	.LFE6
 5549 0028 00000000 		.4byte	.LFB7
 5550 002c 38000000 		.4byte	.LFE7
 5551 0030 00000000 		.4byte	.LFB8
 5552 0034 1C000000 		.4byte	.LFE8
 5553 0038 00000000 		.4byte	.LFB9
 5554 003c 30000000 		.4byte	.LFE9
 5555 0040 00000000 		.4byte	.LFB12
 5556 0044 20000000 		.4byte	.LFE12
 5557 0048 00000000 		.4byte	.LFB13
 5558 004c 10000000 		.4byte	.LFE13
 5559 0050 00000000 		.4byte	.LFB14
 5560 0054 0C000000 		.4byte	.LFE14
 5561 0058 00000000 		.4byte	.LFB15
 5562 005c 14000000 		.4byte	.LFE15
 5563 0060 00000000 		.4byte	.LFB16
 5564 0064 10000000 		.4byte	.LFE16
 5565 0068 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 165


 5566 006c 0C000000 		.4byte	.LFE17
 5567 0070 00000000 		.4byte	.LFB24
 5568 0074 14000000 		.4byte	.LFE24
 5569 0078 00000000 		.4byte	.LFB25
 5570 007c 18000000 		.4byte	.LFE25
 5571 0080 00000000 		.4byte	.LFB26
 5572 0084 14000000 		.4byte	.LFE26
 5573 0088 00000000 		.4byte	.LFB27
 5574 008c 14000000 		.4byte	.LFE27
 5575 0090 00000000 		.4byte	.LFB28
 5576 0094 14000000 		.4byte	.LFE28
 5577 0098 00000000 		.4byte	.LFB29
 5578 009c 04000000 		.4byte	.LFE29
 5579 00a0 00000000 		.4byte	.LFB18
 5580 00a4 20000000 		.4byte	.LFE18
 5581 00a8 00000000 		.4byte	.LFB19
 5582 00ac 1C000000 		.4byte	.LFE19
 5583 00b0 00000000 		.4byte	.LFB20
 5584 00b4 22000000 		.4byte	.LFE20
 5585 00b8 00000000 		.4byte	.LFB21
 5586 00bc 1E000000 		.4byte	.LFE21
 5587 00c0 00000000 		.4byte	.LFB22
 5588 00c4 4C000000 		.4byte	.LFE22
 5589 00c8 00000000 		.4byte	.LFB23
 5590 00cc 2C000000 		.4byte	.LFE23
 5591 00d0 00000000 		.4byte	.LFB30
 5592 00d4 18000000 		.4byte	.LFE30
 5593 00d8 00000000 		.4byte	.LFB31
 5594 00dc 30000000 		.4byte	.LFE31
 5595 00e0 00000000 		.4byte	.LFB3
 5596 00e4 F4000000 		.4byte	.LFE3
 5597 00e8 00000000 		.4byte	.LFB10
 5598 00ec 80000000 		.4byte	.LFE10
 5599 00f0 00000000 		.4byte	.LFB32
 5600 00f4 14000000 		.4byte	.LFE32
 5601 00f8 00000000 		.4byte	.LFB11
 5602 00fc 44000000 		.4byte	.LFE11
 5603 0100 00000000 		.4byte	.LFB33
 5604 0104 4C000000 		.4byte	.LFE33
 5605 0108 00000000 		.4byte	.LFB37
 5606 010c 10000000 		.4byte	.LFE37
 5607 0110 00000000 		.4byte	.LFB38
 5608 0114 10000000 		.4byte	.LFE38
 5609 0118 00000000 		.4byte	.LFB36
 5610 011c 18000000 		.4byte	.LFE36
 5611 0120 00000000 		.4byte	.LFB39
 5612 0124 10000000 		.4byte	.LFE39
 5613 0128 00000000 		.4byte	.LFB40
 5614 012c 10000000 		.4byte	.LFE40
 5615 0130 00000000 		.4byte	.LFB41
 5616 0134 10000000 		.4byte	.LFE41
 5617 0138 00000000 		.4byte	.LFB42
 5618 013c 10000000 		.4byte	.LFE42
 5619 0140 00000000 		.4byte	.LFB43
 5620 0144 20000000 		.4byte	.LFE43
 5621 0148 00000000 		.4byte	.LFB44
 5622 014c 10000000 		.4byte	.LFE44
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 166


 5623 0150 00000000 		.4byte	.LFB45
 5624 0154 10000000 		.4byte	.LFE45
 5625 0158 00000000 		.4byte	.LFB49
 5626 015c 28000000 		.4byte	.LFE49
 5627 0160 00000000 		.4byte	.LFB46
 5628 0164 0C000000 		.4byte	.LFE46
 5629 0168 00000000 		.4byte	.LFB35
 5630 016c 44000000 		.4byte	.LFE35
 5631 0170 00000000 		.4byte	.LFB34
 5632 0174 20000000 		.4byte	.LFE34
 5633 0178 00000000 		.4byte	.LFB47
 5634 017c 10000000 		.4byte	.LFE47
 5635 0180 00000000 		.4byte	.LFB48
 5636 0184 0C000000 		.4byte	.LFE48
 5637 0188 00000000 		.4byte	.LFB50
 5638 018c 70000000 		.4byte	.LFE50
 5639 0190 00000000 		.4byte	.LFB51
 5640 0194 20000000 		.4byte	.LFE51
 5641 0198 00000000 		.4byte	.LFB52
 5642 019c 20000000 		.4byte	.LFE52
 5643 01a0 00000000 		.4byte	.LFB53
 5644 01a4 20000000 		.4byte	.LFE53
 5645 01a8 00000000 		.4byte	.LFB54
 5646 01ac 68000000 		.4byte	.LFE54
 5647 01b0 00000000 		.4byte	0
 5648 01b4 00000000 		.4byte	0
 5649              		.section	.debug_line,"",%progbits
 5650              	.Ldebug_line0:
 5651 0000 5F050000 		.section	.debug_str,"MS",%progbits,1
 5651      02006700 
 5651      00000201 
 5651      FB0E0D00 
 5651      01010101 
 5652              	.LASF56:
 5653 0000 72616D56 		.ascii	"ramVectorTable\000"
 5653      6563746F 
 5653      72546162 
 5653      6C6500
 5654              	.LASF10:
 5655 000f 75696E74 		.ascii	"uint16\000"
 5655      313600
 5656              	.LASF43:
 5657 0016 696E7453 		.ascii	"intState\000"
 5657      74617465 
 5657      00
 5658              	.LASF24:
 5659 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5659      73436C6B 
 5659      57726974 
 5659      65486663 
 5659      6C6B4469 
 5660              	.LASF114:
 5661 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 5661      73436C6B 
 5661      50756D70 
 5661      436F6E66 
 5661      696700
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 167


 5662              	.LASF27:
 5663 004b 43795379 		.ascii	"CySysEnablePumpClock\000"
 5663      73456E61 
 5663      626C6550 
 5663      756D7043 
 5663      6C6F636B 
 5664              	.LASF97:
 5665 0060 72657456 		.ascii	"retVal\000"
 5665      616C00
 5666              	.LASF42:
 5667 0067 43794469 		.ascii	"CyDisableInts\000"
 5667      7361626C 
 5667      65496E74 
 5667      7300
 5668              	.LASF120:
 5669 0075 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5669      43313120 
 5669      352E342E 
 5669      31203230 
 5669      31363036 
 5670 00a8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5670      20726576 
 5670      6973696F 
 5670      6E203233 
 5670      37373135 
 5671 00db 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5671      66756E63 
 5671      74696F6E 
 5671      2D736563 
 5671      74696F6E 
 5672              	.LASF7:
 5673 0103 6C6F6E67 		.ascii	"long long unsigned int\000"
 5673      206C6F6E 
 5673      6720756E 
 5673      7369676E 
 5673      65642069 
 5674              	.LASF122:
 5675 011a 453A5C68 		.ascii	"E:\\hardware\\cy8ckit-043-slider\\cy8ckit-043-slide"
 5675      61726477 
 5675      6172655C 
 5675      63793863 
 5675      6B69742D 
 5676 014a 722E6379 		.ascii	"r.cydsn\000"
 5676      64736E00 
 5677              	.LASF44:
 5678 0152 4379456E 		.ascii	"CyEnableInts\000"
 5678      61626C65 
 5678      496E7473 
 5678      00
 5679              	.LASF106:
 5680 015f 696E7465 		.ascii	"interfaceNumber\000"
 5680      72666163 
 5680      654E756D 
 5680      62657200 
 5681              	.LASF65:
 5682 016f 4379536F 		.ascii	"CySoftwareReset\000"
 5682      66747761 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 168


 5682      72655265 
 5682      73657400 
 5683              	.LASF82:
 5684 017f 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5684      73546963 
 5684      6B456E61 
 5684      626C6549 
 5684      6E746572 
 5685              	.LASF48:
 5686 0198 4379496E 		.ascii	"CyIntGetState\000"
 5686      74476574 
 5686      53746174 
 5686      6500
 5687              	.LASF6:
 5688 01a6 6C6F6E67 		.ascii	"long long int\000"
 5688      206C6F6E 
 5688      6720696E 
 5688      7400
 5689              	.LASF0:
 5690 01b4 7369676E 		.ascii	"signed char\000"
 5690      65642063 
 5690      68617200 
 5691              	.LASF21:
 5692 01c0 66726571 		.ascii	"freq\000"
 5692      00
 5693              	.LASF80:
 5694 01c5 43794465 		.ascii	"CyDelayFreq\000"
 5694      6C617946 
 5694      72657100 
 5695              	.LASF25:
 5696 01d1 696E7465 		.ascii	"interruptState\000"
 5696      72727570 
 5696      74537461 
 5696      746500
 5697              	.LASF70:
 5698 01e0 6C664C69 		.ascii	"lfLimit\000"
 5698      6D697400 
 5699              	.LASF86:
 5700 01e8 43795379 		.ascii	"CySysTickGetReload\000"
 5700      73546963 
 5700      6B476574 
 5700      52656C6F 
 5700      616400
 5701              	.LASF35:
 5702 01fb 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 5702      73436C6B 
 5702      496D6F47 
 5702      65745763 
 5702      6F4C6F63 
 5703              	.LASF75:
 5704 0211 77636F4C 		.ascii	"wcoLock\000"
 5704      6F636B00 
 5705              	.LASF4:
 5706 0219 6C6F6E67 		.ascii	"long int\000"
 5706      20696E74 
 5706      00
 5707              	.LASF49:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 169


 5708 0222 4379496E 		.ascii	"CyIntDisable\000"
 5708      74446973 
 5708      61626C65 
 5708      00
 5709              	.LASF74:
 5710 022f 72656756 		.ascii	"regValues\000"
 5710      616C7565 
 5710      7300
 5711              	.LASF9:
 5712 0239 75696E74 		.ascii	"uint8\000"
 5712      3800
 5713              	.LASF109:
 5714 023f 63796465 		.ascii	"cydelayFreqKhz\000"
 5714      6C617946 
 5714      7265714B 
 5714      687A00
 5715              	.LASF29:
 5716 024e 656E6162 		.ascii	"enable\000"
 5716      6C6500
 5717              	.LASF13:
 5718 0255 646F7562 		.ascii	"double\000"
 5718      6C6500
 5719              	.LASF62:
 5720 025c 73686966 		.ascii	"shift\000"
 5720      7400
 5721              	.LASF37:
 5722 0262 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5722      734C7664 
 5722      436C6561 
 5722      72496E74 
 5722      65727275 
 5723              	.LASF11:
 5724 0279 75696E74 		.ascii	"uint32\000"
 5724      333200
 5725              	.LASF45:
 5726 0280 6D61736B 		.ascii	"mask\000"
 5726      00
 5727              	.LASF38:
 5728 0285 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5728      73436C6B 
 5728      47657453 
 5728      7973636C 
 5728      6B536F75 
 5729              	.LASF68:
 5730 029d 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 5730      73436C6B 
 5730      496D6F45 
 5730      6E61626C 
 5730      6557636F 
 5731              	.LASF64:
 5732 02b6 4379496E 		.ascii	"CyIntGetPriority\000"
 5732      74476574 
 5732      5072696F 
 5732      72697479 
 5732      00
 5733              	.LASF111:
 5734 02c7 63796465 		.ascii	"cydelay32kMs\000"
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 170


 5734      6C617933 
 5734      326B4D73 
 5734      00
 5735              	.LASF93:
 5736 02d4 43795379 		.ascii	"CySysTickInit\000"
 5736      73546963 
 5736      6B496E69 
 5736      7400
 5737              	.LASF63:
 5738 02e2 76616C75 		.ascii	"value\000"
 5738      6500
 5739              	.LASF89:
 5740 02e8 636C6F63 		.ascii	"clockSource\000"
 5740      6B536F75 
 5740      72636500 
 5741              	.LASF99:
 5742 02f4 43794765 		.ascii	"CyGetUniqueId\000"
 5742      74556E69 
 5742      71756549 
 5742      6400
 5743              	.LASF91:
 5744 0302 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5744      73546963 
 5744      6B476574 
 5744      436F756E 
 5744      74466C61 
 5745              	.LASF8:
 5746 0318 756E7369 		.ascii	"unsigned int\000"
 5746      676E6564 
 5746      20696E74 
 5746      00
 5747              	.LASF92:
 5748 0325 43795379 		.ascii	"CySysTickClear\000"
 5748      73546963 
 5748      6B436C65 
 5748      617200
 5749              	.LASF5:
 5750 0334 6C6F6E67 		.ascii	"long unsigned int\000"
 5750      20756E73 
 5750      69676E65 
 5750      6420696E 
 5750      7400
 5751              	.LASF36:
 5752 0346 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5752      734C7664 
 5752      47657449 
 5752      6E746572 
 5752      72757074 
 5753              	.LASF23:
 5754 0361 43795379 		.ascii	"CySysClkImoStop\000"
 5754      73436C6B 
 5754      496D6F53 
 5754      746F7000 
 5755              	.LASF115:
 5756 0371 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5756      74657243 
 5756      72697469 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 171


 5756      63616C53 
 5756      65637469 
 5757              	.LASF50:
 5758 0388 4379496E 		.ascii	"CyIntSetPending\000"
 5758      74536574 
 5758      50656E64 
 5758      696E6700 
 5759              	.LASF98:
 5760 0398 43795379 		.ascii	"CySysTickGetCallback\000"
 5760      73546963 
 5760      6B476574 
 5760      43616C6C 
 5760      6261636B 
 5761              	.LASF39:
 5762 03ad 43795379 		.ascii	"CySysGetResetReason\000"
 5762      73476574 
 5762      52657365 
 5762      74526561 
 5762      736F6E00 
 5763              	.LASF3:
 5764 03c1 73686F72 		.ascii	"short unsigned int\000"
 5764      7420756E 
 5764      7369676E 
 5764      65642069 
 5764      6E7400
 5765              	.LASF69:
 5766 03d4 72656754 		.ascii	"regTmp\000"
 5766      6D7000
 5767              	.LASF88:
 5768 03db 43795379 		.ascii	"CySysTickSetClockSource\000"
 5768      73546963 
 5768      6B536574 
 5768      436C6F63 
 5768      6B536F75 
 5769              	.LASF58:
 5770 03f3 4379496E 		.ascii	"CyIntSetVector\000"
 5770      74536574 
 5770      56656374 
 5770      6F7200
 5771              	.LASF47:
 5772 0402 6E756D62 		.ascii	"number\000"
 5772      657200
 5773              	.LASF61:
 5774 0409 7072696F 		.ascii	"priority\000"
 5774      72697479 
 5774      00
 5775              	.LASF72:
 5776 0412 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5776      73436C6B 
 5776      57726974 
 5776      65496D6F 
 5776      46726571 
 5777              	.LASF103:
 5778 0427 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5778      73536574 
 5778      466C6173 
 5778      68416363 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 172


 5778      65737341 
 5779              	.LASF53:
 5780 0446 4379496E 		.ascii	"CyIntSetSysVector\000"
 5780      74536574 
 5780      53797356 
 5780      6563746F 
 5780      7200
 5781              	.LASF22:
 5782 0458 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 5782      73436C6B 
 5782      496D6F44 
 5782      69736162 
 5782      6C655763 
 5783              	.LASF16:
 5784 0472 72656733 		.ascii	"reg32\000"
 5784      3200
 5785              	.LASF94:
 5786 0478 43795379 		.ascii	"CySysTickStart\000"
 5786      73546963 
 5786      6B537461 
 5786      727400
 5787              	.LASF41:
 5788 0487 72657475 		.ascii	"returnStatus\000"
 5788      726E5374 
 5788      61747573 
 5788      00
 5789              	.LASF102:
 5790 0494 736F7572 		.ascii	"source\000"
 5790      636500
 5791              	.LASF19:
 5792 049b 73697A65 		.ascii	"sizetype\000"
 5792      74797065 
 5792      00
 5793              	.LASF112:
 5794 04a4 43795379 		.ascii	"CySysTickInitVar\000"
 5794      73546963 
 5794      6B496E69 
 5794      74566172 
 5794      00
 5795              	.LASF105:
 5796 04b5 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5796      73536574 
 5796      50657269 
 5796      70686572 
 5796      616C4163 
 5797              	.LASF51:
 5798 04d9 4379496E 		.ascii	"CyIntClearPending\000"
 5798      74436C65 
 5798      61725065 
 5798      6E64696E 
 5798      6700
 5799              	.LASF18:
 5800 04eb 6C6F6E67 		.ascii	"long double\000"
 5800      20646F75 
 5800      626C6500 
 5801              	.LASF54:
 5802 04f7 61646472 		.ascii	"address\000"
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 173


 5802      65737300 
 5803              	.LASF30:
 5804 04ff 73797363 		.ascii	"sysclkSource\000"
 5804      6C6B536F 
 5804      75726365 
 5804      00
 5805              	.LASF96:
 5806 050c 66756E63 		.ascii	"function\000"
 5806      74696F6E 
 5806      00
 5807              	.LASF113:
 5808 0515 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5808      6F467265 
 5808      714D687A 
 5808      32526567 
 5808      00
 5809              	.LASF87:
 5810 0526 43795379 		.ascii	"CySysTickGetValue\000"
 5810      73546963 
 5810      6B476574 
 5810      56616C75 
 5810      6500
 5811              	.LASF108:
 5812 0538 63796465 		.ascii	"cydelayFreqHz\000"
 5812      6C617946 
 5812      72657148 
 5812      7A00
 5813              	.LASF60:
 5814 0546 4379496E 		.ascii	"CyIntSetPriority\000"
 5814      74536574 
 5814      5072696F 
 5814      72697479 
 5814      00
 5815              	.LASF12:
 5816 0557 666C6F61 		.ascii	"float\000"
 5816      7400
 5817              	.LASF116:
 5818 055d 43794578 		.ascii	"CyExitCriticalSection\000"
 5818      69744372 
 5818      69746963 
 5818      616C5365 
 5818      6374696F 
 5819              	.LASF78:
 5820 0573 43795379 		.ascii	"CySysLvdEnable\000"
 5820      734C7664 
 5820      456E6162 
 5820      6C6500
 5821              	.LASF20:
 5822 0582 63795379 		.ascii	"cySysTickCallback\000"
 5822      73546963 
 5822      6B43616C 
 5822      6C626163 
 5822      6B00
 5823              	.LASF59:
 5824 0594 4379496E 		.ascii	"CyIntGetVector\000"
 5824      74476574 
 5824      56656374 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 174


 5824      6F7200
 5825              	.LASF67:
 5826 05a3 6D696C6C 		.ascii	"milliseconds\000"
 5826      69736563 
 5826      6F6E6473 
 5826      00
 5827              	.LASF117:
 5828 05b0 43794465 		.ascii	"CyDelayCycles\000"
 5828      6C617943 
 5828      79636C65 
 5828      7300
 5829              	.LASF15:
 5830 05be 72656738 		.ascii	"reg8\000"
 5830      00
 5831              	.LASF79:
 5832 05c3 74687265 		.ascii	"threshold\000"
 5832      73686F6C 
 5832      6400
 5833              	.LASF52:
 5834 05cd 43794861 		.ascii	"CyHalt\000"
 5834      6C7400
 5835              	.LASF101:
 5836 05d4 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5836      73536574 
 5836      52616D41 
 5836      63636573 
 5836      73417262 
 5837              	.LASF1:
 5838 05f1 756E7369 		.ascii	"unsigned char\000"
 5838      676E6564 
 5838      20636861 
 5838      7200
 5839              	.LASF2:
 5840 05ff 73686F72 		.ascii	"short int\000"
 5840      7420696E 
 5840      7400
 5841              	.LASF46:
 5842 0609 4379496E 		.ascii	"CyIntEnable\000"
 5842      74456E61 
 5842      626C6500 
 5843              	.LASF57:
 5844 0615 4379496E 		.ascii	"CyIntGetSysVector\000"
 5844      74476574 
 5844      53797356 
 5844      6563746F 
 5844      7200
 5845              	.LASF28:
 5846 0627 636C6B53 		.ascii	"clkSelect\000"
 5846      656C6563 
 5846      7400
 5847              	.LASF76:
 5848 0631 43794465 		.ascii	"CyDelayUs\000"
 5848      6C617955 
 5848      7300
 5849              	.LASF40:
 5850 063b 72656173 		.ascii	"reason\000"
 5850      6F6E00
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 175


 5851              	.LASF14:
 5852 0642 63686172 		.ascii	"char\000"
 5852      00
 5853              	.LASF17:
 5854 0647 63796973 		.ascii	"cyisraddress\000"
 5854      72616464 
 5854      72657373 
 5854      00
 5855              	.LASF83:
 5856 0654 43795379 		.ascii	"CySysTickEnable\000"
 5856      73546963 
 5856      6B456E61 
 5856      626C6500 
 5857              	.LASF31:
 5858 0664 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5858      73436C6B 
 5858      57726974 
 5858      65537973 
 5858      636C6B44 
 5859              	.LASF95:
 5860 067b 43795379 		.ascii	"CySysTickSetCallback\000"
 5860      73546963 
 5860      6B536574 
 5860      43616C6C 
 5860      6261636B 
 5861              	.LASF107:
 5862 0690 43795379 		.ascii	"CySysTickCallbacks\000"
 5862      73546963 
 5862      6B43616C 
 5862      6C626163 
 5862      6B7300
 5863              	.LASF100:
 5864 06a3 756E6971 		.ascii	"uniqueId\000"
 5864      75654964 
 5864      00
 5865              	.LASF71:
 5866 06ac 666C6173 		.ascii	"flashCtlReg\000"
 5866      6843746C 
 5866      52656700 
 5867              	.LASF66:
 5868 06b8 43794465 		.ascii	"CyDelay\000"
 5868      6C617900 
 5869              	.LASF90:
 5870 06c0 43795379 		.ascii	"CySysTickGetClockSource\000"
 5870      73546963 
 5870      6B476574 
 5870      436C6F63 
 5870      6B536F75 
 5871              	.LASF84:
 5872 06d8 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5872      73546963 
 5872      6B446973 
 5872      61626C65 
 5872      496E7465 
 5873              	.LASF34:
 5874 06f2 43795379 		.ascii	"CySysLvdDisable\000"
 5874      734C7664 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 176


 5874      44697361 
 5874      626C6500 
 5875              	.LASF55:
 5876 0702 6F6C6449 		.ascii	"oldIsr\000"
 5876      737200
 5877              	.LASF110:
 5878 0709 63796465 		.ascii	"cydelayFreqMhz\000"
 5878      6C617946 
 5878      7265714D 
 5878      687A00
 5879              	.LASF118:
 5880 0718 43795379 		.ascii	"CySysClkWcoEnabled\000"
 5880      73436C6B 
 5880      57636F45 
 5880      6E61626C 
 5880      656400
 5881              	.LASF104:
 5882 072b 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5882      73536574 
 5882      446D6163 
 5882      41636365 
 5882      73734172 
 5883              	.LASF81:
 5884 0749 43795379 		.ascii	"CySysTickStop\000"
 5884      73546963 
 5884      6B53746F 
 5884      7000
 5885              	.LASF32:
 5886 0757 64697669 		.ascii	"divider\000"
 5886      64657200 
 5887              	.LASF73:
 5888 075f 70617261 		.ascii	"parameters\000"
 5888      6D657465 
 5888      727300
 5889              	.LASF33:
 5890 076a 43795379 		.ascii	"CySysClkImoStart\000"
 5890      73436C6B 
 5890      496D6F53 
 5890      74617274 
 5890      00
 5891              	.LASF119:
 5892 077b 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 5892      73466C61 
 5892      73685365 
 5892      74576169 
 5892      74437963 
 5893              	.LASF121:
 5894 0793 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5894      72617465 
 5894      645F536F 
 5894      75726365 
 5894      5C50536F 
 5895              	.LASF77:
 5896 07b2 6D696372 		.ascii	"microseconds\000"
 5896      6F736563 
 5896      6F6E6473 
 5896      00
ARM GAS  C:\Users\Erik\AppData\Local\Temp\cc5W158U.s 			page 177


 5897              	.LASF26:
 5898 07bf 746D7052 		.ascii	"tmpReg\000"
 5898      656700
 5899              	.LASF85:
 5900 07c6 43795379 		.ascii	"CySysTickSetReload\000"
 5900      73546963 
 5900      6B536574 
 5900      52656C6F 
 5900      616400
 5901              	.LASF123:
 5902 07d9 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5902      73546963 
 5902      6B536572 
 5902      76696365 
 5902      43616C6C 
 5903              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
