ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsCSDPostScan,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsCSDPostScan, %function
  24              	CapSense_SsCSDPostScan:
  25              	.LFB3:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_INT.c"
   1:Generated_Source\PSoC4/CapSense_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_INT.c **** * \file CapSense_INT.c
   3:Generated_Source\PSoC4/CapSense_INT.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_INT.c **** *
   5:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_INT.c **** *   This file contains the source code for implementation of the Component's
   7:Generated_Source\PSoC4/CapSense_INT.c **** *   Interrupt Service Routine (ISR).
   8:Generated_Source\PSoC4/CapSense_INT.c **** *
   9:Generated_Source\PSoC4/CapSense_INT.c **** * \see CapSense v7.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_INT.c **** *
  11:Generated_Source\PSoC4/CapSense_INT.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_INT.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_INT.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_INT.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_INT.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_INT.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_INT.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_INT.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_INT.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_INT.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_INT.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_INT.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_INT.c **** *
  26:Generated_Source\PSoC4/CapSense_INT.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_INT.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_INT.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_INT.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 2


  32:Generated_Source\PSoC4/CapSense_INT.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_INT.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_INT.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_INT.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_INT.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_INT.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_INT.c **** #include "cytypes.h"
  40:Generated_Source\PSoC4/CapSense_INT.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_INT.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  45:Generated_Source\PSoC4/CapSense_INT.c ****     #include "CapSense_SensingCSD_LL.h"
  46:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
  47:Generated_Source\PSoC4/CapSense_INT.c **** #include "cyapicallbacks.h"
  48:Generated_Source\PSoC4/CapSense_INT.c **** 
  49:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/CapSense_INT.c **** * Static Function Prototypes
  51:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
  52:Generated_Source\PSoC4/CapSense_INT.c **** /**
  53:Generated_Source\PSoC4/CapSense_INT.c **** * \cond SECTION_C_INTERNAL
  54:Generated_Source\PSoC4/CapSense_INT.c **** * \addtogroup group_c_internal
  55:Generated_Source\PSoC4/CapSense_INT.c **** * \{
  56:Generated_Source\PSoC4/CapSense_INT.c **** */
  57:Generated_Source\PSoC4/CapSense_INT.c **** 
  58:Generated_Source\PSoC4/CapSense_INT.c **** #if (((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) && \
  59:Generated_Source\PSoC4/CapSense_INT.c ****      (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN))
  60:Generated_Source\PSoC4/CapSense_INT.c ****     static void CapSense_SsNextFrequencyScan(void);
  61:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) && \
  62:Generated_Source\PSoC4/CapSense_INT.c ****             (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)) */
  63:Generated_Source\PSoC4/CapSense_INT.c **** 
  64:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
  65:Generated_Source\PSoC4/CapSense_INT.c ****     static void CapSense_SsCSDPostScan(void);
  66:Generated_Source\PSoC4/CapSense_INT.c ****     static void CapSense_SsCSDInitNextScan(void);
  67:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) */
  68:Generated_Source\PSoC4/CapSense_INT.c **** /** \}
  69:Generated_Source\PSoC4/CapSense_INT.c **** * \endcond */
  70:Generated_Source\PSoC4/CapSense_INT.c **** 
  71:Generated_Source\PSoC4/CapSense_INT.c **** 
  72:Generated_Source\PSoC4/CapSense_INT.c **** /**
  73:Generated_Source\PSoC4/CapSense_INT.c **** * \cond SECTION_C_INTERRUPT
  74:Generated_Source\PSoC4/CapSense_INT.c **** * \addtogroup group_c_interrupt
  75:Generated_Source\PSoC4/CapSense_INT.c **** * \{
  76:Generated_Source\PSoC4/CapSense_INT.c **** */
  77:Generated_Source\PSoC4/CapSense_INT.c **** 
  78:Generated_Source\PSoC4/CapSense_INT.c **** 
  79:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
  80:Generated_Source\PSoC4/CapSense_INT.c **** 
  81:Generated_Source\PSoC4/CapSense_INT.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  82:Generated_Source\PSoC4/CapSense_INT.c ****     /* Fourth-generation HW block part */
  83:Generated_Source\PSoC4/CapSense_INT.c **** 
  84:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
  85:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostSingleScan
  86:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
  87:Generated_Source\PSoC4/CapSense_INT.c ****     *
  88:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 3


  89:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the single-sensor scanning implementation.
  90:Generated_Source\PSoC4/CapSense_INT.c ****     *
  91:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
  92:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
  93:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_CSDScanExt() function.
  94:Generated_Source\PSoC4/CapSense_INT.c ****     *
  95:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Third-generation HW block:
  96:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
  97:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
  98:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
  99:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 100:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 101:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 102:Generated_Source\PSoC4/CapSense_INT.c ****     *
 103:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Fourth-generation HW block:
 104:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Check if the raw data is not noisy.
 105:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 106:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 107:Generated_Source\PSoC4/CapSense_INT.c ****     *      multi-frequency is enabled.
 108:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 109:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 110:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 111:Generated_Source\PSoC4/CapSense_INT.c ****     *
 112:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next frequency
 113:Generated_Source\PSoC4/CapSense_INT.c ****     *  channels when multi-frequency scanning is enabled.
 114:Generated_Source\PSoC4/CapSense_INT.c ****     *
 115:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user code
 116:Generated_Source\PSoC4/CapSense_INT.c ****     *  from macros specified in Component's generated code. Refer to the
 117:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 118:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 119:Generated_Source\PSoC4/CapSense_INT.c ****     *
 120:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 121:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostSingleScan)
 122:Generated_Source\PSoC4/CapSense_INT.c ****     {
 123:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 124:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 125:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 126:Generated_Source\PSoC4/CapSense_INT.c **** 
 127:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 128:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 129:Generated_Source\PSoC4/CapSense_INT.c **** 
 130:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 131:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 132:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 133:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 134:Generated_Source\PSoC4/CapSense_INT.c ****                                                         (0u < CapSense_badConversionsNum))
 135:Generated_Source\PSoC4/CapSense_INT.c ****             {
 136:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 137:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 138:Generated_Source\PSoC4/CapSense_INT.c **** 
 139:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 140:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 141:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 142:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 143:Generated_Source\PSoC4/CapSense_INT.c ****             }
 144:Generated_Source\PSoC4/CapSense_INT.c ****             else
 145:Generated_Source\PSoC4/CapSense_INT.c ****             {
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 4


 146:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 147:Generated_Source\PSoC4/CapSense_INT.c **** 
 148:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 149:Generated_Source\PSoC4/CapSense_INT.c **** 
 150:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 151:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 152:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 153:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Scan the next channel */
 154:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 155:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 156:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 157:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 158:Generated_Source\PSoC4/CapSense_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 159:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 160:Generated_Source\PSoC4/CapSense_INT.c **** 
 161:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 162:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 163:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 164:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 165:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 166:Generated_Source\PSoC4/CapSense_INT.c **** 
 167:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 168:Generated_Source\PSoC4/CapSense_INT.c ****                         /* Disable Fourth-generation HW block */
 169:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 170:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 171:Generated_Source\PSoC4/CapSense_INT.c **** 
 172:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Update Scan Counter */
 173:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.scanCounter++;
 174:Generated_Source\PSoC4/CapSense_INT.c **** 
 175:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 176:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 177:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 178:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 179:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 180:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 181:Generated_Source\PSoC4/CapSense_INT.c ****                         /* Disable Fourth-generation HW block */
 182:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 183:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 184:Generated_Source\PSoC4/CapSense_INT.c **** 
 185:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Update Scan Counter */
 186:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.scanCounter++;
 187:Generated_Source\PSoC4/CapSense_INT.c **** 
 188:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 189:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 190:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 191:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 192:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 193:Generated_Source\PSoC4/CapSense_INT.c ****         }
 194:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 195:Generated_Source\PSoC4/CapSense_INT.c **** 
 196:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 197:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 198:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 199:Generated_Source\PSoC4/CapSense_INT.c ****     }
 200:Generated_Source\PSoC4/CapSense_INT.c **** 
 201:Generated_Source\PSoC4/CapSense_INT.c **** 
 202:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 5


 203:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScan
 204:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 205:Generated_Source\PSoC4/CapSense_INT.c ****     *
 206:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 207:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 208:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation.
 209:Generated_Source\PSoC4/CapSense_INT.c ****     *
 210:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 211:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 212:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() or CapSense_ScanAllWidgets() APIs.
 213:Generated_Source\PSoC4/CapSense_INT.c ****     *
 214:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 215:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 216:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 217:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 218:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 219:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 220:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
 221:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 222:Generated_Source\PSoC4/CapSense_INT.c ****     *
 223:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 224:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 225:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 226:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 227:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 228:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 229:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 230:Generated_Source\PSoC4/CapSense_INT.c ****     *
 231:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 232:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 233:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 234:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 235:Generated_Source\PSoC4/CapSense_INT.c ****     *
 236:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 237:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScan)
 238:Generated_Source\PSoC4/CapSense_INT.c ****     {
 239:Generated_Source\PSoC4/CapSense_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address */
 240:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 241:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 242:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 243:Generated_Source\PSoC4/CapSense_INT.c **** 
 244:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 245:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 246:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 247:Generated_Source\PSoC4/CapSense_INT.c **** 
 248:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 249:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 250:Generated_Source\PSoC4/CapSense_INT.c **** 
 251:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 252:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 253:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 254:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 255:Generated_Source\PSoC4/CapSense_INT.c ****                                                       (0u < CapSense_badConversionsNum))
 256:Generated_Source\PSoC4/CapSense_INT.c ****             {
 257:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 258:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 259:Generated_Source\PSoC4/CapSense_INT.c **** 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 6


 260:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 261:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 262:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 263:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 264:Generated_Source\PSoC4/CapSense_INT.c ****             }
 265:Generated_Source\PSoC4/CapSense_INT.c ****             else
 266:Generated_Source\PSoC4/CapSense_INT.c ****             {
 267:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 268:Generated_Source\PSoC4/CapSense_INT.c **** 
 269:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 270:Generated_Source\PSoC4/CapSense_INT.c **** 
 271:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor when all frequency channels are scanned */
 272:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 273:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 274:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 275:Generated_Source\PSoC4/CapSense_INT.c ****             {
 276:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Disable sensor */
 277:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_CSDDisconnectSns(curSnsIOPtr);
 278:Generated_Source\PSoC4/CapSense_INT.c ****             }
 279:Generated_Source\PSoC4/CapSense_INT.c **** 
 280:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 281:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 282:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 283:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next channel */
 284:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 285:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 286:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 287:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 288:Generated_Source\PSoC4/CapSense_INT.c ****                      /* All channels are scanned. Set IMO to zero channel */
 289:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 290:Generated_Source\PSoC4/CapSense_INT.c **** 
 291:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 292:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 293:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 294:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 295:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 296:Generated_Source\PSoC4/CapSense_INT.c **** 
 297:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next sensor */
 298:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDInitNextScan();
 299:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 300:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 301:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Scan the next sensor */
 302:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 303:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 304:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 305:Generated_Source\PSoC4/CapSense_INT.c ****             }
 306:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 307:Generated_Source\PSoC4/CapSense_INT.c **** 
 308:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 309:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 310:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 311:Generated_Source\PSoC4/CapSense_INT.c ****     }
 312:Generated_Source\PSoC4/CapSense_INT.c **** 
 313:Generated_Source\PSoC4/CapSense_INT.c **** 
 314:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 315:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 316:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScanGanged
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 7


 317:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 318:Generated_Source\PSoC4/CapSense_INT.c ****     *
 319:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 320:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 321:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation for ganged sensors.
 322:Generated_Source\PSoC4/CapSense_INT.c ****     *
 323:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 324:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 325:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() API for a ganged sensor or the
 326:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() API in the project with ganged sensors.
 327:Generated_Source\PSoC4/CapSense_INT.c ****     *
 328:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 329:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 330:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 331:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 332:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 333:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 334:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
 335:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 336:Generated_Source\PSoC4/CapSense_INT.c ****     *
 337:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 338:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 339:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 340:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 341:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 342:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 343:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 344:Generated_Source\PSoC4/CapSense_INT.c ****     *
 345:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 346:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 347:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 348:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 349:Generated_Source\PSoC4/CapSense_INT.c ****     *
 350:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 351:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScanGanged)
 352:Generated_Source\PSoC4/CapSense_INT.c ****     {
 353:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 354:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 355:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 356:Generated_Source\PSoC4/CapSense_INT.c **** 
 357:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 358:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 359:Generated_Source\PSoC4/CapSense_INT.c **** 
 360:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 361:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 362:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 363:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 364:Generated_Source\PSoC4/CapSense_INT.c ****                                                       (0u < CapSense_badConversionsNum))
 365:Generated_Source\PSoC4/CapSense_INT.c ****             {
 366:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 367:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 368:Generated_Source\PSoC4/CapSense_INT.c **** 
 369:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 370:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 371:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 372:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 373:Generated_Source\PSoC4/CapSense_INT.c ****             }
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 8


 374:Generated_Source\PSoC4/CapSense_INT.c ****             else
 375:Generated_Source\PSoC4/CapSense_INT.c ****             {
 376:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 377:Generated_Source\PSoC4/CapSense_INT.c **** 
 378:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 379:Generated_Source\PSoC4/CapSense_INT.c **** 
 380:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 381:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 382:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 383:Generated_Source\PSoC4/CapSense_INT.c ****             {
 384:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_senso
 385:Generated_Source\PSoC4/CapSense_INT.c ****             }
 386:Generated_Source\PSoC4/CapSense_INT.c **** 
 387:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 388:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 389:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 390:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next channel */
 391:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 392:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 393:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 394:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 395:Generated_Source\PSoC4/CapSense_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 396:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 397:Generated_Source\PSoC4/CapSense_INT.c **** 
 398:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 399:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 400:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 401:Generated_Source\PSoC4/CapSense_INT.c ****                         CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 402:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 403:Generated_Source\PSoC4/CapSense_INT.c **** 
 404:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next sensor */
 405:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDInitNextScan();
 406:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 407:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 408:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 409:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 410:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 411:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 412:Generated_Source\PSoC4/CapSense_INT.c ****             }
 413:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 414:Generated_Source\PSoC4/CapSense_INT.c **** 
 415:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 416:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 417:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 418:Generated_Source\PSoC4/CapSense_INT.c ****     }
 419:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 420:Generated_Source\PSoC4/CapSense_INT.c **** 
 421:Generated_Source\PSoC4/CapSense_INT.c **** #else
 422:Generated_Source\PSoC4/CapSense_INT.c **** 
 423:Generated_Source\PSoC4/CapSense_INT.c ****     /* Third-generation HW block part */
 424:Generated_Source\PSoC4/CapSense_INT.c **** 
 425:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 426:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostSingleScan
 427:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 428:Generated_Source\PSoC4/CapSense_INT.c ****     *
 429:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 430:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the single-sensor scanning implementation.
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 9


 431:Generated_Source\PSoC4/CapSense_INT.c ****     *
 432:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 433:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 434:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_CSDScanExt() function.
 435:Generated_Source\PSoC4/CapSense_INT.c ****     *
 436:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Third-generation HW block:
 437:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 438:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 439:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 440:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 441:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 442:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 443:Generated_Source\PSoC4/CapSense_INT.c ****     *
 444:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for Fourth-generation HW block:
 445:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Check if the raw data is not noisy.
 446:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 447:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 448:Generated_Source\PSoC4/CapSense_INT.c ****     *      multi-frequency is enabled.
 449:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter.
 450:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag.
 451:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 452:Generated_Source\PSoC4/CapSense_INT.c ****     *
 453:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next frequency
 454:Generated_Source\PSoC4/CapSense_INT.c ****     *  channels when multi-frequency scanning is enabled.
 455:Generated_Source\PSoC4/CapSense_INT.c ****     *
 456:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user code
 457:Generated_Source\PSoC4/CapSense_INT.c ****     *  from macros specified in Component's generated code. Refer to the
 458:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 459:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 460:Generated_Source\PSoC4/CapSense_INT.c ****     *
 461:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 462:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostSingleScan)
 463:Generated_Source\PSoC4/CapSense_INT.c ****     {
 464:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 465:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 466:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 467:Generated_Source\PSoC4/CapSense_INT.c **** 
 468:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 469:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 470:Generated_Source\PSoC4/CapSense_INT.c **** 
 471:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read Rawdata */
 472:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 473:Generated_Source\PSoC4/CapSense_INT.c **** 
 474:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 475:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 476:Generated_Source\PSoC4/CapSense_INT.c ****             {
 477:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 478:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CON
 479:Generated_Source\PSoC4/CapSense_INT.c **** 
 480:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 481:Generated_Source\PSoC4/CapSense_INT.c ****             }
 482:Generated_Source\PSoC4/CapSense_INT.c ****             else
 483:Generated_Source\PSoC4/CapSense_INT.c ****             {
 484:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 485:Generated_Source\PSoC4/CapSense_INT.c **** 
 486:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 487:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 10


 488:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 489:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 490:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 491:Generated_Source\PSoC4/CapSense_INT.c **** 
 492:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 493:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable Third-generation HW block. Connect Vref Buffer to AMUX bus */
 494:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 495:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 496:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 497:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 498:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 499:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif
 500:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 501:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 502:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE
 503:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif
 504:Generated_Source\PSoC4/CapSense_INT.c **** 
 505:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Update Scan Counter */
 506:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.scanCounter++;
 507:Generated_Source\PSoC4/CapSense_INT.c **** 
 508:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 509:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 510:Generated_Source\PSoC4/CapSense_INT.c ****             }
 511:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 512:Generated_Source\PSoC4/CapSense_INT.c ****             {
 513:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 514:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable Third-generation HW block. Connect Vref Buffer to AMUX bus */
 515:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 516:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 517:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 518:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 519:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 520:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif
 521:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 522:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 523:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE
 524:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif
 525:Generated_Source\PSoC4/CapSense_INT.c **** 
 526:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Update Scan Counter */
 527:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.scanCounter++;
 528:Generated_Source\PSoC4/CapSense_INT.c **** 
 529:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 530:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 531:Generated_Source\PSoC4/CapSense_INT.c ****             }
 532:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 533:Generated_Source\PSoC4/CapSense_INT.c **** 
 534:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 535:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 536:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 537:Generated_Source\PSoC4/CapSense_INT.c ****     }
 538:Generated_Source\PSoC4/CapSense_INT.c **** 
 539:Generated_Source\PSoC4/CapSense_INT.c **** 
 540:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 541:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScan
 542:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 543:Generated_Source\PSoC4/CapSense_INT.c ****     *
 544:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 11


 545:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 546:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation.
 547:Generated_Source\PSoC4/CapSense_INT.c ****     *
 548:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 549:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 550:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() or CapSense_ScanAllWidgets() APIs.
 551:Generated_Source\PSoC4/CapSense_INT.c ****     *
 552:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 553:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 554:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 555:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 556:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 557:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 558:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
 559:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 560:Generated_Source\PSoC4/CapSense_INT.c ****     *
 561:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 562:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 563:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 564:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 565:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 566:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 567:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 568:Generated_Source\PSoC4/CapSense_INT.c ****     *
 569:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 570:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 571:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 572:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 573:Generated_Source\PSoC4/CapSense_INT.c ****     *
 574:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 575:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScan)
 576:Generated_Source\PSoC4/CapSense_INT.c ****     {
 577:Generated_Source\PSoC4/CapSense_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address        */
 578:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 579:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 580:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 581:Generated_Source\PSoC4/CapSense_INT.c **** 
 582:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 583:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 584:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 585:Generated_Source\PSoC4/CapSense_INT.c **** 
 586:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 587:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 588:Generated_Source\PSoC4/CapSense_INT.c **** 
 589:Generated_Source\PSoC4/CapSense_INT.c ****          /* Read Rawdata */
 590:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 591:Generated_Source\PSoC4/CapSense_INT.c **** 
 592:Generated_Source\PSoC4/CapSense_INT.c ****         /* Connect Vref Buffer to AMUX bus */
 593:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
 594:Generated_Source\PSoC4/CapSense_INT.c **** 
 595:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 596:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor when all frequency channels are scanned */
 597:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 598:Generated_Source\PSoC4/CapSense_INT.c ****             {
 599:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Disable sensor */
 600:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_CSDDisconnectSns(curSnsIOPtr);
 601:Generated_Source\PSoC4/CapSense_INT.c ****             }
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 12


 602:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 603:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor */
 604:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_CSDDisconnectSns(curSnsIOPtr);
 605:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 606:Generated_Source\PSoC4/CapSense_INT.c **** 
 607:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 608:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 609:Generated_Source\PSoC4/CapSense_INT.c ****             {
 610:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next channel */
 611:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 612:Generated_Source\PSoC4/CapSense_INT.c ****             }
 613:Generated_Source\PSoC4/CapSense_INT.c ****             else
 614:Generated_Source\PSoC4/CapSense_INT.c ****             {
 615:Generated_Source\PSoC4/CapSense_INT.c ****                  /* All channels are scanned. Set IMO to zero channel */
 616:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 617:Generated_Source\PSoC4/CapSense_INT.c **** 
 618:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 619:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 620:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 621:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 622:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 623:Generated_Source\PSoC4/CapSense_INT.c **** 
 624:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 625:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 626:Generated_Source\PSoC4/CapSense_INT.c ****             }
 627:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 628:Generated_Source\PSoC4/CapSense_INT.c ****             /* Scan the next sensor */
 629:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDInitNextScan();
 630:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 631:Generated_Source\PSoC4/CapSense_INT.c **** 
 632:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 633:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 634:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 635:Generated_Source\PSoC4/CapSense_INT.c ****     }
 636:Generated_Source\PSoC4/CapSense_INT.c **** 
 637:Generated_Source\PSoC4/CapSense_INT.c **** 
 638:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 639:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 640:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScanGanged
 641:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 642:Generated_Source\PSoC4/CapSense_INT.c ****     *
 643:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 644:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 645:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation for ganged sensors.
 646:Generated_Source\PSoC4/CapSense_INT.c ****     *
 647:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 648:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 649:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() API for a ganged sensor or the
 650:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() API in the project with ganged sensors.
 651:Generated_Source\PSoC4/CapSense_INT.c ****     *
 652:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 653:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt.
 654:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 655:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 656:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 657:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update the Scan Counter.
 658:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag.
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 13


 659:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 660:Generated_Source\PSoC4/CapSense_INT.c ****     *
 661:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 662:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 663:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 664:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 665:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 666:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 667:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 668:Generated_Source\PSoC4/CapSense_INT.c ****     *
 669:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 670:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 671:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 672:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 673:Generated_Source\PSoC4/CapSense_INT.c ****     *
 674:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 675:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScanGanged)
 676:Generated_Source\PSoC4/CapSense_INT.c ****     {
 677:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 678:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 679:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 680:Generated_Source\PSoC4/CapSense_INT.c **** 
 681:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 682:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 683:Generated_Source\PSoC4/CapSense_INT.c **** 
 684:Generated_Source\PSoC4/CapSense_INT.c ****          /* Read Rawdata */
 685:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 686:Generated_Source\PSoC4/CapSense_INT.c **** 
 687:Generated_Source\PSoC4/CapSense_INT.c ****         /* Connect Vref Buffer to AMUX bus */
 688:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
 689:Generated_Source\PSoC4/CapSense_INT.c **** 
 690:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 691:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 692:Generated_Source\PSoC4/CapSense_INT.c ****             {
 693:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_senso
 694:Generated_Source\PSoC4/CapSense_INT.c ****             }
 695:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 696:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorInd
 697:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 698:Generated_Source\PSoC4/CapSense_INT.c **** 
 699:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 700:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 701:Generated_Source\PSoC4/CapSense_INT.c ****             {
 702:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next channel */
 703:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 704:Generated_Source\PSoC4/CapSense_INT.c ****             }
 705:Generated_Source\PSoC4/CapSense_INT.c ****             else
 706:Generated_Source\PSoC4/CapSense_INT.c ****             {
 707:Generated_Source\PSoC4/CapSense_INT.c ****                 /* All channels are scanned. Set IMO to zero channel */
 708:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 709:Generated_Source\PSoC4/CapSense_INT.c **** 
 710:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 711:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 712:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 713:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 714:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 715:Generated_Source\PSoC4/CapSense_INT.c **** 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 14


 716:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 717:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 718:Generated_Source\PSoC4/CapSense_INT.c ****             }
 719:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 720:Generated_Source\PSoC4/CapSense_INT.c ****              /* Scan the next sensor */
 721:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDInitNextScan();
 722:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 723:Generated_Source\PSoC4/CapSense_INT.c **** 
 724:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 725:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 726:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 727:Generated_Source\PSoC4/CapSense_INT.c ****     }
 728:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 729:Generated_Source\PSoC4/CapSense_INT.c **** 
 730:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 731:Generated_Source\PSoC4/CapSense_INT.c **** 
 732:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) */
 733:Generated_Source\PSoC4/CapSense_INT.c **** 
 734:Generated_Source\PSoC4/CapSense_INT.c **** /** \}
 735:Generated_Source\PSoC4/CapSense_INT.c ****  * \endcond */
 736:Generated_Source\PSoC4/CapSense_INT.c **** 
 737:Generated_Source\PSoC4/CapSense_INT.c **** 
 738:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
 739:Generated_Source\PSoC4/CapSense_INT.c **** 
 740:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
 741:Generated_Source\PSoC4/CapSense_INT.c **** * Function Name: CapSense_SsCSDPostScan
 742:Generated_Source\PSoC4/CapSense_INT.c **** ****************************************************************************//**
 743:Generated_Source\PSoC4/CapSense_INT.c **** *
 744:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
 745:Generated_Source\PSoC4/CapSense_INT.c **** *   This function reads rawdata and releases required HW resources after scan.
 746:Generated_Source\PSoC4/CapSense_INT.c **** *
 747:Generated_Source\PSoC4/CapSense_INT.c **** * \details
 748:Generated_Source\PSoC4/CapSense_INT.c **** *   This function performs following tasks after scan:
 749:Generated_Source\PSoC4/CapSense_INT.c **** *   - Reads SlotResult from Raw Counter;
 750:Generated_Source\PSoC4/CapSense_INT.c **** *   - Inits bad Conversions number;
 751:Generated_Source\PSoC4/CapSense_INT.c **** *   - Disconnects Vrefhi from AMUBUF positive input;
 752:Generated_Source\PSoC4/CapSense_INT.c **** *   - Disconnects AMUBUF output from CSDBUSB with sych PHI2+HSCMP;
 753:Generated_Source\PSoC4/CapSense_INT.c **** *   - Opens HCBV and HCBG switches.
 754:Generated_Source\PSoC4/CapSense_INT.c **** *
 755:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
 756:Generated_Source\PSoC4/CapSense_INT.c **** static void CapSense_SsCSDPostScan(void)
 757:Generated_Source\PSoC4/CapSense_INT.c **** {
  27              		.loc 1 757 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 758:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 759:Generated_Source\PSoC4/CapSense_INT.c **** 
 760:Generated_Source\PSoC4/CapSense_INT.c ****         uint32 tmpRawData;
 761:Generated_Source\PSoC4/CapSense_INT.c ****         uint32 tmpMaxCount;
 762:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 763:Generated_Source\PSoC4/CapSense_INT.c ****                                             CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Wd
 764:Generated_Source\PSoC4/CapSense_INT.c **** 
 765:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read SlotResult from Raw Counter */
 766:Generated_Source\PSoC4/CapSense_INT.c ****         tmpRawData = CapSense_RESULT_VAL1_VALUE_MASK & CY_GET_REG32(CapSense_COUNTER_PTR);
 767:Generated_Source\PSoC4/CapSense_INT.c **** 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 15


 768:Generated_Source\PSoC4/CapSense_INT.c ****         tmpMaxCount = ((1uL << ptrWdgt->resolution) - 1uL);
 769:Generated_Source\PSoC4/CapSense_INT.c ****         if(tmpRawData < tmpMaxCount)
 770:Generated_Source\PSoC4/CapSense_INT.c ****         {
 771:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = LO16(tmpRawData);
 772:Generated_Source\PSoC4/CapSense_INT.c ****         }
 773:Generated_Source\PSoC4/CapSense_INT.c ****         else
 774:Generated_Source\PSoC4/CapSense_INT.c ****         {
 775:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = LO16(tmpMaxCount);
 776:Generated_Source\PSoC4/CapSense_INT.c ****         }
 777:Generated_Source\PSoC4/CapSense_INT.c **** 
 778:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 779:Generated_Source\PSoC4/CapSense_INT.c ****             /* Init bad Conversions number */
 780:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_badConversionsNum = CapSense_BAD_CONVERSIONS_NUM;
 781:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 782:Generated_Source\PSoC4/CapSense_INT.c **** 
 783:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 784:Generated_Source\PSoC4/CapSense_INT.c ****             /* Open HCBV and HCBG switches */
 785:Generated_Source\PSoC4/CapSense_INT.c ****             CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR, CapSense_SW_SHIELD_SEL_SW_HCBV_STATIC_OPEN |
 786:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SW_SHIELD_SEL_SW_HCBG_STATIC_
 787:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 788:Generated_Source\PSoC4/CapSense_INT.c **** 
 789:Generated_Source\PSoC4/CapSense_INT.c ****     #else
 790:Generated_Source\PSoC4/CapSense_INT.c **** 
 791:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read SlotResult from Raw Counter */
 792:Generated_Source\PSoC4/CapSense_INT.c ****        CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = (uint16)CY_GET_REG32(CapSense_COUNTER_P
  32              		.loc 1 792 0
  33 0000 044B     		ldr	r3, .L2
  34 0002 1A68     		ldr	r2, [r3]
  35 0004 044B     		ldr	r3, .L2+4
  36 0006 1B78     		ldrb	r3, [r3]
  37 0008 0449     		ldr	r1, .L2+8
  38 000a 0968     		ldr	r1, [r1]
  39 000c 5B00     		lsls	r3, r3, #1
  40 000e D152     		strh	r1, [r2, r3]
 793:Generated_Source\PSoC4/CapSense_INT.c **** 
 794:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 795:Generated_Source\PSoC4/CapSense_INT.c **** }
  41              		.loc 1 795 0
  42              		@ sp needed
  43 0010 7047     		bx	lr
  44              	.L3:
  45 0012 C046     		.align	2
  46              	.L2:
  47 0014 00000000 		.word	CapSense_curRamSnsPtr
  48 0018 00000000 		.word	CapSense_scanFreqIndex
  49 001c 0C002840 		.word	1076363276
  50              		.cfi_endproc
  51              	.LFE3:
  52              		.size	CapSense_SsCSDPostScan, .-CapSense_SsCSDPostScan
  53              		.section	.text.CapSense_SsCSDInitNextScan,"ax",%progbits
  54              		.align	2
  55              		.code	16
  56              		.thumb_func
  57              		.type	CapSense_SsCSDInitNextScan, %function
  58              	CapSense_SsCSDInitNextScan:
  59              	.LFB4:
 796:Generated_Source\PSoC4/CapSense_INT.c **** 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 16


 797:Generated_Source\PSoC4/CapSense_INT.c **** 
 798:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
 799:Generated_Source\PSoC4/CapSense_INT.c **** * Function Name: CapSense_SsCSDInitNextScan
 800:Generated_Source\PSoC4/CapSense_INT.c **** ****************************************************************************//**
 801:Generated_Source\PSoC4/CapSense_INT.c **** *
 802:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
 803:Generated_Source\PSoC4/CapSense_INT.c **** *   This function initializes the next sensor scan.
 804:Generated_Source\PSoC4/CapSense_INT.c **** *
 805:Generated_Source\PSoC4/CapSense_INT.c **** * \details
 806:Generated_Source\PSoC4/CapSense_INT.c **** *   The function increments the sensor index, updates sense clock for matrix
 807:Generated_Source\PSoC4/CapSense_INT.c **** *   or touchpad widgets only, sets up Compensation IDAC, enables the sensor and
 808:Generated_Source\PSoC4/CapSense_INT.c **** *   scans it. When all the sensors are scanned it continues to set up the next widget
 809:Generated_Source\PSoC4/CapSense_INT.c **** *   until all the widgets are scanned. The CSD block is disabled when all the widgets are
 810:Generated_Source\PSoC4/CapSense_INT.c **** *   scanned.
 811:Generated_Source\PSoC4/CapSense_INT.c **** *
 812:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
 813:Generated_Source\PSoC4/CapSense_INT.c **** static void CapSense_SsCSDInitNextScan(void)
 814:Generated_Source\PSoC4/CapSense_INT.c **** {
  60              		.loc 1 814 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64 0000 70B5     		push	{r4, r5, r6, lr}
  65              		.cfi_def_cfa_offset 16
  66              		.cfi_offset 4, -16
  67              		.cfi_offset 5, -12
  68              		.cfi_offset 6, -8
  69              		.cfi_offset 14, -4
 815:Generated_Source\PSoC4/CapSense_INT.c ****     /* Declare and initialize ptr to widget and sensor structures to appropriate address */
 816:Generated_Source\PSoC4/CapSense_INT.c ****     #if (((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 817:Generated_Source\PSoC4/CapSense_INT.c ****           (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)) || \
 818:Generated_Source\PSoC4/CapSense_INT.c ****           (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 819:Generated_Source\PSoC4/CapSense_INT.c ****           (CapSense_ENABLE == CapSense_CSDV2) && \
 820:Generated_Source\PSoC4/CapSense_INT.c ****           (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))))
 821:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 822:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
  70              		.loc 1 822 0
  71 0002 224B     		ldr	r3, .L8
  72 0004 1A78     		ldrb	r2, [r3]
 821:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
  73              		.loc 1 821 0
  74 0006 2249     		ldr	r1, .L8+4
  75 0008 5201     		lsls	r2, r2, #5
  76 000a 8A18     		adds	r2, r1, r2
  77 000c 5068     		ldr	r0, [r2, #4]
  78              	.LVL0:
 823:Generated_Source\PSoC4/CapSense_INT.c ****     #endif
 824:Generated_Source\PSoC4/CapSense_INT.c **** 
 825:Generated_Source\PSoC4/CapSense_INT.c ****     /* Check if all the sensors are scanned in widget */
 826:Generated_Source\PSoC4/CapSense_INT.c ****     if (((uint8)CapSense_dsFlash.wdgtArray[(CapSense_widgetIndex)].totalNumSns - 1u) > CapSense_sen
  79              		.loc 1 826 0
  80 000e 1B78     		ldrb	r3, [r3]
  81 0010 5B01     		lsls	r3, r3, #5
  82 0012 CB18     		adds	r3, r1, r3
  83 0014 1A7E     		ldrb	r2, [r3, #24]
  84 0016 013A     		subs	r2, r2, #1
  85 0018 1E4B     		ldr	r3, .L8+8
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 17


  86 001a 1B78     		ldrb	r3, [r3]
  87 001c DBB2     		uxtb	r3, r3
  88 001e 9A42     		cmp	r2, r3
  89 0020 1CD9     		bls	.L5
 827:Generated_Source\PSoC4/CapSense_INT.c ****     {
 828:Generated_Source\PSoC4/CapSense_INT.c ****         /* Increment sensor index to configure next sensor in widget */
 829:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_sensorIndex++;
  90              		.loc 1 829 0
  91 0022 1C4C     		ldr	r4, .L8+8
  92 0024 2378     		ldrb	r3, [r4]
  93 0026 0133     		adds	r3, r3, #1
  94 0028 DBB2     		uxtb	r3, r3
  95 002a 2370     		strb	r3, [r4]
 830:Generated_Source\PSoC4/CapSense_INT.c **** 
 831:Generated_Source\PSoC4/CapSense_INT.c ****         /* Update global pointer to CapSense_RAM_SNS_STRUCT to current sensor  */
 832:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
  96              		.loc 1 832 0
  97 002c 174D     		ldr	r5, .L8
  98 002e 2B78     		ldrb	r3, [r5]
 833:Generated_Source\PSoC4/CapSense_INT.c ****                                                   CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].
  99              		.loc 1 833 0
 100 0030 5B01     		lsls	r3, r3, #5
 101 0032 CB18     		adds	r3, r1, r3
 102 0034 9968     		ldr	r1, [r3, #8]
 834:Generated_Source\PSoC4/CapSense_INT.c ****                                                   + CapSense_sensorIndex;
 103              		.loc 1 834 0
 104 0036 2378     		ldrb	r3, [r4]
 105 0038 DBB2     		uxtb	r3, r3
 106 003a 9A00     		lsls	r2, r3, #2
 107 003c D318     		adds	r3, r2, r3
 108 003e 5A00     		lsls	r2, r3, #1
 109 0040 8A18     		adds	r2, r1, r2
 832:Generated_Source\PSoC4/CapSense_INT.c ****                                                   CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].
 110              		.loc 1 832 0
 111 0042 154B     		ldr	r3, .L8+12
 112 0044 1A60     		str	r2, [r3]
 835:Generated_Source\PSoC4/CapSense_INT.c **** 
 836:Generated_Source\PSoC4/CapSense_INT.c ****         /* Configure clock divider to row or column */
 837:Generated_Source\PSoC4/CapSense_INT.c ****         #if ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 838:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))
 839:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDConfigClock();
 840:Generated_Source\PSoC4/CapSense_INT.c **** 
 841:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
 842:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Set up scanning resolution */
 843:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDCalculateScanDuration(ptrWdgt);
 844:Generated_Source\PSoC4/CapSense_INT.c ****             #endif
 845:Generated_Source\PSoC4/CapSense_INT.c ****         #endif
 846:Generated_Source\PSoC4/CapSense_INT.c **** 
 847:Generated_Source\PSoC4/CapSense_INT.c ****         /* Setup Compensation IDAC for next sensor in widget */
 848:Generated_Source\PSoC4/CapSense_INT.c ****         #if ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 849:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN))
 850:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDSetUpIdacs(ptrWdgt);
 113              		.loc 1 850 0
 114 0046 FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
 115              	.LVL1:
 851:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 852:Generated_Source\PSoC4/CapSense_INT.c ****                    (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)) */
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 18


 853:Generated_Source\PSoC4/CapSense_INT.c **** 
 854:Generated_Source\PSoC4/CapSense_INT.c ****         /* Enable sensor */
 855:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDConnectSensorExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorIndex);
 116              		.loc 1 855 0
 117 004a 2878     		ldrb	r0, [r5]
 118 004c C0B2     		uxtb	r0, r0
 119 004e 2178     		ldrb	r1, [r4]
 120 0050 C9B2     		uxtb	r1, r1
 121 0052 FFF7FEFF 		bl	CapSense_SsCSDConnectSensorExt
 122              	.LVL2:
 856:Generated_Source\PSoC4/CapSense_INT.c **** 
 857:Generated_Source\PSoC4/CapSense_INT.c ****         /* Proceed scanning */
 858:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDStartSample();
 123              		.loc 1 858 0
 124 0056 FFF7FEFF 		bl	CapSense_SsCSDStartSample
 125              	.LVL3:
 126 005a 16E0     		b	.L4
 127              	.LVL4:
 128              	.L5:
 859:Generated_Source\PSoC4/CapSense_INT.c ****     }
 860:Generated_Source\PSoC4/CapSense_INT.c ****     /* Call scan next widget API if requested, if not, complete the scan  */
 861:Generated_Source\PSoC4/CapSense_INT.c ****     else
 862:Generated_Source\PSoC4/CapSense_INT.c ****     {
 863:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_sensorIndex = 0u;
 129              		.loc 1 863 0
 130 005c 0022     		movs	r2, #0
 131 005e 0D4B     		ldr	r3, .L8+8
 132 0060 1A70     		strb	r2, [r3]
 864:Generated_Source\PSoC4/CapSense_INT.c **** 
 865:Generated_Source\PSoC4/CapSense_INT.c ****         /* Current widget is totally scanned. Reset WIDGET BUSY flag */
 866:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_dsRam.status &= ~CapSense_WDGT_SW_STS_BUSY;
 133              		.loc 1 866 0
 134 0062 0E4A     		ldr	r2, .L8+16
 135 0064 D168     		ldr	r1, [r2, #12]
 136 0066 0E4B     		ldr	r3, .L8+20
 137 0068 0B40     		ands	r3, r1
 138 006a D360     		str	r3, [r2, #12]
 867:Generated_Source\PSoC4/CapSense_INT.c **** 
 868:Generated_Source\PSoC4/CapSense_INT.c ****         /* Check if all the widgets have been scanned */
 869:Generated_Source\PSoC4/CapSense_INT.c ****         if (CapSense_ENABLE == CapSense_requestScanAllWidget)
 139              		.loc 1 869 0
 140 006c 0D4B     		ldr	r3, .L8+24
 141 006e 1B78     		ldrb	r3, [r3]
 142 0070 012B     		cmp	r3, #1
 143 0072 02D1     		bne	.L7
 870:Generated_Source\PSoC4/CapSense_INT.c ****         {
 871:Generated_Source\PSoC4/CapSense_INT.c ****             /* Configure and begin scanning next widget */
 872:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsPostAllWidgetsScan();
 144              		.loc 1 872 0
 145 0074 FFF7FEFF 		bl	CapSense_SsPostAllWidgetsScan
 146              	.LVL5:
 147 0078 07E0     		b	.L4
 148              	.LVL6:
 149              	.L7:
 873:Generated_Source\PSoC4/CapSense_INT.c ****         }
 874:Generated_Source\PSoC4/CapSense_INT.c ****         else
 875:Generated_Source\PSoC4/CapSense_INT.c ****         {
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 19


 876:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 877:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
 878:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable the CSD block */
 879:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 880:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 881:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable the CSD block. Connect Vref Buffer to AMUX bus */
 882:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 883:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 884:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 885:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 886:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 887:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif
 888:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif
 889:Generated_Source\PSoC4/CapSense_INT.c ****             #endif
 890:Generated_Source\PSoC4/CapSense_INT.c **** 
 891:Generated_Source\PSoC4/CapSense_INT.c ****             /* All widgets are totally scanned. Reset BUSY flag */
 892:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
 150              		.loc 1 892 0
 151 007a 084B     		ldr	r3, .L8+16
 152 007c DA68     		ldr	r2, [r3, #12]
 153 007e 8021     		movs	r1, #128
 154 0080 8A43     		bics	r2, r1
 155 0082 DA60     		str	r2, [r3, #12]
 893:Generated_Source\PSoC4/CapSense_INT.c **** 
 894:Generated_Source\PSoC4/CapSense_INT.c ****             /* Update scan Counter */
 895:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_dsRam.scanCounter++;
 156              		.loc 1 895 0
 157 0084 1A89     		ldrh	r2, [r3, #8]
 158 0086 0132     		adds	r2, r2, #1
 159 0088 1A81     		strh	r2, [r3, #8]
 160              	.LVL7:
 161              	.L4:
 896:Generated_Source\PSoC4/CapSense_INT.c ****         }
 897:Generated_Source\PSoC4/CapSense_INT.c ****     }
 898:Generated_Source\PSoC4/CapSense_INT.c **** }
 162              		.loc 1 898 0
 163              		@ sp needed
 164 008a 70BD     		pop	{r4, r5, r6, pc}
 165              	.L9:
 166              		.align	2
 167              	.L8:
 168 008c 00000000 		.word	CapSense_widgetIndex
 169 0090 00000000 		.word	CapSense_dsFlash
 170 0094 00000000 		.word	CapSense_sensorIndex
 171 0098 00000000 		.word	CapSense_curRamSnsPtr
 172 009c 00000000 		.word	CapSense_dsRam
 173 00a0 FFFFFEFF 		.word	-65537
 174 00a4 00000000 		.word	CapSense_requestScanAllWidget
 175              		.cfi_endproc
 176              	.LFE4:
 177              		.size	CapSense_SsCSDInitNextScan, .-CapSense_SsCSDInitNextScan
 178              		.section	.text.CapSense_CSDPostSingleScan,"ax",%progbits
 179              		.align	2
 180              		.global	CapSense_CSDPostSingleScan
 181              		.code	16
 182              		.thumb_func
 183              		.type	CapSense_CSDPostSingleScan, %function
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 20


 184              	CapSense_CSDPostSingleScan:
 185              	.LFB1:
 463:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 186              		.loc 1 463 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190 0000 10B5     		push	{r4, lr}
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 4, -8
 193              		.cfi_offset 14, -4
 469:Generated_Source\PSoC4/CapSense_INT.c **** 
 194              		.loc 1 469 0
 195 0002 0122     		movs	r2, #1
 196 0004 094B     		ldr	r3, .L11
 197 0006 1A60     		str	r2, [r3]
 472:Generated_Source\PSoC4/CapSense_INT.c **** 
 198              		.loc 1 472 0
 199 0008 FFF7FEFF 		bl	CapSense_SsCSDPostScan
 200              	.LVL8:
 523:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif
 201              		.loc 1 523 0
 202 000c 084B     		ldr	r3, .L11+4
 203 000e 1B68     		ldr	r3, [r3]
 204 0010 084A     		ldr	r2, .L11+8
 205 0012 1343     		orrs	r3, r2
 206 0014 084A     		ldr	r2, .L11+12
 207 0016 1360     		str	r3, [r2]
 527:Generated_Source\PSoC4/CapSense_INT.c **** 
 208              		.loc 1 527 0
 209 0018 084B     		ldr	r3, .L11+16
 210 001a 1A89     		ldrh	r2, [r3, #8]
 211 001c 0132     		adds	r2, r2, #1
 212 001e 1A81     		strh	r2, [r3, #8]
 530:Generated_Source\PSoC4/CapSense_INT.c ****             }
 213              		.loc 1 530 0
 214 0020 D968     		ldr	r1, [r3, #12]
 215 0022 074A     		ldr	r2, .L11+20
 216 0024 0A40     		ands	r2, r1
 217 0026 DA60     		str	r2, [r3, #12]
 537:Generated_Source\PSoC4/CapSense_INT.c **** 
 218              		.loc 1 537 0
 219              		@ sp needed
 220 0028 10BD     		pop	{r4, pc}
 221              	.L12:
 222 002a C046     		.align	2
 223              	.L11:
 224 002c 14002840 		.word	1076363284
 225 0030 00000000 		.word	CapSense_configCsd
 226 0034 2008E881 		.word	-2115500000
 227 0038 04002840 		.word	1076363268
 228 003c 00000000 		.word	CapSense_dsRam
 229 0040 7FFFFEFF 		.word	-65665
 230              		.cfi_endproc
 231              	.LFE1:
 232              		.size	CapSense_CSDPostSingleScan, .-CapSense_CSDPostSingleScan
 233              		.section	.text.CapSense_CSDPostMultiScan,"ax",%progbits
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 21


 234              		.align	2
 235              		.global	CapSense_CSDPostMultiScan
 236              		.code	16
 237              		.thumb_func
 238              		.type	CapSense_CSDPostMultiScan, %function
 239              	CapSense_CSDPostMultiScan:
 240              	.LFB2:
 576:Generated_Source\PSoC4/CapSense_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address        */
 241              		.loc 1 576 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245 0000 10B5     		push	{r4, lr}
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 4, -8
 248              		.cfi_offset 14, -4
 578:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 249              		.loc 1 578 0
 250 0002 0E4B     		ldr	r3, .L14
 251 0004 1B78     		ldrb	r3, [r3]
 579:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 252              		.loc 1 579 0
 253 0006 5B01     		lsls	r3, r3, #5
 254 0008 0D4A     		ldr	r2, .L14+4
 255 000a 9C58     		ldr	r4, [r3, r2]
 580:Generated_Source\PSoC4/CapSense_INT.c **** 
 256              		.loc 1 580 0
 257 000c 0D4B     		ldr	r3, .L14+8
 258 000e 1A78     		ldrb	r2, [r3]
 259 0010 D2B2     		uxtb	r2, r2
 260 0012 D100     		lsls	r1, r2, #3
 261 0014 8A1A     		subs	r2, r1, r2
 262 0016 9300     		lsls	r3, r2, #2
 578:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 263              		.loc 1 578 0
 264 0018 E418     		adds	r4, r4, r3
 265              	.LVL9:
 587:Generated_Source\PSoC4/CapSense_INT.c **** 
 266              		.loc 1 587 0
 267 001a 0122     		movs	r2, #1
 268 001c 0A4B     		ldr	r3, .L14+12
 269 001e 1A60     		str	r2, [r3]
 590:Generated_Source\PSoC4/CapSense_INT.c **** 
 270              		.loc 1 590 0
 271 0020 FFF7FEFF 		bl	CapSense_SsCSDPostScan
 272              	.LVL10:
 593:Generated_Source\PSoC4/CapSense_INT.c **** 
 273              		.loc 1 593 0
 274 0024 094B     		ldr	r3, .L14+16
 275 0026 1B68     		ldr	r3, [r3]
 276 0028 094A     		ldr	r2, .L14+20
 277 002a 1343     		orrs	r3, r2
 278 002c 094A     		ldr	r2, .L14+24
 279 002e 1360     		str	r3, [r2]
 604:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 280              		.loc 1 604 0
 281 0030 2000     		movs	r0, r4
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 22


 282 0032 FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 283              	.LVL11:
 629:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 284              		.loc 1 629 0
 285 0036 FFF7FEFF 		bl	CapSense_SsCSDInitNextScan
 286              	.LVL12:
 635:Generated_Source\PSoC4/CapSense_INT.c **** 
 287              		.loc 1 635 0
 288              		@ sp needed
 289              	.LVL13:
 290 003a 10BD     		pop	{r4, pc}
 291              	.L15:
 292              		.align	2
 293              	.L14:
 294 003c 00000000 		.word	CapSense_widgetIndex
 295 0040 00000000 		.word	CapSense_dsFlash
 296 0044 00000000 		.word	CapSense_sensorIndex
 297 0048 14002840 		.word	1076363284
 298 004c 00000000 		.word	CapSense_configCsd
 299 0050 2008E881 		.word	-2115500000
 300 0054 04002840 		.word	1076363268
 301              		.cfi_endproc
 302              	.LFE2:
 303              		.size	CapSense_CSDPostMultiScan, .-CapSense_CSDPostMultiScan
 304              		.text
 305              	.Letext0:
 306              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 307              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 308              		.file 4 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 309              		.file 5 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 310              		.file 6 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 311              		.file 7 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 312              		.section	.debug_info,"",%progbits
 313              	.Ldebug_info0:
 314 0000 B4070000 		.4byte	0x7b4
 315 0004 0400     		.2byte	0x4
 316 0006 00000000 		.4byte	.Ldebug_abbrev0
 317 000a 04       		.byte	0x4
 318 000b 01       		.uleb128 0x1
 319 000c 9F010000 		.4byte	.LASF112
 320 0010 0C       		.byte	0xc
 321 0011 84030000 		.4byte	.LASF113
 322 0015 8B000000 		.4byte	.LASF114
 323 0019 00000000 		.4byte	.Ldebug_ranges0+0
 324 001d 00000000 		.4byte	0
 325 0021 00000000 		.4byte	.Ldebug_line0
 326 0025 02       		.uleb128 0x2
 327 0026 01       		.byte	0x1
 328 0027 06       		.byte	0x6
 329 0028 09060000 		.4byte	.LASF0
 330 002c 02       		.uleb128 0x2
 331 002d 01       		.byte	0x1
 332 002e 08       		.byte	0x8
 333 002f AA030000 		.4byte	.LASF1
 334 0033 02       		.uleb128 0x2
 335 0034 02       		.byte	0x2
 336 0035 05       		.byte	0x5
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 23


 337 0036 7D010000 		.4byte	.LASF2
 338 003a 02       		.uleb128 0x2
 339 003b 02       		.byte	0x2
 340 003c 07       		.byte	0x7
 341 003d D1040000 		.4byte	.LASF3
 342 0041 02       		.uleb128 0x2
 343 0042 04       		.byte	0x4
 344 0043 05       		.byte	0x5
 345 0044 E6020000 		.4byte	.LASF4
 346 0048 02       		.uleb128 0x2
 347 0049 04       		.byte	0x4
 348 004a 07       		.byte	0x7
 349 004b 70050000 		.4byte	.LASF5
 350 004f 02       		.uleb128 0x2
 351 0050 08       		.byte	0x8
 352 0051 05       		.byte	0x5
 353 0052 1C010000 		.4byte	.LASF6
 354 0056 02       		.uleb128 0x2
 355 0057 08       		.byte	0x8
 356 0058 07       		.byte	0x7
 357 0059 21040000 		.4byte	.LASF7
 358 005d 03       		.uleb128 0x3
 359 005e 04       		.byte	0x4
 360 005f 05       		.byte	0x5
 361 0060 696E7400 		.ascii	"int\000"
 362 0064 02       		.uleb128 0x2
 363 0065 04       		.byte	0x4
 364 0066 07       		.byte	0x7
 365 0067 45040000 		.4byte	.LASF8
 366 006b 04       		.uleb128 0x4
 367 006c 3D020000 		.4byte	.LASF9
 368 0070 02       		.byte	0x2
 369 0071 F701     		.2byte	0x1f7
 370 0073 2C000000 		.4byte	0x2c
 371 0077 04       		.uleb128 0x4
 372 0078 98010000 		.4byte	.LASF10
 373 007c 02       		.byte	0x2
 374 007d F801     		.2byte	0x1f8
 375 007f 3A000000 		.4byte	0x3a
 376 0083 04       		.uleb128 0x4
 377 0084 5E050000 		.4byte	.LASF11
 378 0088 02       		.byte	0x2
 379 0089 F901     		.2byte	0x1f9
 380 008b 48000000 		.4byte	0x48
 381 008f 02       		.uleb128 0x2
 382 0090 04       		.byte	0x4
 383 0091 04       		.byte	0x4
 384 0092 67020000 		.4byte	.LASF12
 385 0096 02       		.uleb128 0x2
 386 0097 08       		.byte	0x8
 387 0098 04       		.byte	0x4
 388 0099 82050000 		.4byte	.LASF13
 389 009d 02       		.uleb128 0x2
 390 009e 01       		.byte	0x1
 391 009f 08       		.byte	0x8
 392 00a0 C3020000 		.4byte	.LASF14
 393 00a4 05       		.uleb128 0x5
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 24


 394 00a5 6B000000 		.4byte	0x6b
 395 00a9 04       		.uleb128 0x4
 396 00aa 6B040000 		.4byte	.LASF15
 397 00ae 02       		.byte	0x2
 398 00af A302     		.2byte	0x2a3
 399 00b1 B5000000 		.4byte	0xb5
 400 00b5 05       		.uleb128 0x5
 401 00b6 83000000 		.4byte	0x83
 402 00ba 04       		.uleb128 0x4
 403 00bb CD030000 		.4byte	.LASF16
 404 00bf 03       		.byte	0x3
 405 00c0 3D01     		.2byte	0x13d
 406 00c2 77000000 		.4byte	0x77
 407 00c6 04       		.uleb128 0x4
 408 00c7 89040000 		.4byte	.LASF17
 409 00cb 03       		.byte	0x3
 410 00cc 4101     		.2byte	0x141
 411 00ce 6B000000 		.4byte	0x6b
 412 00d2 06       		.uleb128 0x6
 413 00d3 0C       		.byte	0xc
 414 00d4 04       		.byte	0x4
 415 00d5 75       		.byte	0x75
 416 00d6 2F010000 		.4byte	0x12f
 417 00da 07       		.uleb128 0x7
 418 00db 52040000 		.4byte	.LASF18
 419 00df 04       		.byte	0x4
 420 00e0 7A       		.byte	0x7a
 421 00e1 77000000 		.4byte	0x77
 422 00e5 00       		.byte	0
 423 00e6 07       		.uleb128 0x7
 424 00e7 64040000 		.4byte	.LASF19
 425 00eb 04       		.byte	0x4
 426 00ec 7E       		.byte	0x7e
 427 00ed 77000000 		.4byte	0x77
 428 00f1 02       		.byte	0x2
 429 00f2 07       		.uleb128 0x7
 430 00f3 41010000 		.4byte	.LASF20
 431 00f7 04       		.byte	0x4
 432 00f8 82       		.byte	0x82
 433 00f9 77000000 		.4byte	0x77
 434 00fd 04       		.byte	0x4
 435 00fe 07       		.uleb128 0x7
 436 00ff 48010000 		.4byte	.LASF21
 437 0103 04       		.byte	0x4
 438 0104 86       		.byte	0x86
 439 0105 77000000 		.4byte	0x77
 440 0109 06       		.byte	0x6
 441 010a 07       		.uleb128 0x7
 442 010b 43000000 		.4byte	.LASF22
 443 010f 04       		.byte	0x4
 444 0110 8A       		.byte	0x8a
 445 0111 77000000 		.4byte	0x77
 446 0115 08       		.byte	0x8
 447 0116 07       		.uleb128 0x7
 448 0117 72030000 		.4byte	.LASF23
 449 011b 04       		.byte	0x4
 450 011c 8E       		.byte	0x8e
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 25


 451 011d 6B000000 		.4byte	0x6b
 452 0121 0A       		.byte	0xa
 453 0122 07       		.uleb128 0x7
 454 0123 58000000 		.4byte	.LASF24
 455 0127 04       		.byte	0x4
 456 0128 92       		.byte	0x92
 457 0129 6B000000 		.4byte	0x6b
 458 012d 0B       		.byte	0xb
 459 012e 00       		.byte	0
 460 012f 08       		.uleb128 0x8
 461 0130 A8060000 		.4byte	.LASF25
 462 0134 04       		.byte	0x4
 463 0135 93       		.byte	0x93
 464 0136 D2000000 		.4byte	0xd2
 465 013a 06       		.uleb128 0x6
 466 013b 14       		.byte	0x14
 467 013c 05       		.byte	0x5
 468 013d AD       		.byte	0xad
 469 013e DF010000 		.4byte	0x1df
 470 0142 07       		.uleb128 0x7
 471 0143 C6040000 		.4byte	.LASF26
 472 0147 05       		.byte	0x5
 473 0148 B2       		.byte	0xb2
 474 0149 77000000 		.4byte	0x77
 475 014d 00       		.byte	0
 476 014e 07       		.uleb128 0x7
 477 014f 3A030000 		.4byte	.LASF27
 478 0153 05       		.byte	0x5
 479 0154 B7       		.byte	0xb7
 480 0155 BA000000 		.4byte	0xba
 481 0159 02       		.byte	0x2
 482 015a 07       		.uleb128 0x7
 483 015b 87010000 		.4byte	.LASF28
 484 015f 05       		.byte	0x5
 485 0160 BC       		.byte	0xbc
 486 0161 6B000000 		.4byte	0x6b
 487 0165 04       		.byte	0x4
 488 0166 07       		.uleb128 0x7
 489 0167 3A050000 		.4byte	.LASF29
 490 016b 05       		.byte	0x5
 491 016c C1       		.byte	0xc1
 492 016d 6B000000 		.4byte	0x6b
 493 0171 05       		.byte	0x5
 494 0172 07       		.uleb128 0x7
 495 0173 4B030000 		.4byte	.LASF30
 496 0177 05       		.byte	0x5
 497 0178 C7       		.byte	0xc7
 498 0179 6B000000 		.4byte	0x6b
 499 017d 06       		.byte	0x6
 500 017e 07       		.uleb128 0x7
 501 017f CC000000 		.4byte	.LASF31
 502 0183 05       		.byte	0x5
 503 0184 CD       		.byte	0xcd
 504 0185 6B000000 		.4byte	0x6b
 505 0189 07       		.byte	0x7
 506 018a 07       		.uleb128 0x7
 507 018b 5F000000 		.4byte	.LASF32
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 26


 508 018f 05       		.byte	0x5
 509 0190 D4       		.byte	0xd4
 510 0191 C6000000 		.4byte	0xc6
 511 0195 08       		.byte	0x8
 512 0196 07       		.uleb128 0x7
 513 0197 7B000000 		.4byte	.LASF33
 514 019b 05       		.byte	0x5
 515 019c DB       		.byte	0xdb
 516 019d DF010000 		.4byte	0x1df
 517 01a1 09       		.byte	0x9
 518 01a2 07       		.uleb128 0x7
 519 01a3 4A000000 		.4byte	.LASF34
 520 01a7 05       		.byte	0x5
 521 01a8 E0       		.byte	0xe0
 522 01a9 6B000000 		.4byte	0x6b
 523 01ad 0A       		.byte	0xa
 524 01ae 07       		.uleb128 0x7
 525 01af 49020000 		.4byte	.LASF35
 526 01b3 05       		.byte	0x5
 527 01b4 E8       		.byte	0xe8
 528 01b5 77000000 		.4byte	0x77
 529 01b9 0C       		.byte	0xc
 530 01ba 07       		.uleb128 0x7
 531 01bb 34010000 		.4byte	.LASF36
 532 01bf 05       		.byte	0x5
 533 01c0 ED       		.byte	0xed
 534 01c1 6B000000 		.4byte	0x6b
 535 01c5 0E       		.byte	0xe
 536 01c6 07       		.uleb128 0x7
 537 01c7 4A060000 		.4byte	.LASF37
 538 01cb 05       		.byte	0x5
 539 01cc F3       		.byte	0xf3
 540 01cd 77000000 		.4byte	0x77
 541 01d1 10       		.byte	0x10
 542 01d2 07       		.uleb128 0x7
 543 01d3 57050000 		.4byte	.LASF38
 544 01d7 05       		.byte	0x5
 545 01d8 F8       		.byte	0xf8
 546 01d9 77000000 		.4byte	0x77
 547 01dd 12       		.byte	0x12
 548 01de 00       		.byte	0
 549 01df 09       		.uleb128 0x9
 550 01e0 6B000000 		.4byte	0x6b
 551 01e4 EF010000 		.4byte	0x1ef
 552 01e8 0A       		.uleb128 0xa
 553 01e9 EF010000 		.4byte	0x1ef
 554 01ed 00       		.byte	0
 555 01ee 00       		.byte	0
 556 01ef 02       		.uleb128 0x2
 557 01f0 04       		.byte	0x4
 558 01f1 07       		.byte	0x7
 559 01f2 D7000000 		.4byte	.LASF39
 560 01f6 08       		.uleb128 0x8
 561 01f7 65060000 		.4byte	.LASF40
 562 01fb 05       		.byte	0x5
 563 01fc F9       		.byte	0xf9
 564 01fd 3A010000 		.4byte	0x13a
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 27


 565 0201 06       		.uleb128 0x6
 566 0202 14       		.byte	0x14
 567 0203 05       		.byte	0x5
 568 0204 FE       		.byte	0xfe
 569 0205 B3020000 		.4byte	0x2b3
 570 0209 0B       		.uleb128 0xb
 571 020a C6040000 		.4byte	.LASF26
 572 020e 05       		.byte	0x5
 573 020f 0301     		.2byte	0x103
 574 0211 77000000 		.4byte	0x77
 575 0215 00       		.byte	0
 576 0216 0B       		.uleb128 0xb
 577 0217 3A030000 		.4byte	.LASF27
 578 021b 05       		.byte	0x5
 579 021c 0801     		.2byte	0x108
 580 021e BA000000 		.4byte	0xba
 581 0222 02       		.byte	0x2
 582 0223 0B       		.uleb128 0xb
 583 0224 87010000 		.4byte	.LASF28
 584 0228 05       		.byte	0x5
 585 0229 0D01     		.2byte	0x10d
 586 022b 6B000000 		.4byte	0x6b
 587 022f 04       		.byte	0x4
 588 0230 0B       		.uleb128 0xb
 589 0231 3A050000 		.4byte	.LASF29
 590 0235 05       		.byte	0x5
 591 0236 1201     		.2byte	0x112
 592 0238 6B000000 		.4byte	0x6b
 593 023c 05       		.byte	0x5
 594 023d 0B       		.uleb128 0xb
 595 023e 4B030000 		.4byte	.LASF30
 596 0242 05       		.byte	0x5
 597 0243 1801     		.2byte	0x118
 598 0245 6B000000 		.4byte	0x6b
 599 0249 06       		.byte	0x6
 600 024a 0B       		.uleb128 0xb
 601 024b CC000000 		.4byte	.LASF31
 602 024f 05       		.byte	0x5
 603 0250 1E01     		.2byte	0x11e
 604 0252 6B000000 		.4byte	0x6b
 605 0256 07       		.byte	0x7
 606 0257 0B       		.uleb128 0xb
 607 0258 5F000000 		.4byte	.LASF32
 608 025c 05       		.byte	0x5
 609 025d 2501     		.2byte	0x125
 610 025f C6000000 		.4byte	0xc6
 611 0263 08       		.byte	0x8
 612 0264 0B       		.uleb128 0xb
 613 0265 7B000000 		.4byte	.LASF33
 614 0269 05       		.byte	0x5
 615 026a 2C01     		.2byte	0x12c
 616 026c DF010000 		.4byte	0x1df
 617 0270 09       		.byte	0x9
 618 0271 0B       		.uleb128 0xb
 619 0272 4A000000 		.4byte	.LASF34
 620 0276 05       		.byte	0x5
 621 0277 3101     		.2byte	0x131
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 28


 622 0279 6B000000 		.4byte	0x6b
 623 027d 0A       		.byte	0xa
 624 027e 0B       		.uleb128 0xb
 625 027f 49020000 		.4byte	.LASF35
 626 0283 05       		.byte	0x5
 627 0284 3901     		.2byte	0x139
 628 0286 77000000 		.4byte	0x77
 629 028a 0C       		.byte	0xc
 630 028b 0B       		.uleb128 0xb
 631 028c 34010000 		.4byte	.LASF36
 632 0290 05       		.byte	0x5
 633 0291 3E01     		.2byte	0x13e
 634 0293 6B000000 		.4byte	0x6b
 635 0297 0E       		.byte	0xe
 636 0298 0B       		.uleb128 0xb
 637 0299 4A060000 		.4byte	.LASF37
 638 029d 05       		.byte	0x5
 639 029e 4401     		.2byte	0x144
 640 02a0 77000000 		.4byte	0x77
 641 02a4 10       		.byte	0x10
 642 02a5 0B       		.uleb128 0xb
 643 02a6 57050000 		.4byte	.LASF38
 644 02aa 05       		.byte	0x5
 645 02ab 4901     		.2byte	0x149
 646 02ad 77000000 		.4byte	0x77
 647 02b1 12       		.byte	0x12
 648 02b2 00       		.byte	0
 649 02b3 04       		.uleb128 0x4
 650 02b4 A5020000 		.4byte	.LASF41
 651 02b8 05       		.byte	0x5
 652 02b9 4A01     		.2byte	0x14a
 653 02bb 01020000 		.4byte	0x201
 654 02bf 0C       		.uleb128 0xc
 655 02c0 14       		.byte	0x14
 656 02c1 05       		.byte	0x5
 657 02c2 5001     		.2byte	0x150
 658 02c4 D6020000 		.4byte	0x2d6
 659 02c8 0B       		.uleb128 0xb
 660 02c9 56030000 		.4byte	.LASF42
 661 02cd 05       		.byte	0x5
 662 02ce 5501     		.2byte	0x155
 663 02d0 B3020000 		.4byte	0x2b3
 664 02d4 00       		.byte	0
 665 02d5 00       		.byte	0
 666 02d6 04       		.uleb128 0x4
 667 02d7 79020000 		.4byte	.LASF43
 668 02db 05       		.byte	0x5
 669 02dc 5601     		.2byte	0x156
 670 02de BF020000 		.4byte	0x2bf
 671 02e2 0C       		.uleb128 0xc
 672 02e3 0A       		.byte	0xa
 673 02e4 05       		.byte	0x5
 674 02e5 5C01     		.2byte	0x15c
 675 02e7 3A030000 		.4byte	0x33a
 676 02eb 0D       		.uleb128 0xd
 677 02ec 72617700 		.ascii	"raw\000"
 678 02f0 05       		.byte	0x5
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 29


 679 02f1 6101     		.2byte	0x161
 680 02f3 3A030000 		.4byte	0x33a
 681 02f7 00       		.byte	0
 682 02f8 0B       		.uleb128 0xb
 683 02f9 3E000000 		.4byte	.LASF44
 684 02fd 05       		.byte	0x5
 685 02fe 6601     		.2byte	0x166
 686 0300 3A030000 		.4byte	0x33a
 687 0304 02       		.byte	0x2
 688 0305 0B       		.uleb128 0xb
 689 0306 A3050000 		.4byte	.LASF45
 690 030a 05       		.byte	0x5
 691 030b 6C01     		.2byte	0x16c
 692 030d DF010000 		.4byte	0x1df
 693 0311 04       		.byte	0x4
 694 0312 0B       		.uleb128 0xb
 695 0313 6A000000 		.4byte	.LASF46
 696 0317 05       		.byte	0x5
 697 0318 7101     		.2byte	0x171
 698 031a BA000000 		.4byte	0xba
 699 031e 06       		.byte	0x6
 700 031f 0B       		.uleb128 0xb
 701 0320 D7050000 		.4byte	.LASF47
 702 0324 05       		.byte	0x5
 703 0325 7601     		.2byte	0x176
 704 0327 4A030000 		.4byte	0x34a
 705 032b 08       		.byte	0x8
 706 032c 0B       		.uleb128 0xb
 707 032d 08010000 		.4byte	.LASF48
 708 0331 05       		.byte	0x5
 709 0332 7B01     		.2byte	0x17b
 710 0334 DF010000 		.4byte	0x1df
 711 0338 09       		.byte	0x9
 712 0339 00       		.byte	0
 713 033a 09       		.uleb128 0x9
 714 033b 77000000 		.4byte	0x77
 715 033f 4A030000 		.4byte	0x34a
 716 0343 0A       		.uleb128 0xa
 717 0344 EF010000 		.4byte	0x1ef
 718 0348 00       		.byte	0
 719 0349 00       		.byte	0
 720 034a 09       		.uleb128 0x9
 721 034b C6000000 		.4byte	0xc6
 722 034f 5A030000 		.4byte	0x35a
 723 0353 0A       		.uleb128 0xa
 724 0354 EF010000 		.4byte	0x1ef
 725 0358 00       		.byte	0
 726 0359 00       		.byte	0
 727 035a 04       		.uleb128 0x4
 728 035b 71040000 		.4byte	.LASF49
 729 035f 05       		.byte	0x5
 730 0360 7C01     		.2byte	0x17c
 731 0362 E2020000 		.4byte	0x2e2
 732 0366 0E       		.uleb128 0xe
 733 0367 4001     		.2byte	0x140
 734 0369 05       		.byte	0x5
 735 036a 8201     		.2byte	0x182
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 30


 736 036c 7E030000 		.4byte	0x37e
 737 0370 0B       		.uleb128 0xb
 738 0371 56030000 		.4byte	.LASF42
 739 0375 05       		.byte	0x5
 740 0376 8701     		.2byte	0x187
 741 0378 7E030000 		.4byte	0x37e
 742 037c 00       		.byte	0
 743 037d 00       		.byte	0
 744 037e 09       		.uleb128 0x9
 745 037f 5A030000 		.4byte	0x35a
 746 0383 8E030000 		.4byte	0x38e
 747 0387 0A       		.uleb128 0xa
 748 0388 EF010000 		.4byte	0x1ef
 749 038c 1F       		.byte	0x1f
 750 038d 00       		.byte	0
 751 038e 04       		.uleb128 0x4
 752 038f 04040000 		.4byte	.LASF50
 753 0393 05       		.byte	0x5
 754 0394 8801     		.2byte	0x188
 755 0396 66030000 		.4byte	0x366
 756 039a 0E       		.uleb128 0xe
 757 039b 7C01     		.2byte	0x17c
 758 039d 05       		.byte	0x5
 759 039e 8E01     		.2byte	0x18e
 760 03a0 A2040000 		.4byte	0x4a2
 761 03a4 0B       		.uleb128 0xb
 762 03a5 F9000000 		.4byte	.LASF51
 763 03a9 05       		.byte	0x5
 764 03aa 9501     		.2byte	0x195
 765 03ac 77000000 		.4byte	0x77
 766 03b0 00       		.byte	0
 767 03b1 0B       		.uleb128 0xb
 768 03b2 8F010000 		.4byte	.LASF52
 769 03b6 05       		.byte	0x5
 770 03b7 9A01     		.2byte	0x19a
 771 03b9 77000000 		.4byte	0x77
 772 03bd 02       		.byte	0x2
 773 03be 0B       		.uleb128 0xb
 774 03bf AB040000 		.4byte	.LASF53
 775 03c3 05       		.byte	0x5
 776 03c4 9F01     		.2byte	0x19f
 777 03c6 77000000 		.4byte	0x77
 778 03ca 04       		.byte	0x4
 779 03cb 0B       		.uleb128 0xb
 780 03cc 5D030000 		.4byte	.LASF54
 781 03d0 05       		.byte	0x5
 782 03d1 A501     		.2byte	0x1a5
 783 03d3 77000000 		.4byte	0x77
 784 03d7 06       		.byte	0x6
 785 03d8 0B       		.uleb128 0xb
 786 03d9 2E050000 		.4byte	.LASF55
 787 03dd 05       		.byte	0x5
 788 03de AA01     		.2byte	0x1aa
 789 03e0 77000000 		.4byte	0x77
 790 03e4 08       		.byte	0x8
 791 03e5 0B       		.uleb128 0xb
 792 03e6 A4040000 		.4byte	.LASF56
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 31


 793 03ea 05       		.byte	0x5
 794 03eb AF01     		.2byte	0x1af
 795 03ed B5000000 		.4byte	0xb5
 796 03f1 0C       		.byte	0xc
 797 03f2 0B       		.uleb128 0xb
 798 03f3 59040000 		.4byte	.LASF57
 799 03f7 05       		.byte	0x5
 800 03f8 B501     		.2byte	0x1b5
 801 03fa A2040000 		.4byte	0x4a2
 802 03fe 10       		.byte	0x10
 803 03ff 0B       		.uleb128 0xb
 804 0400 79030000 		.4byte	.LASF58
 805 0404 05       		.byte	0x5
 806 0405 BC01     		.2byte	0x1bc
 807 0407 A2040000 		.4byte	0x4a2
 808 040b 14       		.byte	0x14
 809 040c 0B       		.uleb128 0xb
 810 040d DA060000 		.4byte	.LASF59
 811 0411 05       		.byte	0x5
 812 0412 CC01     		.2byte	0x1cc
 813 0414 A2040000 		.4byte	0x4a2
 814 0418 18       		.byte	0x18
 815 0419 0B       		.uleb128 0xb
 816 041a 11010000 		.4byte	.LASF60
 817 041e 05       		.byte	0x5
 818 041f D201     		.2byte	0x1d2
 819 0421 77000000 		.4byte	0x77
 820 0425 1C       		.byte	0x1c
 821 0426 0B       		.uleb128 0xb
 822 0427 24050000 		.4byte	.LASF61
 823 042b 05       		.byte	0x5
 824 042c D701     		.2byte	0x1d7
 825 042e 6B000000 		.4byte	0x6b
 826 0432 1E       		.byte	0x1e
 827 0433 0B       		.uleb128 0xb
 828 0434 16000000 		.4byte	.LASF62
 829 0438 05       		.byte	0x5
 830 0439 DC01     		.2byte	0x1dc
 831 043b D6020000 		.4byte	0x2d6
 832 043f 20       		.byte	0x20
 833 0440 0B       		.uleb128 0xb
 834 0441 FE040000 		.4byte	.LASF63
 835 0445 05       		.byte	0x5
 836 0446 E101     		.2byte	0x1e1
 837 0448 8E030000 		.4byte	0x38e
 838 044c 34       		.byte	0x34
 839 044d 0F       		.uleb128 0xf
 840 044e 81060000 		.4byte	.LASF64
 841 0452 05       		.byte	0x5
 842 0453 E601     		.2byte	0x1e6
 843 0455 6B000000 		.4byte	0x6b
 844 0459 7401     		.2byte	0x174
 845 045b 0F       		.uleb128 0xf
 846 045c 95020000 		.4byte	.LASF65
 847 0460 05       		.byte	0x5
 848 0461 EB01     		.2byte	0x1eb
 849 0463 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 32


 850 0467 7501     		.2byte	0x175
 851 0469 0F       		.uleb128 0xf
 852 046a B3040000 		.4byte	.LASF66
 853 046e 05       		.byte	0x5
 854 046f F001     		.2byte	0x1f0
 855 0471 77000000 		.4byte	0x77
 856 0475 7601     		.2byte	0x176
 857 0477 0F       		.uleb128 0xf
 858 0478 1F000000 		.4byte	.LASF67
 859 047c 05       		.byte	0x5
 860 047d F501     		.2byte	0x1f5
 861 047f 3A030000 		.4byte	0x33a
 862 0483 7801     		.2byte	0x178
 863 0485 0F       		.uleb128 0xf
 864 0486 65050000 		.4byte	.LASF68
 865 048a 05       		.byte	0x5
 866 048b FA01     		.2byte	0x1fa
 867 048d 6B000000 		.4byte	0x6b
 868 0491 7A01     		.2byte	0x17a
 869 0493 0F       		.uleb128 0xf
 870 0494 2F000000 		.4byte	.LASF69
 871 0498 05       		.byte	0x5
 872 0499 FF01     		.2byte	0x1ff
 873 049b 6B000000 		.4byte	0x6b
 874 049f 7B01     		.2byte	0x17b
 875 04a1 00       		.byte	0
 876 04a2 09       		.uleb128 0x9
 877 04a3 83000000 		.4byte	0x83
 878 04a7 B2040000 		.4byte	0x4b2
 879 04ab 0A       		.uleb128 0xa
 880 04ac EF010000 		.4byte	0x1ef
 881 04b0 00       		.byte	0
 882 04b1 00       		.byte	0
 883 04b2 04       		.uleb128 0x4
 884 04b3 43050000 		.4byte	.LASF70
 885 04b7 05       		.byte	0x5
 886 04b8 0002     		.2byte	0x200
 887 04ba 9A030000 		.4byte	0x39a
 888 04be 0C       		.uleb128 0xc
 889 04bf 1C       		.byte	0x1c
 890 04c0 05       		.byte	0x5
 891 04c1 0602     		.2byte	0x206
 892 04c3 3D050000 		.4byte	0x53d
 893 04c7 0B       		.uleb128 0xb
 894 04c8 C3000000 		.4byte	.LASF71
 895 04cc 05       		.byte	0x5
 896 04cd 0B02     		.2byte	0x20b
 897 04cf 3D050000 		.4byte	0x53d
 898 04d3 00       		.byte	0
 899 04d4 0B       		.uleb128 0xb
 900 04d5 02010000 		.4byte	.LASF72
 901 04d9 05       		.byte	0x5
 902 04da 1002     		.2byte	0x210
 903 04dc 3D050000 		.4byte	0x53d
 904 04e0 04       		.byte	0x4
 905 04e1 0B       		.uleb128 0xb
 906 04e2 CC050000 		.4byte	.LASF73
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 33


 907 04e6 05       		.byte	0x5
 908 04e7 1502     		.2byte	0x215
 909 04e9 3D050000 		.4byte	0x53d
 910 04ed 08       		.byte	0x8
 911 04ee 0B       		.uleb128 0xb
 912 04ef 43020000 		.4byte	.LASF74
 913 04f3 05       		.byte	0x5
 914 04f4 1A02     		.2byte	0x21a
 915 04f6 3D050000 		.4byte	0x53d
 916 04fa 0C       		.byte	0xc
 917 04fb 0B       		.uleb128 0xb
 918 04fc 2A010000 		.4byte	.LASF75
 919 0500 05       		.byte	0x5
 920 0501 1F02     		.2byte	0x21f
 921 0503 83000000 		.4byte	0x83
 922 0507 10       		.byte	0x10
 923 0508 0B       		.uleb128 0xb
 924 0509 D2050000 		.4byte	.LASF76
 925 050d 05       		.byte	0x5
 926 050e 2402     		.2byte	0x224
 927 0510 83000000 		.4byte	0x83
 928 0514 14       		.byte	0x14
 929 0515 0B       		.uleb128 0xb
 930 0516 AB050000 		.4byte	.LASF77
 931 051a 05       		.byte	0x5
 932 051b 2902     		.2byte	0x229
 933 051d 6B000000 		.4byte	0x6b
 934 0521 18       		.byte	0x18
 935 0522 0B       		.uleb128 0xb
 936 0523 83000000 		.4byte	.LASF78
 937 0527 05       		.byte	0x5
 938 0528 2E02     		.2byte	0x22e
 939 052a 6B000000 		.4byte	0x6b
 940 052e 19       		.byte	0x19
 941 052f 0B       		.uleb128 0xb
 942 0530 EF020000 		.4byte	.LASF79
 943 0534 05       		.byte	0x5
 944 0535 3302     		.2byte	0x233
 945 0537 6B000000 		.4byte	0x6b
 946 053b 1A       		.byte	0x1a
 947 053c 00       		.byte	0
 948 053d 10       		.uleb128 0x10
 949 053e 04       		.byte	0x4
 950 053f A9000000 		.4byte	0xa9
 951 0543 04       		.uleb128 0x4
 952 0544 12030000 		.4byte	.LASF80
 953 0548 05       		.byte	0x5
 954 0549 3402     		.2byte	0x234
 955 054b BE040000 		.4byte	0x4be
 956 054f 0C       		.uleb128 0xc
 957 0550 20       		.byte	0x20
 958 0551 05       		.byte	0x5
 959 0552 6702     		.2byte	0x267
 960 0554 DB050000 		.4byte	0x5db
 961 0558 0B       		.uleb128 0xb
 962 0559 CD060000 		.4byte	.LASF81
 963 055d 05       		.byte	0x5
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 34


 964 055e 7002     		.2byte	0x270
 965 0560 DB050000 		.4byte	0x5db
 966 0564 00       		.byte	0
 967 0565 0B       		.uleb128 0xb
 968 0566 06030000 		.4byte	.LASF82
 969 056a 05       		.byte	0x5
 970 056b 7702     		.2byte	0x277
 971 056d E2050000 		.4byte	0x5e2
 972 0571 04       		.byte	0x4
 973 0572 0B       		.uleb128 0xb
 974 0573 FE050000 		.4byte	.LASF83
 975 0577 05       		.byte	0x5
 976 0578 7D02     		.2byte	0x27d
 977 057a E4050000 		.4byte	0x5e4
 978 057e 08       		.byte	0x8
 979 057f 0B       		.uleb128 0xb
 980 0580 15060000 		.4byte	.LASF84
 981 0584 05       		.byte	0x5
 982 0585 8302     		.2byte	0x283
 983 0587 E2050000 		.4byte	0x5e2
 984 058b 0C       		.byte	0xc
 985 058c 0B       		.uleb128 0xb
 986 058d 2D020000 		.4byte	.LASF85
 987 0591 05       		.byte	0x5
 988 0592 8A02     		.2byte	0x28a
 989 0594 EA050000 		.4byte	0x5ea
 990 0598 10       		.byte	0x10
 991 0599 0B       		.uleb128 0xb
 992 059a 38040000 		.4byte	.LASF86
 993 059e 05       		.byte	0x5
 994 059f 8F02     		.2byte	0x28f
 995 05a1 83000000 		.4byte	0x83
 996 05a5 14       		.byte	0x14
 997 05a6 0B       		.uleb128 0xb
 998 05a7 6F000000 		.4byte	.LASF87
 999 05ab 05       		.byte	0x5
 1000 05ac 9602     		.2byte	0x296
 1001 05ae 77000000 		.4byte	0x77
 1002 05b2 18       		.byte	0x18
 1003 05b3 0B       		.uleb128 0xb
 1004 05b4 F5020000 		.4byte	.LASF88
 1005 05b8 05       		.byte	0x5
 1006 05b9 9D02     		.2byte	0x29d
 1007 05bb 6B000000 		.4byte	0x6b
 1008 05bf 1A       		.byte	0x1a
 1009 05c0 0B       		.uleb128 0xb
 1010 05c1 43030000 		.4byte	.LASF89
 1011 05c5 05       		.byte	0x5
 1012 05c6 A702     		.2byte	0x2a7
 1013 05c8 6B000000 		.4byte	0x6b
 1014 05cc 1B       		.byte	0x1b
 1015 05cd 0B       		.uleb128 0xb
 1016 05ce 13070000 		.4byte	.LASF90
 1017 05d2 05       		.byte	0x5
 1018 05d3 AF02     		.2byte	0x2af
 1019 05d5 F0050000 		.4byte	0x5f0
 1020 05d9 1C       		.byte	0x1c
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 35


 1021 05da 00       		.byte	0
 1022 05db 10       		.uleb128 0x10
 1023 05dc 04       		.byte	0x4
 1024 05dd E1050000 		.4byte	0x5e1
 1025 05e1 11       		.uleb128 0x11
 1026 05e2 12       		.uleb128 0x12
 1027 05e3 04       		.byte	0x4
 1028 05e4 10       		.uleb128 0x10
 1029 05e5 04       		.byte	0x4
 1030 05e6 5A030000 		.4byte	0x35a
 1031 05ea 10       		.uleb128 0x10
 1032 05eb 04       		.byte	0x4
 1033 05ec 6B000000 		.4byte	0x6b
 1034 05f0 10       		.uleb128 0x10
 1035 05f1 04       		.byte	0x4
 1036 05f2 2F010000 		.4byte	0x12f
 1037 05f6 04       		.uleb128 0x4
 1038 05f7 E0000000 		.4byte	.LASF91
 1039 05fb 05       		.byte	0x5
 1040 05fc B002     		.2byte	0x2b0
 1041 05fe 4F050000 		.4byte	0x54f
 1042 0602 0C       		.uleb128 0xc
 1043 0603 20       		.byte	0x20
 1044 0604 05       		.byte	0x5
 1045 0605 B602     		.2byte	0x2b6
 1046 0607 19060000 		.4byte	0x619
 1047 060b 0B       		.uleb128 0xb
 1048 060c 40060000 		.4byte	.LASF92
 1049 0610 05       		.byte	0x5
 1050 0611 BB02     		.2byte	0x2bb
 1051 0613 19060000 		.4byte	0x619
 1052 0617 00       		.byte	0
 1053 0618 00       		.byte	0
 1054 0619 09       		.uleb128 0x9
 1055 061a F6050000 		.4byte	0x5f6
 1056 061e 29060000 		.4byte	0x629
 1057 0622 0A       		.uleb128 0xa
 1058 0623 EF010000 		.4byte	0x1ef
 1059 0627 00       		.byte	0
 1060 0628 00       		.byte	0
 1061 0629 04       		.uleb128 0x4
 1062 062a 00000000 		.4byte	.LASF93
 1063 062e 05       		.byte	0x5
 1064 062f BC02     		.2byte	0x2bc
 1065 0631 02060000 		.4byte	0x602
 1066 0635 02       		.uleb128 0x2
 1067 0636 08       		.byte	0x8
 1068 0637 04       		.byte	0x4
 1069 0638 66030000 		.4byte	.LASF94
 1070 063c 13       		.uleb128 0x13
 1071 063d 50020000 		.4byte	.LASF115
 1072 0641 01       		.byte	0x1
 1073 0642 F402     		.2byte	0x2f4
 1074 0644 00000000 		.4byte	.LFB3
 1075 0648 20000000 		.4byte	.LFE3-.LFB3
 1076 064c 01       		.uleb128 0x1
 1077 064d 9C       		.byte	0x9c
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 36


 1078 064e 14       		.uleb128 0x14
 1079 064f 25060000 		.4byte	.LASF116
 1080 0653 01       		.byte	0x1
 1081 0654 2D03     		.2byte	0x32d
 1082 0656 00000000 		.4byte	.LFB4
 1083 065a A8000000 		.4byte	.LFE4-.LFB4
 1084 065e 01       		.uleb128 0x1
 1085 065f 9C       		.byte	0x9c
 1086 0660 99060000 		.4byte	0x699
 1087 0664 15       		.uleb128 0x15
 1088 0665 FE020000 		.4byte	.LASF97
 1089 0669 01       		.byte	0x1
 1090 066a 3503     		.2byte	0x335
 1091 066c 99060000 		.4byte	0x699
 1092 0670 00000000 		.4byte	.LLST0
 1093 0674 16       		.uleb128 0x16
 1094 0675 4A000000 		.4byte	.LVL1
 1095 0679 7C070000 		.4byte	0x77c
 1096 067d 16       		.uleb128 0x16
 1097 067e 56000000 		.4byte	.LVL2
 1098 0682 88070000 		.4byte	0x788
 1099 0686 16       		.uleb128 0x16
 1100 0687 5A000000 		.4byte	.LVL3
 1101 068b 94070000 		.4byte	0x794
 1102 068f 16       		.uleb128 0x16
 1103 0690 78000000 		.4byte	.LVL5
 1104 0694 A0070000 		.4byte	0x7a0
 1105 0698 00       		.byte	0
 1106 0699 10       		.uleb128 0x10
 1107 069a 04       		.byte	0x4
 1108 069b F6010000 		.4byte	0x1f6
 1109 069f 17       		.uleb128 0x17
 1110 06a0 62010000 		.4byte	.LASF95
 1111 06a4 01       		.byte	0x1
 1112 06a5 CE01     		.2byte	0x1ce
 1113 06a7 00000000 		.4byte	.LFB1
 1114 06ab 44000000 		.4byte	.LFE1-.LFB1
 1115 06af 01       		.uleb128 0x1
 1116 06b0 9C       		.byte	0x9c
 1117 06b1 BF060000 		.4byte	0x6bf
 1118 06b5 16       		.uleb128 0x16
 1119 06b6 0C000000 		.4byte	.LVL8
 1120 06ba 3C060000 		.4byte	0x63c
 1121 06be 00       		.byte	0
 1122 06bf 17       		.uleb128 0x17
 1123 06c0 89050000 		.4byte	.LASF96
 1124 06c4 01       		.byte	0x1
 1125 06c5 3F02     		.2byte	0x23f
 1126 06c7 00000000 		.4byte	.LFB2
 1127 06cb 58000000 		.4byte	.LFE2-.LFB2
 1128 06cf 01       		.uleb128 0x1
 1129 06d0 9C       		.byte	0x9c
 1130 06d1 0C070000 		.4byte	0x70c
 1131 06d5 15       		.uleb128 0x15
 1132 06d6 6D020000 		.4byte	.LASF98
 1133 06da 01       		.byte	0x1
 1134 06db 4202     		.2byte	0x242
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 37


 1135 06dd 0C070000 		.4byte	0x70c
 1136 06e1 29000000 		.4byte	.LLST1
 1137 06e5 16       		.uleb128 0x16
 1138 06e6 24000000 		.4byte	.LVL10
 1139 06ea 3C060000 		.4byte	0x63c
 1140 06ee 18       		.uleb128 0x18
 1141 06ef 36000000 		.4byte	.LVL11
 1142 06f3 AB070000 		.4byte	0x7ab
 1143 06f7 02070000 		.4byte	0x702
 1144 06fb 19       		.uleb128 0x19
 1145 06fc 01       		.uleb128 0x1
 1146 06fd 50       		.byte	0x50
 1147 06fe 02       		.uleb128 0x2
 1148 06ff 74       		.byte	0x74
 1149 0700 00       		.sleb128 0
 1150 0701 00       		.byte	0
 1151 0702 16       		.uleb128 0x16
 1152 0703 3A000000 		.4byte	.LVL12
 1153 0707 4E060000 		.4byte	0x64e
 1154 070b 00       		.byte	0
 1155 070c 10       		.uleb128 0x10
 1156 070d 04       		.byte	0x4
 1157 070e 12070000 		.4byte	0x712
 1158 0712 1A       		.uleb128 0x1a
 1159 0713 43050000 		.4byte	0x543
 1160 0717 1B       		.uleb128 0x1b
 1161 0718 2B030000 		.4byte	.LASF99
 1162 071c 05       		.byte	0x5
 1163 071d 5304     		.2byte	0x453
 1164 071f B2040000 		.4byte	0x4b2
 1165 0723 1B       		.uleb128 0x1b
 1166 0724 54060000 		.4byte	.LASF100
 1167 0728 05       		.byte	0x5
 1168 0729 5404     		.2byte	0x454
 1169 072b 2F070000 		.4byte	0x72f
 1170 072f 1A       		.uleb128 0x1a
 1171 0730 29060000 		.4byte	0x629
 1172 0734 1C       		.uleb128 0x1c
 1173 0735 B8030000 		.4byte	.LASF101
 1174 0739 06       		.byte	0x6
 1175 073a B1       		.byte	0xb1
 1176 073b A4000000 		.4byte	0xa4
 1177 073f 1C       		.uleb128 0x1c
 1178 0740 E4060000 		.4byte	.LASF102
 1179 0744 06       		.byte	0x6
 1180 0745 B2       		.byte	0xb2
 1181 0746 A4000000 		.4byte	0xa4
 1182 074a 1C       		.uleb128 0x1c
 1183 074b 06050000 		.4byte	.LASF103
 1184 074f 06       		.byte	0x6
 1185 0750 B3       		.byte	0xb3
 1186 0751 6B000000 		.4byte	0x6b
 1187 0755 1C       		.uleb128 0x1c
 1188 0756 B6050000 		.4byte	.LASF104
 1189 075a 06       		.byte	0x6
 1190 075b B5       		.byte	0xb5
 1191 075c E4050000 		.4byte	0x5e4
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 38


 1192 0760 1C       		.uleb128 0x1c
 1193 0761 91060000 		.4byte	.LASF105
 1194 0765 06       		.byte	0x6
 1195 0766 BC       		.byte	0xbc
 1196 0767 6B070000 		.4byte	0x76b
 1197 076b 1A       		.uleb128 0x1a
 1198 076c 6B000000 		.4byte	0x6b
 1199 0770 1B       		.uleb128 0x1b
 1200 0771 4F010000 		.4byte	.LASF106
 1201 0775 07       		.byte	0x7
 1202 0776 C101     		.2byte	0x1c1
 1203 0778 83000000 		.4byte	0x83
 1204 077c 1D       		.uleb128 0x1d
 1205 077d E5050000 		.4byte	.LASF107
 1206 0781 E5050000 		.4byte	.LASF107
 1207 0785 07       		.byte	0x7
 1208 0786 A301     		.2byte	0x1a3
 1209 0788 1D       		.uleb128 0x1d
 1210 0789 E5030000 		.4byte	.LASF108
 1211 078d E5030000 		.4byte	.LASF108
 1212 0791 07       		.byte	0x7
 1213 0792 B101     		.2byte	0x1b1
 1214 0794 1D       		.uleb128 0x1d
 1215 0795 E4040000 		.4byte	.LASF109
 1216 0799 E4040000 		.4byte	.LASF109
 1217 079d 07       		.byte	0x7
 1218 079e A201     		.2byte	0x1a2
 1219 07a0 1E       		.uleb128 0x1e
 1220 07a1 C8020000 		.4byte	.LASF110
 1221 07a5 C8020000 		.4byte	.LASF110
 1222 07a9 06       		.byte	0x6
 1223 07aa 83       		.byte	0x83
 1224 07ab 1D       		.uleb128 0x1d
 1225 07ac F9060000 		.4byte	.LASF111
 1226 07b0 F9060000 		.4byte	.LASF111
 1227 07b4 07       		.byte	0x7
 1228 07b5 9201     		.2byte	0x192
 1229 07b7 00       		.byte	0
 1230              		.section	.debug_abbrev,"",%progbits
 1231              	.Ldebug_abbrev0:
 1232 0000 01       		.uleb128 0x1
 1233 0001 11       		.uleb128 0x11
 1234 0002 01       		.byte	0x1
 1235 0003 25       		.uleb128 0x25
 1236 0004 0E       		.uleb128 0xe
 1237 0005 13       		.uleb128 0x13
 1238 0006 0B       		.uleb128 0xb
 1239 0007 03       		.uleb128 0x3
 1240 0008 0E       		.uleb128 0xe
 1241 0009 1B       		.uleb128 0x1b
 1242 000a 0E       		.uleb128 0xe
 1243 000b 55       		.uleb128 0x55
 1244 000c 17       		.uleb128 0x17
 1245 000d 11       		.uleb128 0x11
 1246 000e 01       		.uleb128 0x1
 1247 000f 10       		.uleb128 0x10
 1248 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 39


 1249 0011 00       		.byte	0
 1250 0012 00       		.byte	0
 1251 0013 02       		.uleb128 0x2
 1252 0014 24       		.uleb128 0x24
 1253 0015 00       		.byte	0
 1254 0016 0B       		.uleb128 0xb
 1255 0017 0B       		.uleb128 0xb
 1256 0018 3E       		.uleb128 0x3e
 1257 0019 0B       		.uleb128 0xb
 1258 001a 03       		.uleb128 0x3
 1259 001b 0E       		.uleb128 0xe
 1260 001c 00       		.byte	0
 1261 001d 00       		.byte	0
 1262 001e 03       		.uleb128 0x3
 1263 001f 24       		.uleb128 0x24
 1264 0020 00       		.byte	0
 1265 0021 0B       		.uleb128 0xb
 1266 0022 0B       		.uleb128 0xb
 1267 0023 3E       		.uleb128 0x3e
 1268 0024 0B       		.uleb128 0xb
 1269 0025 03       		.uleb128 0x3
 1270 0026 08       		.uleb128 0x8
 1271 0027 00       		.byte	0
 1272 0028 00       		.byte	0
 1273 0029 04       		.uleb128 0x4
 1274 002a 16       		.uleb128 0x16
 1275 002b 00       		.byte	0
 1276 002c 03       		.uleb128 0x3
 1277 002d 0E       		.uleb128 0xe
 1278 002e 3A       		.uleb128 0x3a
 1279 002f 0B       		.uleb128 0xb
 1280 0030 3B       		.uleb128 0x3b
 1281 0031 05       		.uleb128 0x5
 1282 0032 49       		.uleb128 0x49
 1283 0033 13       		.uleb128 0x13
 1284 0034 00       		.byte	0
 1285 0035 00       		.byte	0
 1286 0036 05       		.uleb128 0x5
 1287 0037 35       		.uleb128 0x35
 1288 0038 00       		.byte	0
 1289 0039 49       		.uleb128 0x49
 1290 003a 13       		.uleb128 0x13
 1291 003b 00       		.byte	0
 1292 003c 00       		.byte	0
 1293 003d 06       		.uleb128 0x6
 1294 003e 13       		.uleb128 0x13
 1295 003f 01       		.byte	0x1
 1296 0040 0B       		.uleb128 0xb
 1297 0041 0B       		.uleb128 0xb
 1298 0042 3A       		.uleb128 0x3a
 1299 0043 0B       		.uleb128 0xb
 1300 0044 3B       		.uleb128 0x3b
 1301 0045 0B       		.uleb128 0xb
 1302 0046 01       		.uleb128 0x1
 1303 0047 13       		.uleb128 0x13
 1304 0048 00       		.byte	0
 1305 0049 00       		.byte	0
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 40


 1306 004a 07       		.uleb128 0x7
 1307 004b 0D       		.uleb128 0xd
 1308 004c 00       		.byte	0
 1309 004d 03       		.uleb128 0x3
 1310 004e 0E       		.uleb128 0xe
 1311 004f 3A       		.uleb128 0x3a
 1312 0050 0B       		.uleb128 0xb
 1313 0051 3B       		.uleb128 0x3b
 1314 0052 0B       		.uleb128 0xb
 1315 0053 49       		.uleb128 0x49
 1316 0054 13       		.uleb128 0x13
 1317 0055 38       		.uleb128 0x38
 1318 0056 0B       		.uleb128 0xb
 1319 0057 00       		.byte	0
 1320 0058 00       		.byte	0
 1321 0059 08       		.uleb128 0x8
 1322 005a 16       		.uleb128 0x16
 1323 005b 00       		.byte	0
 1324 005c 03       		.uleb128 0x3
 1325 005d 0E       		.uleb128 0xe
 1326 005e 3A       		.uleb128 0x3a
 1327 005f 0B       		.uleb128 0xb
 1328 0060 3B       		.uleb128 0x3b
 1329 0061 0B       		.uleb128 0xb
 1330 0062 49       		.uleb128 0x49
 1331 0063 13       		.uleb128 0x13
 1332 0064 00       		.byte	0
 1333 0065 00       		.byte	0
 1334 0066 09       		.uleb128 0x9
 1335 0067 01       		.uleb128 0x1
 1336 0068 01       		.byte	0x1
 1337 0069 49       		.uleb128 0x49
 1338 006a 13       		.uleb128 0x13
 1339 006b 01       		.uleb128 0x1
 1340 006c 13       		.uleb128 0x13
 1341 006d 00       		.byte	0
 1342 006e 00       		.byte	0
 1343 006f 0A       		.uleb128 0xa
 1344 0070 21       		.uleb128 0x21
 1345 0071 00       		.byte	0
 1346 0072 49       		.uleb128 0x49
 1347 0073 13       		.uleb128 0x13
 1348 0074 2F       		.uleb128 0x2f
 1349 0075 0B       		.uleb128 0xb
 1350 0076 00       		.byte	0
 1351 0077 00       		.byte	0
 1352 0078 0B       		.uleb128 0xb
 1353 0079 0D       		.uleb128 0xd
 1354 007a 00       		.byte	0
 1355 007b 03       		.uleb128 0x3
 1356 007c 0E       		.uleb128 0xe
 1357 007d 3A       		.uleb128 0x3a
 1358 007e 0B       		.uleb128 0xb
 1359 007f 3B       		.uleb128 0x3b
 1360 0080 05       		.uleb128 0x5
 1361 0081 49       		.uleb128 0x49
 1362 0082 13       		.uleb128 0x13
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 41


 1363 0083 38       		.uleb128 0x38
 1364 0084 0B       		.uleb128 0xb
 1365 0085 00       		.byte	0
 1366 0086 00       		.byte	0
 1367 0087 0C       		.uleb128 0xc
 1368 0088 13       		.uleb128 0x13
 1369 0089 01       		.byte	0x1
 1370 008a 0B       		.uleb128 0xb
 1371 008b 0B       		.uleb128 0xb
 1372 008c 3A       		.uleb128 0x3a
 1373 008d 0B       		.uleb128 0xb
 1374 008e 3B       		.uleb128 0x3b
 1375 008f 05       		.uleb128 0x5
 1376 0090 01       		.uleb128 0x1
 1377 0091 13       		.uleb128 0x13
 1378 0092 00       		.byte	0
 1379 0093 00       		.byte	0
 1380 0094 0D       		.uleb128 0xd
 1381 0095 0D       		.uleb128 0xd
 1382 0096 00       		.byte	0
 1383 0097 03       		.uleb128 0x3
 1384 0098 08       		.uleb128 0x8
 1385 0099 3A       		.uleb128 0x3a
 1386 009a 0B       		.uleb128 0xb
 1387 009b 3B       		.uleb128 0x3b
 1388 009c 05       		.uleb128 0x5
 1389 009d 49       		.uleb128 0x49
 1390 009e 13       		.uleb128 0x13
 1391 009f 38       		.uleb128 0x38
 1392 00a0 0B       		.uleb128 0xb
 1393 00a1 00       		.byte	0
 1394 00a2 00       		.byte	0
 1395 00a3 0E       		.uleb128 0xe
 1396 00a4 13       		.uleb128 0x13
 1397 00a5 01       		.byte	0x1
 1398 00a6 0B       		.uleb128 0xb
 1399 00a7 05       		.uleb128 0x5
 1400 00a8 3A       		.uleb128 0x3a
 1401 00a9 0B       		.uleb128 0xb
 1402 00aa 3B       		.uleb128 0x3b
 1403 00ab 05       		.uleb128 0x5
 1404 00ac 01       		.uleb128 0x1
 1405 00ad 13       		.uleb128 0x13
 1406 00ae 00       		.byte	0
 1407 00af 00       		.byte	0
 1408 00b0 0F       		.uleb128 0xf
 1409 00b1 0D       		.uleb128 0xd
 1410 00b2 00       		.byte	0
 1411 00b3 03       		.uleb128 0x3
 1412 00b4 0E       		.uleb128 0xe
 1413 00b5 3A       		.uleb128 0x3a
 1414 00b6 0B       		.uleb128 0xb
 1415 00b7 3B       		.uleb128 0x3b
 1416 00b8 05       		.uleb128 0x5
 1417 00b9 49       		.uleb128 0x49
 1418 00ba 13       		.uleb128 0x13
 1419 00bb 38       		.uleb128 0x38
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 42


 1420 00bc 05       		.uleb128 0x5
 1421 00bd 00       		.byte	0
 1422 00be 00       		.byte	0
 1423 00bf 10       		.uleb128 0x10
 1424 00c0 0F       		.uleb128 0xf
 1425 00c1 00       		.byte	0
 1426 00c2 0B       		.uleb128 0xb
 1427 00c3 0B       		.uleb128 0xb
 1428 00c4 49       		.uleb128 0x49
 1429 00c5 13       		.uleb128 0x13
 1430 00c6 00       		.byte	0
 1431 00c7 00       		.byte	0
 1432 00c8 11       		.uleb128 0x11
 1433 00c9 26       		.uleb128 0x26
 1434 00ca 00       		.byte	0
 1435 00cb 00       		.byte	0
 1436 00cc 00       		.byte	0
 1437 00cd 12       		.uleb128 0x12
 1438 00ce 0F       		.uleb128 0xf
 1439 00cf 00       		.byte	0
 1440 00d0 0B       		.uleb128 0xb
 1441 00d1 0B       		.uleb128 0xb
 1442 00d2 00       		.byte	0
 1443 00d3 00       		.byte	0
 1444 00d4 13       		.uleb128 0x13
 1445 00d5 2E       		.uleb128 0x2e
 1446 00d6 00       		.byte	0
 1447 00d7 03       		.uleb128 0x3
 1448 00d8 0E       		.uleb128 0xe
 1449 00d9 3A       		.uleb128 0x3a
 1450 00da 0B       		.uleb128 0xb
 1451 00db 3B       		.uleb128 0x3b
 1452 00dc 05       		.uleb128 0x5
 1453 00dd 27       		.uleb128 0x27
 1454 00de 19       		.uleb128 0x19
 1455 00df 11       		.uleb128 0x11
 1456 00e0 01       		.uleb128 0x1
 1457 00e1 12       		.uleb128 0x12
 1458 00e2 06       		.uleb128 0x6
 1459 00e3 40       		.uleb128 0x40
 1460 00e4 18       		.uleb128 0x18
 1461 00e5 9742     		.uleb128 0x2117
 1462 00e7 19       		.uleb128 0x19
 1463 00e8 00       		.byte	0
 1464 00e9 00       		.byte	0
 1465 00ea 14       		.uleb128 0x14
 1466 00eb 2E       		.uleb128 0x2e
 1467 00ec 01       		.byte	0x1
 1468 00ed 03       		.uleb128 0x3
 1469 00ee 0E       		.uleb128 0xe
 1470 00ef 3A       		.uleb128 0x3a
 1471 00f0 0B       		.uleb128 0xb
 1472 00f1 3B       		.uleb128 0x3b
 1473 00f2 05       		.uleb128 0x5
 1474 00f3 27       		.uleb128 0x27
 1475 00f4 19       		.uleb128 0x19
 1476 00f5 11       		.uleb128 0x11
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 43


 1477 00f6 01       		.uleb128 0x1
 1478 00f7 12       		.uleb128 0x12
 1479 00f8 06       		.uleb128 0x6
 1480 00f9 40       		.uleb128 0x40
 1481 00fa 18       		.uleb128 0x18
 1482 00fb 9742     		.uleb128 0x2117
 1483 00fd 19       		.uleb128 0x19
 1484 00fe 01       		.uleb128 0x1
 1485 00ff 13       		.uleb128 0x13
 1486 0100 00       		.byte	0
 1487 0101 00       		.byte	0
 1488 0102 15       		.uleb128 0x15
 1489 0103 34       		.uleb128 0x34
 1490 0104 00       		.byte	0
 1491 0105 03       		.uleb128 0x3
 1492 0106 0E       		.uleb128 0xe
 1493 0107 3A       		.uleb128 0x3a
 1494 0108 0B       		.uleb128 0xb
 1495 0109 3B       		.uleb128 0x3b
 1496 010a 05       		.uleb128 0x5
 1497 010b 49       		.uleb128 0x49
 1498 010c 13       		.uleb128 0x13
 1499 010d 02       		.uleb128 0x2
 1500 010e 17       		.uleb128 0x17
 1501 010f 00       		.byte	0
 1502 0110 00       		.byte	0
 1503 0111 16       		.uleb128 0x16
 1504 0112 898201   		.uleb128 0x4109
 1505 0115 00       		.byte	0
 1506 0116 11       		.uleb128 0x11
 1507 0117 01       		.uleb128 0x1
 1508 0118 31       		.uleb128 0x31
 1509 0119 13       		.uleb128 0x13
 1510 011a 00       		.byte	0
 1511 011b 00       		.byte	0
 1512 011c 17       		.uleb128 0x17
 1513 011d 2E       		.uleb128 0x2e
 1514 011e 01       		.byte	0x1
 1515 011f 3F       		.uleb128 0x3f
 1516 0120 19       		.uleb128 0x19
 1517 0121 03       		.uleb128 0x3
 1518 0122 0E       		.uleb128 0xe
 1519 0123 3A       		.uleb128 0x3a
 1520 0124 0B       		.uleb128 0xb
 1521 0125 3B       		.uleb128 0x3b
 1522 0126 05       		.uleb128 0x5
 1523 0127 27       		.uleb128 0x27
 1524 0128 19       		.uleb128 0x19
 1525 0129 11       		.uleb128 0x11
 1526 012a 01       		.uleb128 0x1
 1527 012b 12       		.uleb128 0x12
 1528 012c 06       		.uleb128 0x6
 1529 012d 40       		.uleb128 0x40
 1530 012e 18       		.uleb128 0x18
 1531 012f 9742     		.uleb128 0x2117
 1532 0131 19       		.uleb128 0x19
 1533 0132 01       		.uleb128 0x1
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 44


 1534 0133 13       		.uleb128 0x13
 1535 0134 00       		.byte	0
 1536 0135 00       		.byte	0
 1537 0136 18       		.uleb128 0x18
 1538 0137 898201   		.uleb128 0x4109
 1539 013a 01       		.byte	0x1
 1540 013b 11       		.uleb128 0x11
 1541 013c 01       		.uleb128 0x1
 1542 013d 31       		.uleb128 0x31
 1543 013e 13       		.uleb128 0x13
 1544 013f 01       		.uleb128 0x1
 1545 0140 13       		.uleb128 0x13
 1546 0141 00       		.byte	0
 1547 0142 00       		.byte	0
 1548 0143 19       		.uleb128 0x19
 1549 0144 8A8201   		.uleb128 0x410a
 1550 0147 00       		.byte	0
 1551 0148 02       		.uleb128 0x2
 1552 0149 18       		.uleb128 0x18
 1553 014a 9142     		.uleb128 0x2111
 1554 014c 18       		.uleb128 0x18
 1555 014d 00       		.byte	0
 1556 014e 00       		.byte	0
 1557 014f 1A       		.uleb128 0x1a
 1558 0150 26       		.uleb128 0x26
 1559 0151 00       		.byte	0
 1560 0152 49       		.uleb128 0x49
 1561 0153 13       		.uleb128 0x13
 1562 0154 00       		.byte	0
 1563 0155 00       		.byte	0
 1564 0156 1B       		.uleb128 0x1b
 1565 0157 34       		.uleb128 0x34
 1566 0158 00       		.byte	0
 1567 0159 03       		.uleb128 0x3
 1568 015a 0E       		.uleb128 0xe
 1569 015b 3A       		.uleb128 0x3a
 1570 015c 0B       		.uleb128 0xb
 1571 015d 3B       		.uleb128 0x3b
 1572 015e 05       		.uleb128 0x5
 1573 015f 49       		.uleb128 0x49
 1574 0160 13       		.uleb128 0x13
 1575 0161 3F       		.uleb128 0x3f
 1576 0162 19       		.uleb128 0x19
 1577 0163 3C       		.uleb128 0x3c
 1578 0164 19       		.uleb128 0x19
 1579 0165 00       		.byte	0
 1580 0166 00       		.byte	0
 1581 0167 1C       		.uleb128 0x1c
 1582 0168 34       		.uleb128 0x34
 1583 0169 00       		.byte	0
 1584 016a 03       		.uleb128 0x3
 1585 016b 0E       		.uleb128 0xe
 1586 016c 3A       		.uleb128 0x3a
 1587 016d 0B       		.uleb128 0xb
 1588 016e 3B       		.uleb128 0x3b
 1589 016f 0B       		.uleb128 0xb
 1590 0170 49       		.uleb128 0x49
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 45


 1591 0171 13       		.uleb128 0x13
 1592 0172 3F       		.uleb128 0x3f
 1593 0173 19       		.uleb128 0x19
 1594 0174 3C       		.uleb128 0x3c
 1595 0175 19       		.uleb128 0x19
 1596 0176 00       		.byte	0
 1597 0177 00       		.byte	0
 1598 0178 1D       		.uleb128 0x1d
 1599 0179 2E       		.uleb128 0x2e
 1600 017a 00       		.byte	0
 1601 017b 3F       		.uleb128 0x3f
 1602 017c 19       		.uleb128 0x19
 1603 017d 3C       		.uleb128 0x3c
 1604 017e 19       		.uleb128 0x19
 1605 017f 6E       		.uleb128 0x6e
 1606 0180 0E       		.uleb128 0xe
 1607 0181 03       		.uleb128 0x3
 1608 0182 0E       		.uleb128 0xe
 1609 0183 3A       		.uleb128 0x3a
 1610 0184 0B       		.uleb128 0xb
 1611 0185 3B       		.uleb128 0x3b
 1612 0186 05       		.uleb128 0x5
 1613 0187 00       		.byte	0
 1614 0188 00       		.byte	0
 1615 0189 1E       		.uleb128 0x1e
 1616 018a 2E       		.uleb128 0x2e
 1617 018b 00       		.byte	0
 1618 018c 3F       		.uleb128 0x3f
 1619 018d 19       		.uleb128 0x19
 1620 018e 3C       		.uleb128 0x3c
 1621 018f 19       		.uleb128 0x19
 1622 0190 6E       		.uleb128 0x6e
 1623 0191 0E       		.uleb128 0xe
 1624 0192 03       		.uleb128 0x3
 1625 0193 0E       		.uleb128 0xe
 1626 0194 3A       		.uleb128 0x3a
 1627 0195 0B       		.uleb128 0xb
 1628 0196 3B       		.uleb128 0x3b
 1629 0197 0B       		.uleb128 0xb
 1630 0198 00       		.byte	0
 1631 0199 00       		.byte	0
 1632 019a 00       		.byte	0
 1633              		.section	.debug_loc,"",%progbits
 1634              	.Ldebug_loc0:
 1635              	.LLST0:
 1636 0000 0E000000 		.4byte	.LVL0
 1637 0004 49000000 		.4byte	.LVL1-1
 1638 0008 0100     		.2byte	0x1
 1639 000a 50       		.byte	0x50
 1640 000b 5C000000 		.4byte	.LVL4
 1641 000f 77000000 		.4byte	.LVL5-1
 1642 0013 0100     		.2byte	0x1
 1643 0015 50       		.byte	0x50
 1644 0016 7A000000 		.4byte	.LVL6
 1645 001a 8A000000 		.4byte	.LVL7
 1646 001e 0100     		.2byte	0x1
 1647 0020 50       		.byte	0x50
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 46


 1648 0021 00000000 		.4byte	0
 1649 0025 00000000 		.4byte	0
 1650              	.LLST1:
 1651 0029 1A000000 		.4byte	.LVL9
 1652 002d 3A000000 		.4byte	.LVL13
 1653 0031 0100     		.2byte	0x1
 1654 0033 54       		.byte	0x54
 1655 0034 00000000 		.4byte	0
 1656 0038 00000000 		.4byte	0
 1657              		.section	.debug_aranges,"",%progbits
 1658 0000 34000000 		.4byte	0x34
 1659 0004 0200     		.2byte	0x2
 1660 0006 00000000 		.4byte	.Ldebug_info0
 1661 000a 04       		.byte	0x4
 1662 000b 00       		.byte	0
 1663 000c 0000     		.2byte	0
 1664 000e 0000     		.2byte	0
 1665 0010 00000000 		.4byte	.LFB3
 1666 0014 20000000 		.4byte	.LFE3-.LFB3
 1667 0018 00000000 		.4byte	.LFB4
 1668 001c A8000000 		.4byte	.LFE4-.LFB4
 1669 0020 00000000 		.4byte	.LFB1
 1670 0024 44000000 		.4byte	.LFE1-.LFB1
 1671 0028 00000000 		.4byte	.LFB2
 1672 002c 58000000 		.4byte	.LFE2-.LFB2
 1673 0030 00000000 		.4byte	0
 1674 0034 00000000 		.4byte	0
 1675              		.section	.debug_ranges,"",%progbits
 1676              	.Ldebug_ranges0:
 1677 0000 00000000 		.4byte	.LFB3
 1678 0004 20000000 		.4byte	.LFE3
 1679 0008 00000000 		.4byte	.LFB4
 1680 000c A8000000 		.4byte	.LFE4
 1681 0010 00000000 		.4byte	.LFB1
 1682 0014 44000000 		.4byte	.LFE1
 1683 0018 00000000 		.4byte	.LFB2
 1684 001c 58000000 		.4byte	.LFE2
 1685 0020 00000000 		.4byte	0
 1686 0024 00000000 		.4byte	0
 1687              		.section	.debug_line,"",%progbits
 1688              	.Ldebug_line0:
 1689 0000 43010000 		.section	.debug_str,"MS",%progbits,1
 1689      0200CB00 
 1689      00000201 
 1689      FB0E0D00 
 1689      01010101 
 1690              	.LASF93:
 1691 0000 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 1691      656E7365 
 1691      5F464C41 
 1691      53485F53 
 1691      54525543 
 1692              	.LASF62:
 1693 0016 77646774 		.ascii	"wdgtList\000"
 1693      4C697374 
 1693      00
 1694              	.LASF67:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 47


 1695 001f 736E7254 		.ascii	"snrTestRawCount\000"
 1695      65737452 
 1695      6177436F 
 1695      756E7400 
 1696              	.LASF69:
 1697 002f 7363616E 		.ascii	"scanCurrentISC\000"
 1697      43757272 
 1697      656E7449 
 1697      534300
 1698              	.LASF44:
 1699 003e 62736C6E 		.ascii	"bsln\000"
 1699      00
 1700              	.LASF22:
 1701 0043 70617261 		.ascii	"param4\000"
 1701      6D3400
 1702              	.LASF34:
 1703 004a 69646163 		.ascii	"idacGainIndex\000"
 1703      4761696E 
 1703      496E6465 
 1703      7800
 1704              	.LASF24:
 1705 0058 70617261 		.ascii	"param6\000"
 1705      6D3600
 1706              	.LASF32:
 1707 005f 6C6F7742 		.ascii	"lowBslnRst\000"
 1707      736C6E52 
 1707      737400
 1708              	.LASF46:
 1709 006a 64696666 		.ascii	"diff\000"
 1709      00
 1710              	.LASF87:
 1711 006f 746F7461 		.ascii	"totalNumSns\000"
 1711      6C4E756D 
 1711      536E7300 
 1712              	.LASF33:
 1713 007b 69646163 		.ascii	"idacMod\000"
 1713      4D6F6400 
 1714              	.LASF78:
 1715 0083 64725368 		.ascii	"drShift\000"
 1715      69667400 
 1716              	.LASF114:
 1717 008b 453A5C68 		.ascii	"E:\\hardware\\cy8ckit-043-slider\\cy8ckit-043-slide"
 1717      61726477 
 1717      6172655C 
 1717      63793863 
 1717      6B69742D 
 1718 00bb 722E6379 		.ascii	"r.cydsn\000"
 1718      64736E00 
 1719              	.LASF71:
 1720 00c3 6873696F 		.ascii	"hsiomPtr\000"
 1720      6D507472 
 1720      00
 1721              	.LASF31:
 1722 00cc 6F6E4465 		.ascii	"onDebounce\000"
 1722      626F756E 
 1722      636500
 1723              	.LASF39:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 48


 1724 00d7 73697A65 		.ascii	"sizetype\000"
 1724      74797065 
 1724      00
 1725              	.LASF91:
 1726 00e0 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 1726      656E7365 
 1726      5F464C41 
 1726      53485F57 
 1726      445F5354 
 1727              	.LASF51:
 1728 00f9 636F6E66 		.ascii	"configId\000"
 1728      69674964 
 1728      00
 1729              	.LASF72:
 1730 0102 70635074 		.ascii	"pcPtr\000"
 1730      7200
 1731              	.LASF48:
 1732 0108 69646163 		.ascii	"idacComp\000"
 1732      436F6D70 
 1732      00
 1733              	.LASF60:
 1734 0111 63736430 		.ascii	"csd0Config\000"
 1734      436F6E66 
 1734      696700
 1735              	.LASF6:
 1736 011c 6C6F6E67 		.ascii	"long long int\000"
 1736      206C6F6E 
 1736      6720696E 
 1736      7400
 1737              	.LASF75:
 1738 012a 6873696F 		.ascii	"hsiomMask\000"
 1738      6D4D6173 
 1738      6B00
 1739              	.LASF36:
 1740 0134 736E7343 		.ascii	"snsClkSource\000"
 1740      6C6B536F 
 1740      75726365 
 1740      00
 1741              	.LASF20:
 1742 0141 70617261 		.ascii	"param2\000"
 1742      6D3200
 1743              	.LASF21:
 1744 0148 70617261 		.ascii	"param3\000"
 1744      6D3300
 1745              	.LASF106:
 1746 014f 43617053 		.ascii	"CapSense_configCsd\000"
 1746      656E7365 
 1746      5F636F6E 
 1746      66696743 
 1746      736400
 1747              	.LASF95:
 1748 0162 43617053 		.ascii	"CapSense_CSDPostSingleScan\000"
 1748      656E7365 
 1748      5F435344 
 1748      506F7374 
 1748      53696E67 
 1749              	.LASF2:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 49


 1750 017d 73686F72 		.ascii	"short int\000"
 1750      7420696E 
 1750      7400
 1751              	.LASF28:
 1752 0187 6E6F6973 		.ascii	"noiseTh\000"
 1752      65546800 
 1753              	.LASF52:
 1754 018f 64657669 		.ascii	"deviceId\000"
 1754      63654964 
 1754      00
 1755              	.LASF10:
 1756 0198 75696E74 		.ascii	"uint16\000"
 1756      313600
 1757              	.LASF112:
 1758 019f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1758      43313120 
 1758      352E342E 
 1758      31203230 
 1758      31363036 
 1759 01d2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1759      20726576 
 1759      6973696F 
 1759      6E203233 
 1759      37373135 
 1760 0205 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1760      66756E63 
 1760      74696F6E 
 1760      2D736563 
 1760      74696F6E 
 1761              	.LASF85:
 1762 022d 70747232 		.ascii	"ptr2DebounceArr\000"
 1762      4465626F 
 1762      756E6365 
 1762      41727200 
 1763              	.LASF9:
 1764 023d 75696E74 		.ascii	"uint8\000"
 1764      3800
 1765              	.LASF74:
 1766 0243 70735074 		.ascii	"psPtr\000"
 1766      7200
 1767              	.LASF35:
 1768 0249 736E7343 		.ascii	"snsClk\000"
 1768      6C6B00
 1769              	.LASF115:
 1770 0250 43617053 		.ascii	"CapSense_SsCSDPostScan\000"
 1770      656E7365 
 1770      5F537343 
 1770      5344506F 
 1770      73745363 
 1771              	.LASF12:
 1772 0267 666C6F61 		.ascii	"float\000"
 1772      7400
 1773              	.LASF98:
 1774 026d 63757253 		.ascii	"curSnsIOPtr\000"
 1774      6E73494F 
 1774      50747200 
 1775              	.LASF43:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 50


 1776 0279 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 1776      656E7365 
 1776      5F52414D 
 1776      5F57445F 
 1776      4C495354 
 1777              	.LASF65:
 1778 0295 736E7254 		.ascii	"snrTestSensorId\000"
 1778      65737453 
 1778      656E736F 
 1778      72496400 
 1779              	.LASF41:
 1780 02a5 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 1780      656E7365 
 1780      5F52414D 
 1780      5F57445F 
 1780      42555454 
 1781              	.LASF14:
 1782 02c3 63686172 		.ascii	"char\000"
 1782      00
 1783              	.LASF110:
 1784 02c8 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 1784      656E7365 
 1784      5F537350 
 1784      6F737441 
 1784      6C6C5769 
 1785              	.LASF4:
 1786 02e6 6C6F6E67 		.ascii	"long int\000"
 1786      20696E74 
 1786      00
 1787              	.LASF79:
 1788 02ef 73686966 		.ascii	"shift\000"
 1788      7400
 1789              	.LASF88:
 1790 02f5 77646774 		.ascii	"wdgtType\000"
 1790      54797065 
 1790      00
 1791              	.LASF97:
 1792 02fe 70747257 		.ascii	"ptrWdgt\000"
 1792      64677400 
 1793              	.LASF82:
 1794 0306 70747232 		.ascii	"ptr2WdgtRam\000"
 1794      57646774 
 1794      52616D00 
 1795              	.LASF80:
 1796 0312 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 1796      656E7365 
 1796      5F464C41 
 1796      53485F49 
 1796      4F5F5354 
 1797              	.LASF99:
 1798 032b 43617053 		.ascii	"CapSense_dsRam\000"
 1798      656E7365 
 1798      5F647352 
 1798      616D00
 1799              	.LASF27:
 1800 033a 66696E67 		.ascii	"fingerTh\000"
 1800      65725468 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 51


 1800      00
 1801              	.LASF89:
 1802 0343 6E756D43 		.ascii	"numCols\000"
 1802      6F6C7300 
 1803              	.LASF30:
 1804 034b 68797374 		.ascii	"hysteresis\000"
 1804      65726573 
 1804      697300
 1805              	.LASF42:
 1806 0356 736C6964 		.ascii	"slider\000"
 1806      657200
 1807              	.LASF54:
 1808 035d 74756E65 		.ascii	"tunerCmd\000"
 1808      72436D64 
 1808      00
 1809              	.LASF94:
 1810 0366 6C6F6E67 		.ascii	"long double\000"
 1810      20646F75 
 1810      626C6500 
 1811              	.LASF23:
 1812 0372 70617261 		.ascii	"param5\000"
 1812      6D3500
 1813              	.LASF58:
 1814 0379 77646774 		.ascii	"wdgtStatus\000"
 1814      53746174 
 1814      757300
 1815              	.LASF113:
 1816 0384 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_INT.c\000"
 1816      72617465 
 1816      645F536F 
 1816      75726365 
 1816      5C50536F 
 1817              	.LASF1:
 1818 03aa 756E7369 		.ascii	"unsigned char\000"
 1818      676E6564 
 1818      20636861 
 1818      7200
 1819              	.LASF101:
 1820 03b8 43617053 		.ascii	"CapSense_widgetIndex\000"
 1820      656E7365 
 1820      5F776964 
 1820      67657449 
 1820      6E646578 
 1821              	.LASF16:
 1822 03cd 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 1822      656E7365 
 1822      5F544852 
 1822      4553484F 
 1822      4C445F54 
 1823              	.LASF108:
 1824 03e5 43617053 		.ascii	"CapSense_SsCSDConnectSensorExt\000"
 1824      656E7365 
 1824      5F537343 
 1824      5344436F 
 1824      6E6E6563 
 1825              	.LASF50:
 1826 0404 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 52


 1826      656E7365 
 1826      5F52414D 
 1826      5F534E53 
 1826      5F4C4953 
 1827              	.LASF7:
 1828 0421 6C6F6E67 		.ascii	"long long unsigned int\000"
 1828      206C6F6E 
 1828      6720756E 
 1828      7369676E 
 1828      65642069 
 1829              	.LASF86:
 1830 0438 73746174 		.ascii	"staticConfig\000"
 1830      6963436F 
 1830      6E666967 
 1830      00
 1831              	.LASF8:
 1832 0445 756E7369 		.ascii	"unsigned int\000"
 1832      676E6564 
 1832      20696E74 
 1832      00
 1833              	.LASF18:
 1834 0452 70617261 		.ascii	"param0\000"
 1834      6D3000
 1835              	.LASF57:
 1836 0459 77646774 		.ascii	"wdgtEnable\000"
 1836      456E6162 
 1836      6C6500
 1837              	.LASF19:
 1838 0464 70617261 		.ascii	"param1\000"
 1838      6D3100
 1839              	.LASF15:
 1840 046b 72656733 		.ascii	"reg32\000"
 1840      3200
 1841              	.LASF49:
 1842 0471 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 1842      656E7365 
 1842      5F52414D 
 1842      5F534E53 
 1842      5F535452 
 1843              	.LASF17:
 1844 0489 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 1844      656E7365 
 1844      5F4C4F57 
 1844      5F42534C 
 1844      4E5F5253 
 1845              	.LASF56:
 1846 04a4 73746174 		.ascii	"status\000"
 1846      757300
 1847              	.LASF53:
 1848 04ab 6877436C 		.ascii	"hwClock\000"
 1848      6F636B00 
 1849              	.LASF66:
 1850 04b3 736E7254 		.ascii	"snrTestScanCounter\000"
 1850      65737453 
 1850      63616E43 
 1850      6F756E74 
 1850      657200
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 53


 1851              	.LASF26:
 1852 04c6 7265736F 		.ascii	"resolution\000"
 1852      6C757469 
 1852      6F6E00
 1853              	.LASF3:
 1854 04d1 73686F72 		.ascii	"short unsigned int\000"
 1854      7420756E 
 1854      7369676E 
 1854      65642069 
 1854      6E7400
 1855              	.LASF109:
 1856 04e4 43617053 		.ascii	"CapSense_SsCSDStartSample\000"
 1856      656E7365 
 1856      5F537343 
 1856      53445374 
 1856      61727453 
 1857              	.LASF63:
 1858 04fe 736E734C 		.ascii	"snsList\000"
 1858      69737400 
 1859              	.LASF103:
 1860 0506 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 1860      656E7365 
 1860      5F726571 
 1860      75657374 
 1860      5363616E 
 1861              	.LASF61:
 1862 0524 6D6F6443 		.ascii	"modCsdClk\000"
 1862      7364436C 
 1862      6B00
 1863              	.LASF55:
 1864 052e 7363616E 		.ascii	"scanCounter\000"
 1864      436F756E 
 1864      74657200 
 1865              	.LASF29:
 1866 053a 6E4E6F69 		.ascii	"nNoiseTh\000"
 1866      73655468 
 1866      00
 1867              	.LASF70:
 1868 0543 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 1868      656E7365 
 1868      5F52414D 
 1868      5F535452 
 1868      55435400 
 1869              	.LASF38:
 1870 0557 73696750 		.ascii	"sigPFC\000"
 1870      464300
 1871              	.LASF11:
 1872 055e 75696E74 		.ascii	"uint32\000"
 1872      333200
 1873              	.LASF68:
 1874 0565 7363616E 		.ascii	"scanCsdISC\000"
 1874      43736449 
 1874      534300
 1875              	.LASF5:
 1876 0570 6C6F6E67 		.ascii	"long unsigned int\000"
 1876      20756E73 
 1876      69676E65 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 54


 1876      6420696E 
 1876      7400
 1877              	.LASF13:
 1878 0582 646F7562 		.ascii	"double\000"
 1878      6C6500
 1879              	.LASF96:
 1880 0589 43617053 		.ascii	"CapSense_CSDPostMultiScan\000"
 1880      656E7365 
 1880      5F435344 
 1880      506F7374 
 1880      4D756C74 
 1881              	.LASF45:
 1882 05a3 62736C6E 		.ascii	"bslnExt\000"
 1882      45787400 
 1883              	.LASF77:
 1884 05ab 6873696F 		.ascii	"hsiomShift\000"
 1884      6D536869 
 1884      667400
 1885              	.LASF104:
 1886 05b6 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 1886      656E7365 
 1886      5F637572 
 1886      52616D53 
 1886      6E735074 
 1887              	.LASF73:
 1888 05cc 64725074 		.ascii	"drPtr\000"
 1888      7200
 1889              	.LASF76:
 1890 05d2 6D61736B 		.ascii	"mask\000"
 1890      00
 1891              	.LASF47:
 1892 05d7 6E656742 		.ascii	"negBslnRstCnt\000"
 1892      736C6E52 
 1892      7374436E 
 1892      7400
 1893              	.LASF107:
 1894 05e5 43617053 		.ascii	"CapSense_SsCSDSetUpIdacs\000"
 1894      656E7365 
 1894      5F537343 
 1894      53445365 
 1894      74557049 
 1895              	.LASF83:
 1896 05fe 70747232 		.ascii	"ptr2SnsRam\000"
 1896      536E7352 
 1896      616D00
 1897              	.LASF0:
 1898 0609 7369676E 		.ascii	"signed char\000"
 1898      65642063 
 1898      68617200 
 1899              	.LASF84:
 1900 0615 70747232 		.ascii	"ptr2FltrHistory\000"
 1900      466C7472 
 1900      48697374 
 1900      6F727900 
 1901              	.LASF116:
 1902 0625 43617053 		.ascii	"CapSense_SsCSDInitNextScan\000"
 1902      656E7365 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 55


 1902      5F537343 
 1902      5344496E 
 1902      69744E65 
 1903              	.LASF92:
 1904 0640 77646774 		.ascii	"wdgtArray\000"
 1904      41727261 
 1904      7900
 1905              	.LASF37:
 1906 064a 66696E67 		.ascii	"fingerCap\000"
 1906      65724361 
 1906      7000
 1907              	.LASF100:
 1908 0654 43617053 		.ascii	"CapSense_dsFlash\000"
 1908      656E7365 
 1908      5F647346 
 1908      6C617368 
 1908      00
 1909              	.LASF40:
 1910 0665 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 1910      656E7365 
 1910      5F52414D 
 1910      5F57445F 
 1910      42415345 
 1911              	.LASF64:
 1912 0681 736E7254 		.ascii	"snrTestWidgetId\000"
 1912      65737457 
 1912      69646765 
 1912      74496400 
 1913              	.LASF105:
 1914 0691 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 1914      656E7365 
 1914      5F736361 
 1914      6E467265 
 1914      71496E64 
 1915              	.LASF25:
 1916 06a8 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 1916      5453454E 
 1916      53455F43 
 1916      53445F4E 
 1916      4F495345 
 1917              	.LASF81:
 1918 06cd 70747232 		.ascii	"ptr2SnsFlash\000"
 1918      536E7346 
 1918      6C617368 
 1918      00
 1919              	.LASF59:
 1920 06da 736E7353 		.ascii	"snsStatus\000"
 1920      74617475 
 1920      7300
 1921              	.LASF102:
 1922 06e4 43617053 		.ascii	"CapSense_sensorIndex\000"
 1922      656E7365 
 1922      5F73656E 
 1922      736F7249 
 1922      6E646578 
 1923              	.LASF111:
 1924 06f9 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccTRhRkh.s 			page 56


 1924      656E7365 
 1924      5F435344 
 1924      44697363 
 1924      6F6E6E65 
 1925              	.LASF90:
 1926 0713 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 1926      4E6F6973 
 1926      65456E76 
 1926      6C7000
 1927              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
