ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsTrimIdacsSourcing,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsTrimIdacsSourcing, %function
  24              	CapSense_SsTrimIdacsSourcing:
  25              	.LFB21:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v7.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 2


  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_RESOLUTION        (12u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ          (1500u)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_LEVEL                     (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_UNITS                     (1000u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CP_MAX                        (69000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** /* HW IP Block limitation */
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 3


  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 4


 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 177:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 181:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 182:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 184:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 195:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 199:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 202:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 5


 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 204:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_IDAC_GAIN_TABLE_STRUCT const CapSense_idacGainTable[CapSense_IDAC_GAIN_NUMBER] = CapSense_
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or Widget
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *  setup is made. The critical section (i.e. disable global interrupt)
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 238:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the lower level SetupWidgetExt() or ConnectSns() functions
 258:Generated_Source\PSoC4/CapSense_Sensing.c ****         and not disconnected.
 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 6


 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 284:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 288:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 298:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 301:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 306:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 309:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 316:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 7


 317:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 341:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 367:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 371:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 8


 374:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 400:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 401:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 429:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 9


 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 432:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 448:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 453:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 477:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 479:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidgetExt
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 487:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 10


 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs extended initialization for the specified widget and also performs
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for a specific sensor in the widget. This function
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requires using the CapSense_ScanExt() function to initiate a scan.
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does the same as CapSense_SetupWidget() and also
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *  does the following tasks:
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Connects the first sensor of the widget.
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Configures the CSD HW block to perform a scan of the specified sensor.
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Once this function is called to initialize a widget and a sensor, the
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function is called to scan the sensor.
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for scanning the specific sensor in the specific
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Configuration header file defined as CapSense_<WidgetName>_WDGT_ID.
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorId
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 518:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and firmware initialization required for scanning a specific sensor in a
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specific widget.
 520:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the sensor ID within a specified widget can be found in the
 521:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 522:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 524:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 525:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - The operation is successfully completed.
 527:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 528:Generated_Source\PSoC4/CapSense_Sensing.c **** *    disabled
 529:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 530:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 531:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 532:Generated_Source\PSoC4/CapSense_Sensing.c **** *    other spurious error occurred.
 533:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 534:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 535:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidgetExt(uint32 widgetId, uint32 sensorId)
 536:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 544:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 11


 545:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 547:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 552:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 553:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 559:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 560:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 562:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidgetExt(widgetId, sensorId);
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 576:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidgetExt(widgetId, sensorId);
 579:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 580:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 581:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 582:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 583:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 584:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidgetExt(widgetId, sensorId);
 585:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 586:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 587:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 588:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 589:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 590:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 591:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 592:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 593:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanExt
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 12


 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Starts a conversion on the pre-configured sensor. This function requires
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() function to set up the a
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs single scanning of one sensor in the widget configured
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by the CapSense_SetupWidgetExt() function.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor must be preconfigured by using the
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() API prior to calling this function.
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by using the CapSense_ScanExt() function. In this case, calling
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() is not required every time before the
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function. If a previous scan was triggered in
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets() or
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_RunTuner() - (see the CapSense_RunTuner() function
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  description for more details), the sensor must be preconfigured again by
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() API prior to calling the
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function.
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  If disconnection of the sensors is required after calling
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt(), the CapSense_CSDDisconnectSns() or
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_CSXDisconnectTx() or CapSense_CSXDisconnectRx()
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  functions can be used.
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanExt(void)
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 643:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 646:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 647:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 649:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 650:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 651:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 653:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 654:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 655:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScanExt();
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 658:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 13


 659:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScanExt();
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 664:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScanExt();
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 676:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 677:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 678:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 680:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 682:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 683:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 684:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 685:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 686:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 687:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 688:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 689:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 690:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 691:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 692:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 693:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 694:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 695:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 696:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 698:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 699:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 700:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 701:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 704:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 705:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 706:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 707:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 709:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 710:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 715:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 14


 716:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 717:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 719:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 728:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 734:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 735:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 740:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 741:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 745:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 746:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 751:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 754:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 765:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 772:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 15


 773:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 774:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 775:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 776:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 777:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 778:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 779:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 780:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 781:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 782:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 783:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 784:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 785:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 786:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 787:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 788:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 789:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 790:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 791:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 792:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 793:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 795:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 796:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 797:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 798:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 800:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 801:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 802:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 803:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 804:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 805:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 806:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 807:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 808:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 809:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 810:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 811:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 812:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 813:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 814:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 815:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 816:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 817:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 818:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 819:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 820:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 821:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 822:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 823:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 824:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 825:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 826:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 827:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 828:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
 829:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 16


 830:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 831:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 832:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 833:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 834:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx or Lx signal is routed to the sensor
 835:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 837:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 838:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 839:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 840:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 841:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 842:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 859:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 864:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 872:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 873:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 877:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 880:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 881:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 17


 887:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 889:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 893:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 895:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 896:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 897:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 901:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 902:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 904:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 905:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 907:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 910:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 919:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 927:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 932:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 936:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 937:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 943:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 18


 944:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN))
 957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 newRegValue;
 959:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)) */
 966:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK, 0u);
 969:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 975:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 976:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK, 0u);
 977:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 978:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 979:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 980:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 981:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 982:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 983:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 988:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 989:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 990:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 992:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 994:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 995:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 996:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 997:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 998:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 999:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1000:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 19


1001:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1003:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1004:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1006:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1010:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1013:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1017:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1022:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1032:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
1036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
1038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1039:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the Сomponent settings for operation in a specified
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensing mode.
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Releasing the CSD HW block.
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnecting external capacitors.
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Setting new mode.
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** *  4. Configuring HW to the new sensing mode.
1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 20


1058:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
1064:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1066:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
1068:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differs to the current one. Disable the current mode */
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
1076:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1078:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1080:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
1082:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1086:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
1088:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1090:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1096:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1098:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1103:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
1106:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1107:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1108:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
1111:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1112:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
1114:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 21


1115:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1116:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
1117:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
1118:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
1119:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1120:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
1122:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1123:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
1133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1135:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1137:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1139:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1142:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1144:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1145:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetAllIOsState
1146:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1147:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1148:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1149:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
1150:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1151:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1152:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
1153:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1154:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
1155:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1156:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1157:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
1158:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1159:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
1160:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1161:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1162:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1163:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
1164:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1165:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1166:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetAllIOsState(uint32 state)
1167:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
1169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
1171:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 22


1172:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinPcVal;
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinHsiomVal;
1174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpPcDrRegValue;
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpHsiomRegValue;
1177:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *snsIoPtr;
1179:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(state)
1181:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1182:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_GROUND:
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1185:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1186:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_HIGHZ:
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1189:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1190:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_SHIELD:
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1194:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
1195:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1196:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1197:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1198:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1200:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     snsIoPtr = &CapSense_ioList[0u];
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1203:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1204:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue = CY_GET_REG32 (snsIoPtr->hsiomPtr);
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
1208:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->pcPtr);
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
1213:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue |=  (newPinHsiomVal << snsIoPtr->hsiomShift);
1216:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->drPtr);
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
1220:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1222:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1224:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****         snsIoPtr++;
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1227:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1228:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSD_EN) &&\
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 23


1229:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
1230:Generated_Source\PSoC4/CapSense_Sensing.c ****          (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDSetShieldElectrodesState(state);
1232:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1233:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1248:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1249:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1252:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1253:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1254:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1255:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1256:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1257:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1258:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1259:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1260:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1261:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1262:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1263:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1266:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1269:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1270:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1271:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1272:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1273:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1274:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1275:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1277:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1278:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1279:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1281:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1282:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1283:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1285:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 24


1286:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1287:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1289:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1292:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1293:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1294:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1296:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1299:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1300:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1302:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1303:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1304:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1305:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1306:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1307:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1308:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1309:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1310:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1311:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1312:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1313:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1314:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1315:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1316:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1317:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1318:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1320:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1324:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1325:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1326:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1329:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1331:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1339:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1342:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 25


1343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1347:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1352:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1359:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1360:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1361:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1363:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1364:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1365:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1366:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1367:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1368:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1369:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1370:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1371:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1372:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1373:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1376:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1378:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1379:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1385:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1386:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1387:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1388:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1389:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1391:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1392:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1393:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1394:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1397:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1398:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1399:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 26


1400:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1401:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1403:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1404:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1405:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1406:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1407:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1411:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1412:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1414:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1415:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1416:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1418:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1424:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1431:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1438:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1443:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1445:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1451:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1453:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
1456:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 27


1457:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1458:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1459:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1463:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1465:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1466:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1467:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1468:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1469:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1470:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1471:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1472:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1473:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1474:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1475:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1476:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1477:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1478:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1479:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1480:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1481:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1482:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1483:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1484:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1486:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1488:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1490:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1492:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1498:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1499:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1501:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1503:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1504:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1507:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1512:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1513:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 28


1514:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1518:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1531:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1539:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1545:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1551:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1555:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1556:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1557:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1558:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1559:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1560:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1561:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1562:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1563:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1564:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1565:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1566:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1567:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1569:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 29


1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1572:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1577:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1578:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1581:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1584:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1586:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1588:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1590:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter.
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1595:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1610:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1616:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1623:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 30


1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1630:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1632:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1633:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1635:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1645:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1647:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1648:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1650:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1651:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_MANY_WIDGET_METHODS_EN)
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1655:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN)
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_ISX_E ==
1657:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1658:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1660:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN) */
1663:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1664:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1665:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1667:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1670:Generated_Source\PSoC4/CapSense_Sensing.c ****                        calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUN
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1672:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1673:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1680:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1682:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1684:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 31


1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1686:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_L
1690:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1694:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1696:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1697:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1706:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1707:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1709:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1714:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1724:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1734:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1736:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 32


1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1746:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1749:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1751:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1752:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTuneWidget
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation for a desired widget.
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1762:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1764:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of a desired widget.
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1773:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1774:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1779:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1780:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTuneWidget(uint32 widgetId)
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1782:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
1785:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 inputSnsClk;
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDiv;
1787:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDivTmp;
1788:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1789:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1790:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxRaw = 0u;
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxCp = 0u;
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxIdacComp = 0u;
1794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1796:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpSnsId = 0u;
1797:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpRowSnsId = 0u;
1798:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 33


1799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
1803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find input of sensor clock frequency */
1805:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1806:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = ((uint32)CYDEV_BCLK__HFCLK__KHZ / (uint32)CapSense_dsRam.modCsdClk);
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based devices.
1811:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1814:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1816:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for PSoC 4100 and PSoC 4200
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****                device families.
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_dsRam.modCsdClk;
1821:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1823:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >> CapSense_FLIP_FLOP
1824:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based device except PSoC 4100 and PSoC 4200 device families.
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Minimum value of SnsClk divider required to ensure the CSD HW block
1832:Generated_Source\PSoC4/CapSense_Sensing.c ****          * operation in allowed frequency range.
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp = inputSnsClk * CapSense_AUTOTUNE_CAL_UNITS;
1835:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp /= CapSense_CSD_SNS_FREQ_KHZ_MAX;
1836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1837:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (minSnsClkDiv < minSnsClkDivTmp)
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = minSnsClkDivTmp;
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDiv = (minSnsClkDiv + (CapSense_AUTOTUNE_CAL_UNITS - 1u)) / CapSense_AUTOTUNE_CAL_
1843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1844:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Make divider even */
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (0u != (minSnsClkDiv & 0x01u))
1846:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1847:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv++;
1848:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize auto-tuning configuration structure */
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkInputClock = (uint16)inputSnsClk;
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 34


1856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting maximum sensor Cp
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1863:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = CapSense_AUTOTUNE_CALIBRATION_RESOLUTION;
1865:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ);
1867:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1868:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1869:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1872:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1873:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1874:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target */
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1876:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find raw count and IDAC of a sensor with maximum Cp */
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
1879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxIdacComp < ptrRamSensor->idacComp[0u])
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1885:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxIdacComp = ptrRamSensor->idacComp[0u];
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxRaw < ptrRamSensor->raw[0u])
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamSensor++;
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Update auto-tuning configuration structure */
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1908:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find sensor Cp and optimum sense clock value */
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****         maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1911:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
1912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 35


1913:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Increase sensor clock divider to valid value */
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(ptrRamWidget->snsClk < minSnsClkDiv)
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->snsClk <<= 1u;
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Do the same for row for touchpad or matrix buttons widgets */
1920:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find a sensor with maximum Cp */
1925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxRaw = 0u;
1926:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxIdacComp = 0u;
1927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNumSns; sn
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxIdacComp < ptrRamSensor->idacComp[0u])
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxIdacComp = ptrRamSensor->idacComp[0u];
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxRaw < ptrRamSensor->raw[0u])
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamSensor++;
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure auto-tuning configuration structure */
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1952:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1954:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1955:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Save maximum sensor Cp and corresponding sensor Id */
1957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (autoTuneConfig.sensorCap < maxCp)
1958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1959:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.sensorCap = maxCp;
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxCpSnsId = maxCpRowSnsId;
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1962:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Increase sensor clock divider to valid value */
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while(ptrRamWidget->rowSnsClk < minSnsClkDiv)
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamWidget->rowSnsClk <<= 1u;
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1969:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 36


1970:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check tuning results */
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_AUTOTUNE_CP_MAX < maxCp)
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneStatus = CYRET_BAD_DATA;
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1976:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1977:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1979:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1982:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined sense frequenc
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1989:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxCpSnsId >= ptrFlashWidget->numCols)
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1999:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find resolution */
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
2004:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
2006:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
2011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune widget sensitivity */
2013:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetWidgetSenseClkSrc(widgetId, ptrRamWidget);
2014:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined resolution */
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneStatus |= CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
2017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2019:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(widgetId);
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2021:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2024:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2025:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2026:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 37


2027:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation.
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
2040:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2042:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
2043:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
2045:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2051:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune each CSD widget */
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_SsAutoTuneWidget(wdgtIndex);
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2061:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2063:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
2064:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2065:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2066:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
2070:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
2072:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2075:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
2077:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2083:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 38


2084:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
2091:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
2094:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2096:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2098:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
2100:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2102:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
2104:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2115:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2117:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2120:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2122:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
2123:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
  27              		.loc 1 2123 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2125:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
  36              		.loc 1 2127 0
  37 0002 0848     		ldr	r0, .L2
  38 0004 0368     		ldr	r3, [r0]
  39 0006 0F24     		movs	r4, #15
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 39


  40 0008 A343     		bics	r3, r4
  41 000a 1900     		movs	r1, r3
  42              	.LVL0:
2128:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
  43              		.loc 1 2128 0
  44 000c 064D     		ldr	r5, .L2+4
  45 000e 2B78     		ldrb	r3, [r5]
  46 0010 0F22     		movs	r2, #15
  47 0012 1340     		ands	r3, r2
  48 0014 0B43     		orrs	r3, r1
  49              	.LVL1:
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
2130:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
  50              		.loc 1 2133 0
  51 0016 E132     		adds	r2, r2, #225
  52 0018 9343     		bics	r3, r2
  53              	.LVL2:
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
  54              		.loc 1 2134 0
  55 001a 2A78     		ldrb	r2, [r5]
  56 001c A243     		bics	r2, r4
  57 001e 1343     		orrs	r3, r2
  58              	.LVL3:
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2136:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2138:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
  59              		.loc 1 2139 0
  60 0020 0360     		str	r3, [r0]
2140:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
  61              		.loc 1 2140 0
  62              		@ sp needed
  63 0022 30BD     		pop	{r4, r5, pc}
  64              	.L3:
  65              		.align	2
  66              	.L2:
  67 0024 00FF2840 		.word	1076428544
  68 0028 62F1FF0F 		.word	268431714
  69              		.cfi_endproc
  70              	.LFE21:
  71              		.size	CapSense_SsTrimIdacsSourcing, .-CapSense_SsTrimIdacsSourcing
  72              		.section	.text.CapSense_SsTrimIdacs,"ax",%progbits
  73              		.align	2
  74              		.code	16
  75              		.thumb_func
  76              		.type	CapSense_SsTrimIdacs, %function
  77              	CapSense_SsTrimIdacs:
  78              	.LFB22:
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
2143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2144:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 40


2146:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
2155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
2157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
2161:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
  79              		.loc 1 2161 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83 0000 10B5     		push	{r4, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 4, -8
  86              		.cfi_offset 14, -4
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
2163:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2167:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
2168:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
  87              		.loc 1 2168 0
  88 0002 FFF7FEFF 		bl	CapSense_SsTrimIdacsSourcing
  89              	.LVL4:
2169:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2170:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
2171:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
2172:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
  90              		.loc 1 2172 0
  91              		@ sp needed
  92 0006 10BD     		pop	{r4, pc}
  93              		.cfi_endproc
  94              	.LFE22:
  95              		.size	CapSense_SsTrimIdacs, .-CapSense_SsTrimIdacs
  96              		.section	.text.CapSense_IsBusy,"ax",%progbits
  97              		.align	2
  98              		.global	CapSense_IsBusy
  99              		.code	16
 100              		.thumb_func
 101              		.type	CapSense_IsBusy, %function
 102              	CapSense_IsBusy:
 103              	.LFB1:
 237:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 104              		.loc 1 237 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 41


 108              		@ link register save eliminated.
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 109              		.loc 1 238 0
 110 0000 024B     		ldr	r3, .L6
 111 0002 DB68     		ldr	r3, [r3, #12]
 112 0004 8020     		movs	r0, #128
 113 0006 1840     		ands	r0, r3
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 114              		.loc 1 239 0
 115              		@ sp needed
 116 0008 7047     		bx	lr
 117              	.L7:
 118 000a C046     		.align	2
 119              	.L6:
 120 000c 00000000 		.word	CapSense_dsRam
 121              		.cfi_endproc
 122              	.LFE1:
 123              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 124              		.section	.text.CapSense_SetupWidget,"ax",%progbits
 125              		.align	2
 126              		.global	CapSense_SetupWidget
 127              		.code	16
 128              		.thumb_func
 129              		.type	CapSense_SetupWidget, %function
 130              	CapSense_SetupWidget:
 131              	.LFB2:
 283:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 132              		.loc 1 283 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              	.LVL5:
 137 0000 10B5     		push	{r4, lr}
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 4, -8
 140              		.cfi_offset 14, -4
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 141              		.loc 1 286 0
 142 0002 0E4B     		ldr	r3, .L14
 143 0004 DB68     		ldr	r3, [r3, #12]
 144 0006 DB03     		lsls	r3, r3, #15
 145 0008 0DD4     		bmi	.L11
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 146              		.loc 1 296 0
 147 000a 0028     		cmp	r0, #0
 148 000c 0DD1     		bne	.L12
 297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 149              		.loc 1 297 0 discriminator 1
 150 000e 4309     		lsrs	r3, r0, #5
 151 0010 0433     		adds	r3, r3, #4
 152 0012 9B00     		lsls	r3, r3, #2
 153 0014 094A     		ldr	r2, .L14
 154 0016 9B58     		ldr	r3, [r3, r2]
 155 0018 1F22     		movs	r2, #31
 156 001a 0240     		ands	r2, r0
 157 001c D340     		lsrs	r3, r3, r2
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 42


 158              		.loc 1 296 0 discriminator 1
 159 001e DB07     		lsls	r3, r3, #31
 160 0020 05D4     		bmi	.L13
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 161              		.loc 1 304 0
 162 0022 0124     		movs	r4, #1
 163 0024 04E0     		b	.L9
 164              	.L11:
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 165              		.loc 1 289 0
 166 0026 1124     		movs	r4, #17
 167 0028 02E0     		b	.L9
 168              	.L12:
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 169              		.loc 1 304 0
 170 002a 0124     		movs	r4, #1
 171 002c 00E0     		b	.L9
 172              	.L13:
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 173              		.loc 1 300 0
 174 002e 0024     		movs	r4, #0
 175              	.L9:
 176              	.LVL6:
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 177              		.loc 1 311 0
 178 0030 002C     		cmp	r4, #0
 179 0032 01D1     		bne	.L10
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 180              		.loc 1 324 0
 181 0034 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 182              	.LVL7:
 183              	.L10:
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 184              		.loc 1 340 0
 185 0038 2000     		movs	r0, r4
 186              		@ sp needed
 187              	.LVL8:
 188 003a 10BD     		pop	{r4, pc}
 189              	.L15:
 190              		.align	2
 191              	.L14:
 192 003c 00000000 		.word	CapSense_dsRam
 193              		.cfi_endproc
 194              	.LFE2:
 195              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 196              		.section	.text.CapSense_Scan,"ax",%progbits
 197              		.align	2
 198              		.global	CapSense_Scan
 199              		.code	16
 200              		.thumb_func
 201              		.type	CapSense_Scan, %function
 202              	CapSense_Scan:
 203              	.LFB3:
 366:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 204              		.loc 1 366 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 43


 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208 0000 10B5     		push	{r4, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 4, -8
 211              		.cfi_offset 14, -4
 212              	.LVL9:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 213              		.loc 1 369 0
 214 0002 084B     		ldr	r3, .L22
 215 0004 DB68     		ldr	r3, [r3, #12]
 216 0006 DB03     		lsls	r3, r3, #15
 217 0008 07D4     		bmi	.L19
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 218              		.loc 1 376 0
 219 000a 074B     		ldr	r3, .L22+4
 220 000c 1B78     		ldrb	r3, [r3]
 221 000e 012B     		cmp	r3, #1
 222 0010 05D1     		bne	.L21
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 223              		.loc 1 385 0
 224 0012 FFF7FEFF 		bl	CapSense_CSDScan
 225              	.LVL10:
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 226              		.loc 1 367 0
 227 0016 0020     		movs	r0, #0
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 228              		.loc 1 386 0
 229 0018 03E0     		b	.L17
 230              	.L19:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 231              		.loc 1 372 0
 232 001a 1120     		movs	r0, #17
 233 001c 01E0     		b	.L17
 234              	.L21:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 235              		.loc 1 394 0
 236 001e 0120     		movs	r0, #1
 237 0020 4042     		rsbs	r0, r0, #0
 238              	.L17:
 239              	.LVL11:
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 240              		.loc 1 399 0
 241              		@ sp needed
 242 0022 10BD     		pop	{r4, pc}
 243              	.L23:
 244              		.align	2
 245              	.L22:
 246 0024 00000000 		.word	CapSense_dsRam
 247 0028 00000000 		.word	.LANCHOR0
 248              		.cfi_endproc
 249              	.LFE3:
 250              		.size	CapSense_Scan, .-CapSense_Scan
 251              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 252              		.align	2
 253              		.global	CapSense_ScanAllWidgets
 254              		.code	16
 255              		.thumb_func
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 44


 256              		.type	CapSense_ScanAllWidgets, %function
 257              	CapSense_ScanAllWidgets:
 258              	.LFB4:
 428:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 259              		.loc 1 428 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 10B5     		push	{r4, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
 267              	.LVL12:
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 268              		.loc 1 433 0
 269 0002 0C4B     		ldr	r3, .L30
 270 0004 DB68     		ldr	r3, [r3, #12]
 271 0006 1B06     		lsls	r3, r3, #24
 272 0008 12D4     		bmi	.L29
 273 000a 0024     		movs	r4, #0
 274 000c 0120     		movs	r0, #1
 275 000e 4042     		rsbs	r0, r0, #0
 276 0010 0BE0     		b	.L26
 277              	.LVL13:
 278              	.L28:
 449:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 279              		.loc 1 449 0
 280 0012 2000     		movs	r0, r4
 281              	.LVL14:
 282 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 283              	.LVL15:
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 284              		.loc 1 451 0
 285 0018 0028     		cmp	r0, #0
 286 001a 05D1     		bne	.L27
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 287              		.loc 1 468 0
 288 001c 0022     		movs	r2, #0
 289 001e 064B     		ldr	r3, .L30+4
 290 0020 5A70     		strb	r2, [r3, #1]
 473:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 291              		.loc 1 473 0
 292 0022 FFF7FEFF 		bl	CapSense_Scan
 293              	.LVL16:
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 294              		.loc 1 475 0
 295 0026 04E0     		b	.L25
 296              	.L27:
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 297              		.loc 1 446 0
 298 0028 0134     		adds	r4, r4, #1
 299              	.LVL17:
 300              	.L26:
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 301              		.loc 1 444 0 discriminator 1
 302 002a 002C     		cmp	r4, #0
 303 002c F1D0     		beq	.L28
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 45


 304 002e 00E0     		b	.L25
 305              	.LVL18:
 306              	.L29:
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 307              		.loc 1 436 0
 308 0030 1120     		movs	r0, #17
 309              	.LVL19:
 310              	.L25:
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 311              		.loc 1 481 0
 312              		@ sp needed
 313 0032 10BD     		pop	{r4, pc}
 314              	.L31:
 315              		.align	2
 316              	.L30:
 317 0034 00000000 		.word	CapSense_dsRam
 318 0038 00000000 		.word	.LANCHOR0
 319              		.cfi_endproc
 320              	.LFE4:
 321              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 322              		.section	.text.CapSense_SetupWidgetExt,"ax",%progbits
 323              		.align	2
 324              		.global	CapSense_SetupWidgetExt
 325              		.code	16
 326              		.thumb_func
 327              		.type	CapSense_SetupWidgetExt, %function
 328              	CapSense_SetupWidgetExt:
 329              	.LFB5:
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 330              		.loc 1 536 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              	.LVL20:
 335 0000 10B5     		push	{r4, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 4, -8
 338              		.cfi_offset 14, -4
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 339              		.loc 1 539 0
 340 0002 124B     		ldr	r3, .L39
 341 0004 DB68     		ldr	r3, [r3, #12]
 342 0006 DB03     		lsls	r3, r3, #15
 343 0008 13D4     		bmi	.L35
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 344              		.loc 1 549 0
 345 000a 0028     		cmp	r0, #0
 346 000c 13D1     		bne	.L36
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 347              		.loc 1 550 0 discriminator 1
 348 000e 4309     		lsrs	r3, r0, #5
 349 0010 0433     		adds	r3, r3, #4
 350 0012 9B00     		lsls	r3, r3, #2
 351 0014 0D4A     		ldr	r2, .L39
 352 0016 9B58     		ldr	r3, [r3, r2]
 353 0018 1F22     		movs	r2, #31
 354 001a 0240     		ands	r2, r0
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 46


 355 001c D340     		lsrs	r3, r3, r2
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 356              		.loc 1 549 0 discriminator 1
 357 001e DB07     		lsls	r3, r3, #31
 358 0020 0BD5     		bpl	.L37
 551:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 359              		.loc 1 551 0
 360 0022 4301     		lsls	r3, r0, #5
 361 0024 0A4A     		ldr	r2, .L39+4
 362 0026 D318     		adds	r3, r2, r3
 363 0028 1B8B     		ldrh	r3, [r3, #24]
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 364              		.loc 1 550 0
 365 002a 8B42     		cmp	r3, r1
 366 002c 07D8     		bhi	.L38
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 367              		.loc 1 558 0
 368 002e 0124     		movs	r4, #1
 369 0030 06E0     		b	.L33
 370              	.L35:
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 371              		.loc 1 542 0
 372 0032 1124     		movs	r4, #17
 373 0034 04E0     		b	.L33
 374              	.L36:
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 375              		.loc 1 558 0
 376 0036 0124     		movs	r4, #1
 377 0038 02E0     		b	.L33
 378              	.L37:
 379 003a 0124     		movs	r4, #1
 380 003c 00E0     		b	.L33
 381              	.L38:
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 382              		.loc 1 554 0
 383 003e 0024     		movs	r4, #0
 384              	.L33:
 385              	.LVL21:
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 386              		.loc 1 565 0
 387 0040 002C     		cmp	r4, #0
 388 0042 01D1     		bne	.L34
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 389              		.loc 1 578 0
 390 0044 FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 391              	.LVL22:
 392              	.L34:
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 393              		.loc 1 594 0
 394 0048 2000     		movs	r0, r4
 395              		@ sp needed
 396              	.LVL23:
 397 004a 10BD     		pop	{r4, pc}
 398              	.L40:
 399              		.align	2
 400              	.L39:
 401 004c 00000000 		.word	CapSense_dsRam
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 47


 402 0050 00000000 		.word	CapSense_dsFlash
 403              		.cfi_endproc
 404              	.LFE5:
 405              		.size	CapSense_SetupWidgetExt, .-CapSense_SetupWidgetExt
 406              		.section	.text.CapSense_ScanExt,"ax",%progbits
 407              		.align	2
 408              		.global	CapSense_ScanExt
 409              		.code	16
 410              		.thumb_func
 411              		.type	CapSense_ScanExt, %function
 412              	CapSense_ScanExt:
 413              	.LFB6:
 642:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 414              		.loc 1 642 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418 0000 10B5     		push	{r4, lr}
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 4, -8
 421              		.cfi_offset 14, -4
 422              	.LVL24:
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 423              		.loc 1 645 0
 424 0002 084B     		ldr	r3, .L47
 425 0004 DB68     		ldr	r3, [r3, #12]
 426 0006 DB03     		lsls	r3, r3, #15
 427 0008 07D4     		bmi	.L44
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 428              		.loc 1 652 0
 429 000a 074B     		ldr	r3, .L47+4
 430 000c 1B78     		ldrb	r3, [r3]
 431 000e 012B     		cmp	r3, #1
 432 0010 05D1     		bne	.L46
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 433              		.loc 1 661 0
 434 0012 FFF7FEFF 		bl	CapSense_CSDScanExt
 435              	.LVL25:
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 436              		.loc 1 643 0
 437 0016 0020     		movs	r0, #0
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 438              		.loc 1 662 0
 439 0018 03E0     		b	.L42
 440              	.L44:
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 441              		.loc 1 648 0
 442 001a 1120     		movs	r0, #17
 443 001c 01E0     		b	.L42
 444              	.L46:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 445              		.loc 1 670 0
 446 001e 0120     		movs	r0, #1
 447 0020 4042     		rsbs	r0, r0, #0
 448              	.L42:
 449              	.LVL26:
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 48


 450              		.loc 1 675 0
 451              		@ sp needed
 452 0022 10BD     		pop	{r4, pc}
 453              	.L48:
 454              		.align	2
 455              	.L47:
 456 0024 00000000 		.word	CapSense_dsRam
 457 0028 00000000 		.word	.LANCHOR0
 458              		.cfi_endproc
 459              	.LFE6:
 460              		.size	CapSense_ScanExt, .-CapSense_ScanExt
 461              		.section	.text.CapSense_SetPinState,"ax",%progbits
 462              		.align	2
 463              		.global	CapSense_SetPinState
 464              		.code	16
 465              		.thumb_func
 466              		.type	CapSense_SetPinState, %function
 467              	CapSense_SetPinState:
 468              	.LFB8:
 841:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 469              		.loc 1 841 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              	.LVL27:
 474 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 475              		.cfi_def_cfa_offset 24
 476              		.cfi_offset 3, -24
 477              		.cfi_offset 4, -20
 478              		.cfi_offset 5, -16
 479              		.cfi_offset 6, -12
 480              		.cfi_offset 7, -8
 481              		.cfi_offset 14, -4
 482 0002 1600     		movs	r6, r2
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 483              		.loc 1 866 0
 484 0004 4001     		lsls	r0, r0, #5
 485              	.LVL28:
 486 0006 244B     		ldr	r3, .L56
 487 0008 C458     		ldr	r4, [r0, r3]
 488 000a CB00     		lsls	r3, r1, #3
 489 000c 591A     		subs	r1, r3, r1
 490              	.LVL29:
 491 000e 8B00     		lsls	r3, r1, #2
 492 0010 E418     		adds	r4, r4, r3
 493              	.LVL30:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 494              		.loc 1 871 0
 495 0012 0025     		movs	r5, #0
 496 0014 3CE0     		b	.L50
 497              	.LVL31:
 498              	.L55:
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 499              		.loc 1 874 0
 500 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 501              	.LVL32:
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 49


 502              		.loc 1 875 0
 503 001a 2168     		ldr	r1, [r4]
 504 001c 0B68     		ldr	r3, [r1]
 505 001e 277E     		ldrb	r7, [r4, #24]
 506 0020 0F22     		movs	r2, #15
 507 0022 BA40     		lsls	r2, r2, r7
 508 0024 9343     		bics	r3, r2
 509 0026 0B60     		str	r3, [r1]
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 510              		.loc 1 876 0
 511 0028 6168     		ldr	r1, [r4, #4]
 512 002a 0B68     		ldr	r3, [r1]
 513 002c A77E     		ldrb	r7, [r4, #26]
 514 002e 0722     		movs	r2, #7
 515 0030 BA40     		lsls	r2, r2, r7
 516 0032 9343     		bics	r3, r2
 517 0034 0B60     		str	r3, [r1]
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 518              		.loc 1 877 0
 519 0036 FFF7FEFF 		bl	CyExitCriticalSection
 520              	.LVL33:
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 521              		.loc 1 879 0
 522 003a 012E     		cmp	r6, #1
 523 003c 17D0     		beq	.L52
 524 003e 002E     		cmp	r6, #0
 525 0040 02D0     		beq	.L53
 526 0042 032E     		cmp	r6, #3
 527 0044 1FD0     		beq	.L54
 528 0046 21E0     		b	.L51
 529              	.L53:
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 530              		.loc 1 883 0
 531 0048 FFF7FEFF 		bl	CyEnterCriticalSection
 532              	.LVL34:
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 533              		.loc 1 884 0
 534 004c 6268     		ldr	r2, [r4, #4]
 535 004e 1168     		ldr	r1, [r2]
 536 0050 A77E     		ldrb	r7, [r4, #26]
 537 0052 0623     		movs	r3, #6
 538 0054 BB40     		lsls	r3, r3, r7
 539 0056 0B43     		orrs	r3, r1
 540 0058 1360     		str	r3, [r2]
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 541              		.loc 1 885 0
 542 005a A168     		ldr	r1, [r4, #8]
 543 005c 0B68     		ldr	r3, [r1]
 544 005e 677E     		ldrb	r7, [r4, #25]
 545 0060 0122     		movs	r2, #1
 546 0062 BA40     		lsls	r2, r2, r7
 547 0064 9343     		bics	r3, r2
 548 0066 0B60     		str	r3, [r1]
 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 549              		.loc 1 886 0
 550 0068 FFF7FEFF 		bl	CyExitCriticalSection
 551              	.LVL35:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 50


 887:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 552              		.loc 1 887 0
 553 006c 0EE0     		b	.L51
 554              	.L52:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 555              		.loc 1 890 0
 556 006e FFF7FEFF 		bl	CyEnterCriticalSection
 557              	.LVL36:
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 558              		.loc 1 891 0
 559 0072 A168     		ldr	r1, [r4, #8]
 560 0074 0B68     		ldr	r3, [r1]
 561 0076 677E     		ldrb	r7, [r4, #25]
 562 0078 0122     		movs	r2, #1
 563 007a BA40     		lsls	r2, r2, r7
 564 007c 9343     		bics	r3, r2
 565 007e 0B60     		str	r3, [r1]
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 566              		.loc 1 892 0
 567 0080 FFF7FEFF 		bl	CyExitCriticalSection
 568              	.LVL37:
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 569              		.loc 1 893 0
 570 0084 02E0     		b	.L51
 571              	.L54:
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 572              		.loc 1 898 0
 573 0086 2000     		movs	r0, r4
 574 0088 FFF7FEFF 		bl	CapSense_CSDConnectSns
 575              	.LVL38:
 576              	.L51:
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 577              		.loc 1 933 0 discriminator 2
 578 008c 1C34     		adds	r4, r4, #28
 579              	.LVL39:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 580              		.loc 1 871 0 discriminator 2
 581 008e 0135     		adds	r5, r5, #1
 582              	.LVL40:
 583              	.L50:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 584              		.loc 1 871 0 is_stmt 0 discriminator 1
 585 0090 002D     		cmp	r5, #0
 586 0092 C0D0     		beq	.L55
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 587              		.loc 1 935 0 is_stmt 1
 588              		@ sp needed
 589              	.LVL41:
 590              	.LVL42:
 591              	.LVL43:
 592 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 593              	.L57:
 594 0096 C046     		.align	2
 595              	.L56:
 596 0098 00000000 		.word	CapSense_dsFlash
 597              		.cfi_endproc
 598              	.LFE8:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 51


 599              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 600              		.section	.text.CapSense_SsSetAllIOsState,"ax",%progbits
 601              		.align	2
 602              		.global	CapSense_SsSetAllIOsState
 603              		.code	16
 604              		.thumb_func
 605              		.type	CapSense_SsSetAllIOsState, %function
 606              	CapSense_SsSetAllIOsState:
 607              	.LFB11:
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 608              		.loc 1 1167 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              	.LVL44:
 613 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 614              		.cfi_def_cfa_offset 24
 615              		.cfi_offset 3, -24
 616              		.cfi_offset 4, -20
 617              		.cfi_offset 5, -16
 618              		.cfi_offset 6, -12
 619              		.cfi_offset 7, -8
 620              		.cfi_offset 14, -4
 621 0002 4F46     		mov	r7, r9
 622 0004 4646     		mov	r6, r8
 623 0006 C0B4     		push	{r6, r7}
 624              		.cfi_def_cfa_offset 32
 625              		.cfi_offset 8, -32
 626              		.cfi_offset 9, -28
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 627              		.loc 1 1180 0
 628 0008 0128     		cmp	r0, #1
 629 000a 0BD0     		beq	.L64
 630 000c 0228     		cmp	r0, #2
 631 000e 04D0     		beq	.L61
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 632              		.loc 1 1184 0
 633 0010 0023     		movs	r3, #0
 634 0012 9946     		mov	r9, r3
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 635              		.loc 1 1183 0
 636 0014 0633     		adds	r3, r3, #6
 637 0016 9846     		mov	r8, r3
 638 0018 07E0     		b	.L60
 639              	.L61:
 640              	.LVL45:
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 641              		.loc 1 1192 0
 642 001a 0523     		movs	r3, #5
 643 001c 9946     		mov	r9, r3
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
 644              		.loc 1 1191 0
 645 001e 0023     		movs	r3, #0
 646 0020 9846     		mov	r8, r3
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 647              		.loc 1 1193 0
 648 0022 02E0     		b	.L60
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 52


 649              	.LVL46:
 650              	.L64:
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 651              		.loc 1 1188 0
 652 0024 0023     		movs	r3, #0
 653 0026 9946     		mov	r9, r3
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 654              		.loc 1 1187 0
 655 0028 9846     		mov	r8, r3
 656              	.L60:
 657              	.LVL47:
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
 658              		.loc 1 1201 0
 659 002a 144C     		ldr	r4, .L65
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 660              		.loc 1 1202 0
 661 002c 0025     		movs	r5, #0
 662 002e 1FE0     		b	.L62
 663              	.LVL48:
 664              	.L63:
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 665              		.loc 1 1204 0 discriminator 3
 666 0030 FFF7FEFF 		bl	CyEnterCriticalSection
 667              	.LVL49:
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
 668              		.loc 1 1206 0 discriminator 3
 669 0034 2268     		ldr	r2, [r4]
 670 0036 1368     		ldr	r3, [r2]
 671              	.LVL50:
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 672              		.loc 1 1207 0 discriminator 3
 673 0038 2169     		ldr	r1, [r4, #16]
 674 003a 8B43     		bics	r3, r1
 675              	.LVL51:
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 676              		.loc 1 1208 0 discriminator 3
 677 003c 1360     		str	r3, [r2]
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
 678              		.loc 1 1210 0 discriminator 3
 679 003e 6668     		ldr	r6, [r4, #4]
 680 0040 3268     		ldr	r2, [r6]
 681              	.LVL52:
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
 682              		.loc 1 1211 0 discriminator 3
 683 0042 A77E     		ldrb	r7, [r4, #26]
 684 0044 0721     		movs	r1, #7
 685 0046 B940     		lsls	r1, r1, r7
 686 0048 8A43     		bics	r2, r1
 687              	.LVL53:
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
 688              		.loc 1 1212 0 discriminator 3
 689 004a 4146     		mov	r1, r8
 690 004c B940     		lsls	r1, r1, r7
 691 004e 0A43     		orrs	r2, r1
 692              	.LVL54:
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 693              		.loc 1 1213 0 discriminator 3
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 53


 694 0050 3260     		str	r2, [r6]
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 695              		.loc 1 1215 0 discriminator 3
 696 0052 227E     		ldrb	r2, [r4, #24]
 697              	.LVL55:
 698 0054 4946     		mov	r1, r9
 699 0056 9140     		lsls	r1, r1, r2
 700 0058 0B43     		orrs	r3, r1
 701              	.LVL56:
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 702              		.loc 1 1216 0 discriminator 3
 703 005a 2268     		ldr	r2, [r4]
 704 005c 1360     		str	r3, [r2]
 705              	.LVL57:
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
 706              		.loc 1 1218 0 discriminator 3
 707 005e A268     		ldr	r2, [r4, #8]
 708 0060 1368     		ldr	r3, [r2]
 709              	.LVL58:
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
 710              		.loc 1 1219 0 discriminator 3
 711 0062 6169     		ldr	r1, [r4, #20]
 712 0064 8B43     		bics	r3, r1
 713              	.LVL59:
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 714              		.loc 1 1220 0 discriminator 3
 715 0066 1360     		str	r3, [r2]
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 716              		.loc 1 1222 0 discriminator 3
 717 0068 FFF7FEFF 		bl	CyExitCriticalSection
 718              	.LVL60:
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 719              		.loc 1 1225 0 discriminator 3
 720 006c 1C34     		adds	r4, r4, #28
 721              	.LVL61:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 722              		.loc 1 1202 0 discriminator 3
 723 006e 0135     		adds	r5, r5, #1
 724              	.LVL62:
 725              	.L62:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 726              		.loc 1 1202 0 is_stmt 0 discriminator 1
 727 0070 1F2D     		cmp	r5, #31
 728 0072 DDD9     		bls	.L63
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 729              		.loc 1 1238 0 is_stmt 1
 730              		@ sp needed
 731              	.LVL63:
 732              	.LVL64:
 733              	.LVL65:
 734              	.LVL66:
 735 0074 0CBC     		pop	{r2, r3}
 736 0076 9046     		mov	r8, r2
 737 0078 9946     		mov	r9, r3
 738 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 739              	.L66:
 740              		.align	2
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 54


 741              	.L65:
 742 007c 00000000 		.word	CapSense_ioList
 743              		.cfi_endproc
 744              	.LFE11:
 745              		.size	CapSense_SsSetAllIOsState, .-CapSense_SsSetAllIOsState
 746              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 747              		.align	2
 748              		.global	CapSense_SsPostAllWidgetsScan
 749              		.code	16
 750              		.thumb_func
 751              		.type	CapSense_SsPostAllWidgetsScan, %function
 752              	CapSense_SsPostAllWidgetsScan:
 753              	.LFB12:
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 754              		.loc 1 1317 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 0, uses_anonymous_args = 0
 758              		@ link register save eliminated.
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 759              		.loc 1 1374 0
 760              		@ sp needed
 761 0000 7047     		bx	lr
 762              		.cfi_endproc
 763              	.LFE12:
 764              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 765 0002 C046     		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 766              		.align	2
 767              		.global	CapSense_SsIsrInitialize
 768              		.code	16
 769              		.thumb_func
 770              		.type	CapSense_SsIsrInitialize, %function
 771              	CapSense_SsIsrInitialize:
 772              	.LFB13:
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 773              		.loc 1 1394 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              	.LVL67:
 778 0000 10B5     		push	{r4, lr}
 779              		.cfi_def_cfa_offset 8
 780              		.cfi_offset 4, -8
 781              		.cfi_offset 14, -4
1395:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 782              		.loc 1 1395 0
 783 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 784              	.LVL68:
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 785              		.loc 1 1396 0
 786              		@ sp needed
 787 0006 10BD     		pop	{r4, pc}
 788              		.cfi_endproc
 789              	.LFE13:
 790              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 791              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 792              		.align	2
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 55


 793              		.global	CapSense_SsSetModClkClockDivider
 794              		.code	16
 795              		.thumb_func
 796              		.type	CapSense_SsSetModClkClockDivider, %function
 797              	CapSense_SsSetModClkClockDivider:
 798              	.LFB14:
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 799              		.loc 1 1417 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804              	.LVL69:
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 805              		.loc 1 1420 0
 806 0000 074A     		ldr	r2, .L71
 807 0002 084B     		ldr	r3, .L71+4
 808 0004 1A60     		str	r2, [r3]
1430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 809              		.loc 1 1430 0
 810 0006 0138     		subs	r0, r0, #1
 811              	.LVL70:
 812 0008 0002     		lsls	r0, r0, #8
 813              	.LVL71:
 814 000a 074B     		ldr	r3, .L71+8
 815 000c 1860     		str	r0, [r3]
 816              	.L70:
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 817              		.loc 1 1433 0 discriminator 1
 818 000e 054B     		ldr	r3, .L71+4
 819 0010 1B68     		ldr	r3, [r3]
 820 0012 002B     		cmp	r3, #0
 821 0014 FBDB     		blt	.L70
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 822              		.loc 1 1439 0
 823 0016 054A     		ldr	r2, .L71+12
 824 0018 024B     		ldr	r3, .L71+4
 825 001a 1A60     		str	r2, [r3]
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 826              		.loc 1 1464 0
 827              		@ sp needed
 828 001c 7047     		bx	lr
 829              	.L72:
 830 001e C046     		.align	2
 831              	.L71:
 832 0020 40000040 		.word	1073741888
 833 0024 00000140 		.word	1073807360
 834 0028 00030140 		.word	1073808128
 835 002c 40FF0080 		.word	-2147418304
 836              		.cfi_endproc
 837              	.LFE14:
 838              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 839              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 840              		.align	2
 841              		.global	CapSense_SsSetSnsClockDivider
 842              		.code	16
 843              		.thumb_func
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 56


 844              		.type	CapSense_SsSetSnsClockDivider, %function
 845              	CapSense_SsSetSnsClockDivider:
 846              	.LFB15:
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 847              		.loc 1 1485 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              		@ link register save eliminated.
 852              	.LVL72:
1501:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
 853              		.loc 1 1501 0
 854 0000 074A     		ldr	r2, .L75
 855 0002 084B     		ldr	r3, .L75+4
 856 0004 1A60     		str	r2, [r3]
1511:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 857              		.loc 1 1511 0
 858 0006 0138     		subs	r0, r0, #1
 859              	.LVL73:
 860 0008 0002     		lsls	r0, r0, #8
 861              	.LVL74:
 862 000a 074B     		ldr	r3, .L75+8
 863 000c 1860     		str	r0, [r3]
 864              	.L74:
1514:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 865              		.loc 1 1514 0 discriminator 1
 866 000e 054B     		ldr	r3, .L75+4
 867 0010 1B68     		ldr	r3, [r3]
 868 0012 002B     		cmp	r3, #0
 869 0014 FBDB     		blt	.L74
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
 870              		.loc 1 1520 0
 871 0016 054A     		ldr	r2, .L75+12
 872 0018 024B     		ldr	r3, .L75+4
 873 001a 1A60     		str	r2, [r3]
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 874              		.loc 1 1546 0
 875              		@ sp needed
 876 001c 7047     		bx	lr
 877              	.L76:
 878 001e C046     		.align	2
 879              	.L75:
 880 0020 41000040 		.word	1073741889
 881 0024 00000140 		.word	1073807360
 882 0028 04030140 		.word	1073808132
 883 002c 41FF0080 		.word	-2147418303
 884              		.cfi_endproc
 885              	.LFE15:
 886              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 887              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 888              		.align	2
 889              		.global	CapSense_SsSetClockDividers
 890              		.code	16
 891              		.thumb_func
 892              		.type	CapSense_SsSetClockDividers, %function
 893              	CapSense_SsSetClockDividers:
 894              	.LFB16:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 57


1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
 895              		.loc 1 1569 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899              	.LVL75:
 900 0000 10B5     		push	{r4, lr}
 901              		.cfi_def_cfa_offset 8
 902              		.cfi_offset 4, -8
 903              		.cfi_offset 14, -4
 904 0002 0400     		movs	r4, r0
1571:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 905              		.loc 1 1571 0
 906 0004 0800     		movs	r0, r1
 907              	.LVL76:
 908 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 909              	.LVL77:
1574:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 910              		.loc 1 1574 0
 911 000a 2000     		movs	r0, r4
 912 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 913              	.LVL78:
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 914              		.loc 1 1575 0
 915              		@ sp needed
 916              	.LVL79:
 917 0010 10BD     		pop	{r4, pc}
 918              		.cfi_endproc
 919              	.LFE16:
 920              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 921 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 922              		.align	2
 923              		.global	CapSense_CalibrateWidget
 924              		.code	16
 925              		.thumb_func
 926              		.type	CapSense_CalibrateWidget, %function
 927              	CapSense_CalibrateWidget:
 928              	.LFB17:
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 929              		.loc 1 1621 0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 933              	.LVL80:
 934 0000 10B5     		push	{r4, lr}
 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 4, -8
 937              		.cfi_offset 14, -4
 938 0002 031E     		subs	r3, r0, #0
 939              	.LVL81:
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 940              		.loc 1 1626 0
 941 0004 01D1     		bne	.L81
1622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 942              		.loc 1 1622 0
 943 0006 0020     		movs	r0, #0
 944              	.LVL82:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 58


 945 0008 00E0     		b	.L79
 946              	.LVL83:
 947              	.L81:
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 948              		.loc 1 1628 0
 949 000a 0120     		movs	r0, #1
 950              	.LVL84:
 951              	.L79:
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 952              		.loc 1 1646 0
 953 000c 0028     		cmp	r0, #0
 954 000e 03D1     		bne	.L80
1685:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 955              		.loc 1 1685 0
 956 0010 5521     		movs	r1, #85
 957 0012 1800     		movs	r0, r3
 958              	.LVL85:
 959 0014 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 960              	.LVL86:
 961              	.L80:
1701:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 962              		.loc 1 1701 0
 963              		@ sp needed
 964 0018 10BD     		pop	{r4, pc}
 965              		.cfi_endproc
 966              	.LFE17:
 967              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 968 001a C046     		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 969              		.align	2
 970              		.global	CapSense_CalibrateAllWidgets
 971              		.code	16
 972              		.thumb_func
 973              		.type	CapSense_CalibrateAllWidgets, %function
 974              	CapSense_CalibrateAllWidgets:
 975              	.LFB18:
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 976              		.loc 1 1738 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 0, uses_anonymous_args = 0
 980 0000 70B5     		push	{r4, r5, r6, lr}
 981              		.cfi_def_cfa_offset 16
 982              		.cfi_offset 4, -16
 983              		.cfi_offset 5, -12
 984              		.cfi_offset 6, -8
 985              		.cfi_offset 14, -4
 986              	.LVL87:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 987              		.loc 1 1742 0
 988 0002 0024     		movs	r4, #0
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 989              		.loc 1 1739 0
 990 0004 0025     		movs	r5, #0
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 991              		.loc 1 1742 0
 992 0006 04E0     		b	.L83
 993              	.LVL88:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 59


 994              	.L84:
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 995              		.loc 1 1744 0 discriminator 3
 996 0008 2000     		movs	r0, r4
 997 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 998              	.LVL89:
 999 000e 0543     		orrs	r5, r0
 1000              	.LVL90:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1001              		.loc 1 1742 0 discriminator 3
 1002 0010 0134     		adds	r4, r4, #1
 1003              	.LVL91:
 1004              	.L83:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1005              		.loc 1 1742 0 is_stmt 0 discriminator 1
 1006 0012 002C     		cmp	r4, #0
 1007 0014 F8D0     		beq	.L84
1748:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
 1008              		.loc 1 1748 0 is_stmt 1
 1009 0016 2800     		movs	r0, r5
 1010              		@ sp needed
 1011              	.LVL92:
 1012              	.LVL93:
 1013 0018 70BD     		pop	{r4, r5, r6, pc}
 1014              		.cfi_endproc
 1015              	.LFE18:
 1016              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1017 001a C046     		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1018              		.align	2
 1019              		.global	CapSense_SsCSDGetColSnsClkDivider
 1020              		.code	16
 1021              		.thumb_func
 1022              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 1023              	CapSense_SsCSDGetColSnsClkDivider:
 1024              	.LFB25:
2173:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
2174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2178:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
2179:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2181:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
2183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2184:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
2186:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
2187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2189:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
2193:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 60


2195:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2196:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2213:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
2214:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2215:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
2216:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2218:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2220:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2221:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2222:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2230:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2242:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2244:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2249:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2251:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 61


2252:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2259:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2262:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2279:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2281:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2283:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2288:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2289:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2290:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2294:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 62


2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2313:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2316:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2317:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2321:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2334:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2339:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2340:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2346:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2348:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2355:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2365:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 63


2366:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2367:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2368:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2369:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2370:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2371:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2372:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2373:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2377:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2378:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2379:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2381:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2382:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2383:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2384:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2385:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2390:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2391:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2404:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2405:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2408:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2412:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 64


2423:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
2425:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2433:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2435:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2436:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2440:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2442:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2444:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2445:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2446:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2447:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2448:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2449:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2450:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2451:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2452:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2453:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2454:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2455:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2456:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2457:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2459:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2460:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2461:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2462:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2463:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2464:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2465:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2466:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2467:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2469:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2470:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2472:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2474:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2477:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2478:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2479:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 65


2480:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2481:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2483:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2498:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2500:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2507:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2511:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2513:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2520:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2522:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2526:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
2528:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2535:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2536:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 66


2537:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2539:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2540:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2541:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2542:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2547:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2548:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2549:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2550:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2551:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2565:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2570:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2572:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2574:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2576:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2582:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2587:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2588:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2589:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2590:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 67


2594:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2596:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2604:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2609:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2610:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2611:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2612:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2616:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2617:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2618:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2620:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2626:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 68


2651:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2652:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2653:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
2654:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2657:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2658:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2659:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2660:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2661:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2662:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2663:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2664:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2665:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2666:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2667:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2668:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2669:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2670:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2671:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2672:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2673:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2674:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2675:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2676:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2677:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2678:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2679:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2680:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2681:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2682:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2683:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2684:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2685:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2686:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2687:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2688:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2689:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2690:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2691:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2692:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2693:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2694:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2695:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2696:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2697:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2698:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2700:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2701:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2704:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2706:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
2707:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 69


2708:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2711:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2715:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2716:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2730:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2733:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2739:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
2741:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
2744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2745:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2746:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
2747:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2752:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2755:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
2757:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2758:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2759:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2762:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 70


2765:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2766:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2768:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2783:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2790:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2792:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1025              		.loc 1 2793 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 0
 1028              		@ frame_needed = 0, uses_anonymous_args = 0
 1029              		@ link register save eliminated.
 1030              	.LVL94:
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2795:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2796:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2798:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1031              		.loc 1 2800 0
 1032 0000 4001     		lsls	r0, r0, #5
 1033              	.LVL95:
 1034 0002 024B     		ldr	r3, .L86
 1035 0004 1818     		adds	r0, r3, r0
 1036 0006 4368     		ldr	r3, [r0, #4]
 1037              	.LVL96:
2801:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2803:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1038              		.loc 1 2803 0
 1039 0008 9889     		ldrh	r0, [r3, #12]
 1040              	.LVL97:
2804:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2805:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 71


2806:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2807:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2808:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2809:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2811:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1041              		.loc 1 2811 0
 1042              		@ sp needed
 1043 000a 7047     		bx	lr
 1044              	.L87:
 1045              		.align	2
 1046              	.L86:
 1047 000c 00000000 		.word	CapSense_dsFlash
 1048              		.cfi_endproc
 1049              	.LFE25:
 1050              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1051              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1052              		.align	2
 1053              		.global	CapSense_SsCSDCalcPrsSize
 1054              		.code	16
 1055              		.thumb_func
 1056              		.type	CapSense_SsCSDCalcPrsSize, %function
 1057              	CapSense_SsCSDCalcPrsSize:
 1058              	.LFB26:
2812:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2813:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2814:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2816:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2817:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2818:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2820:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2821:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2822:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2823:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2824:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2825:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2826:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2827:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2828:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2829:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2830:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2831:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2832:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2833:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2834:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2835:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2836:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2837:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2838:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2839:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2840:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2841:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2842:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2844:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 72


2845:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2846:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2847:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2848:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2849:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2850:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2851:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2852:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2853:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2854:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2855:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2857:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2858:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2859:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2860:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2861:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2862:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2863:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2864:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2865:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2866:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2867:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2868:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2869:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2870:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2871:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2872:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2873:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2874:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2875:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2876:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2877:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2878:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2879:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2880:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2881:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1059              		.loc 1 2881 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063              	.LVL98:
 1064 0000 10B5     		push	{r4, lr}
 1065              		.cfi_def_cfa_offset 8
 1066              		.cfi_offset 4, -8
 1067              		.cfi_offset 14, -4
 1068              	.LVL99:
2882:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2883:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2884:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2885:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSDV2)
2886:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
2887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
 1069              		.loc 1 2887 0
 1070 0002 0B4B     		ldr	r3, .L92
 1071 0004 9C7F     		ldrb	r4, [r3, #30]
 1072              	.LVL100:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 73


2888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2889:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * This operation is needed for Third-generation HW Block
2892:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * based devices to take into account DIV-2 flip-flop.
2893:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2894:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider <<= 1uL;
 1073              		.loc 1 2894 0
 1074 0006 4200     		lsls	r2, r0, #1
 1075              	.LVL101:
2895:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2896:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2897:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1076              		.loc 1 2897 0
 1077 0008 4003     		lsls	r0, r0, #13
 1078 000a 801A     		subs	r0, r0, r2
 1079 000c 0123     		movs	r3, #1
 1080 000e 8B40     		lsls	r3, r3, r1
 1081 0010 013B     		subs	r3, r3, #1
 1082 0012 6343     		muls	r3, r4
 1083 0014 9842     		cmp	r0, r3
 1084 0016 05D9     		bls	.L90
2898:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2900:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2901:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2902:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1085              		.loc 1 2902 0
 1086 0018 1102     		lsls	r1, r2, #8
 1087              	.LVL102:
 1088 001a 8A1A     		subs	r2, r1, r2
 1089              	.LVL103:
 1090 001c 9342     		cmp	r3, r2
 1091 001e 03D3     		bcc	.L91
2903:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2904:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2905:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1092              		.loc 1 2905 0
 1093 0020 4020     		movs	r0, #64
 1094 0022 02E0     		b	.L89
 1095              	.LVL104:
 1096              	.L90:
2900:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1097              		.loc 1 2900 0
 1098 0024 C020     		movs	r0, #192
 1099 0026 00E0     		b	.L89
 1100              	.LVL105:
 1101              	.L91:
2906:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2907:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2908:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2909:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2910:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1102              		.loc 1 2910 0
 1103 0028 0020     		movs	r0, #0
 1104              	.L89:
 1105              	.LVL106:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 74


2911:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2913:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1106              		.loc 1 2913 0
 1107 002a C0B2     		uxtb	r0, r0
 1108              	.LVL107:
2914:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1109              		.loc 1 2914 0
 1110              		@ sp needed
 1111              	.LVL108:
 1112 002c 10BD     		pop	{r4, pc}
 1113              	.L93:
 1114 002e C046     		.align	2
 1115              	.L92:
 1116 0030 00000000 		.word	CapSense_dsRam
 1117              		.cfi_endproc
 1118              	.LFE26:
 1119              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
 1120              		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1121              		.align	2
 1122              		.code	16
 1123              		.thumb_func
 1124              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
 1125              	CapSense_SsSetWidgetSenseClkSrc:
 1126              	.LFB24:
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1127              		.loc 1 2458 0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 0
 1130              		@ frame_needed = 0, uses_anonymous_args = 0
 1131              	.LVL109:
 1132 0000 10B5     		push	{r4, lr}
 1133              		.cfi_def_cfa_offset 8
 1134              		.cfi_offset 4, -8
 1135              		.cfi_offset 14, -4
 1136 0002 0C00     		movs	r4, r1
2470:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1137              		.loc 1 2470 0
 1138 0004 FFF7FEFF 		bl	CapSense_SsCSDGetColSnsClkDivider
 1139              	.LVL110:
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
 1140              		.loc 1 2490 0
 1141 0008 4000     		lsls	r0, r0, #1
 1142              	.LVL111:
 1143 000a 2188     		ldrh	r1, [r4]
 1144 000c FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1145              	.LVL112:
2499:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1146              		.loc 1 2499 0
 1147 0010 A073     		strb	r0, [r4, #14]
2534:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1148              		.loc 1 2534 0
 1149              		@ sp needed
 1150              	.LVL113:
 1151 0012 10BD     		pop	{r4, pc}
 1152              		.cfi_endproc
 1153              	.LFE24:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 75


 1154              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
 1155              		.global	__aeabi_uidiv
 1156              		.section	.text.CapSense_SsAutoTuneWidget,"ax",%progbits
 1157              		.align	2
 1158              		.global	CapSense_SsAutoTuneWidget
 1159              		.code	16
 1160              		.thumb_func
 1161              		.type	CapSense_SsAutoTuneWidget, %function
 1162              	CapSense_SsAutoTuneWidget:
 1163              	.LFB19:
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1164              		.loc 1 1781 0
 1165              		.cfi_startproc
 1166              		@ args = 0, pretend = 0, frame = 32
 1167              		@ frame_needed = 0, uses_anonymous_args = 0
 1168              	.LVL114:
 1169 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1170              		.cfi_def_cfa_offset 20
 1171              		.cfi_offset 4, -20
 1172              		.cfi_offset 5, -16
 1173              		.cfi_offset 6, -12
 1174              		.cfi_offset 7, -8
 1175              		.cfi_offset 14, -4
 1176 0002 4746     		mov	r7, r8
 1177 0004 80B4     		push	{r7}
 1178              		.cfi_def_cfa_offset 24
 1179              		.cfi_offset 8, -24
 1180 0006 88B0     		sub	sp, sp, #32
 1181              		.cfi_def_cfa_offset 56
 1182 0008 0500     		movs	r5, r0
 1183              	.LVL115:
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 1184              		.loc 1 1801 0
 1185 000a 4301     		lsls	r3, r0, #5
 1186 000c 3E4A     		ldr	r2, .L106
 1187 000e D318     		adds	r3, r2, r3
 1188              	.LVL116:
 1189 0010 5C68     		ldr	r4, [r3, #4]
 1190              	.LVL117:
1802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1191              		.loc 1 1802 0
 1192 0012 9F68     		ldr	r7, [r3, #8]
 1193              	.LVL118:
1842:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1194              		.loc 1 1842 0
 1195 0014 FA21     		movs	r1, #250
 1196 0016 8900     		lsls	r1, r1, #2
 1197 0018 3C48     		ldr	r0, .L106+4
 1198              	.LVL119:
 1199 001a FFF7FEFF 		bl	__aeabi_uidiv
 1200              	.LVL120:
 1201 001e 0600     		movs	r6, r0
 1202              	.LVL121:
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1203              		.loc 1 1845 0
 1204 0020 C307     		lsls	r3, r0, #31
 1205 0022 00D5     		bpl	.L97
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 76


1847:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1206              		.loc 1 1847 0
 1207 0024 0136     		adds	r6, r6, #1
 1208              	.LVL122:
 1209              	.L97:
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
 1210              		.loc 1 1851 0
 1211 0026 01AB     		add	r3, sp, #4
 1212 0028 394A     		ldr	r2, .L106+8
 1213 002a DA82     		strh	r2, [r3, #22]
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
 1214              		.loc 1 1852 0
 1215 002c FA22     		movs	r2, #250
 1216 002e 9200     		lsls	r2, r2, #2
 1217 0030 1A82     		strh	r2, [r3, #16]
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
 1218              		.loc 1 1853 0
 1219 0032 C832     		adds	r2, r2, #200
 1220 0034 5A82     		strh	r2, [r3, #18]
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
 1221              		.loc 1 1854 0
 1222 0036 228A     		ldrh	r2, [r4, #16]
 1223 0038 9A82     		strh	r2, [r3, #20]
1855:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1224              		.loc 1 1855 0
 1225 003a 2200     		movs	r2, r4
 1226 003c 1232     		adds	r2, r2, #18
 1227 003e 0492     		str	r2, [sp, #16]
1864:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1228              		.loc 1 1864 0
 1229 0040 0C23     		movs	r3, #12
 1230 0042 2380     		strh	r3, [r4]
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
 1231              		.loc 1 1866 0
 1232 0044 0433     		adds	r3, r3, #4
 1233 0046 A381     		strh	r3, [r4, #12]
1867:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1234              		.loc 1 1867 0
 1235 0048 0023     		movs	r3, #0
 1236 004a A373     		strb	r3, [r4, #14]
1875:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1237              		.loc 1 1875 0
 1238 004c 5521     		movs	r1, #85
 1239 004e 2800     		movs	r0, r5
 1240 0050 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1241              	.LVL123:
1793:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1242              		.loc 1 1793 0
 1243 0054 0021     		movs	r1, #0
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxCp = 0u;
 1244              		.loc 1 1791 0
 1245 0056 0023     		movs	r3, #0
 1246 0058 9C46     		mov	ip, r3
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1247              		.loc 1 1878 0
 1248 005a 0022     		movs	r2, #0
 1249 005c 07E0     		b	.L98
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 77


 1250              	.LVL124:
 1251              	.L100:
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1252              		.loc 1 1881 0
 1253 005e 7B7A     		ldrb	r3, [r7, #9]
 1254 0060 9942     		cmp	r1, r3
 1255 0062 02D2     		bcs	.L99
 1256              	.LVL125:
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1257              		.loc 1 1887 0
 1258 0064 3988     		ldrh	r1, [r7]
 1259 0066 8C46     		mov	ip, r1
 1260              	.LVL126:
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
 1261              		.loc 1 1886 0
 1262 0068 1900     		movs	r1, r3
 1263              	.LVL127:
 1264              	.L99:
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1265              		.loc 1 1898 0 discriminator 2
 1266 006a 0A37     		adds	r7, r7, #10
 1267              	.LVL128:
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1268              		.loc 1 1878 0 discriminator 2
 1269 006c 0132     		adds	r2, r2, #1
 1270              	.LVL129:
 1271              	.L98:
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1272              		.loc 1 1878 0 is_stmt 0 discriminator 1
 1273 006e 6B01     		lsls	r3, r5, #5
 1274 0070 2548     		ldr	r0, .L106
 1275 0072 C318     		adds	r3, r0, r3
 1276 0074 DB7E     		ldrb	r3, [r3, #27]
 1277 0076 9A42     		cmp	r2, r3
 1278 0078 F1D3     		bcc	.L100
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
 1279              		.loc 1 1902 0 is_stmt 1
 1280 007a 637A     		ldrb	r3, [r4, #9]
 1281 007c 01AF     		add	r7, sp, #4
 1282              	.LVL130:
 1283 007e BB76     		strb	r3, [r7, #26]
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
 1284              		.loc 1 1903 0
 1285 0080 F976     		strb	r1, [r7, #27]
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
 1286              		.loc 1 1904 0
 1287 0082 A37A     		ldrb	r3, [r4, #10]
 1288 0084 DB00     		lsls	r3, r3, #3
 1289 0086 234A     		ldr	r2, .L106+12
 1290              	.LVL131:
 1291 0088 D318     		adds	r3, r2, r3
 1292 008a 5B68     		ldr	r3, [r3, #4]
 1293 008c 0293     		str	r3, [sp, #8]
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
 1294              		.loc 1 1905 0
 1295 008e 0C23     		movs	r3, #12
 1296 0090 9846     		mov	r8, r3
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 78


 1297 0092 A044     		add	r8, r8, r4
 1298 0094 4346     		mov	r3, r8
 1299 0096 0393     		str	r3, [sp, #12]
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
 1300              		.loc 1 1906 0
 1301 0098 FA23     		movs	r3, #250
 1302 009a 9B00     		lsls	r3, r3, #2
 1303 009c 6046     		mov	r0, ip
 1304 009e 5843     		muls	r0, r3
 1305 00a0 1D49     		ldr	r1, .L106+16
 1306              	.LVL132:
 1307 00a2 FFF7FEFF 		bl	__aeabi_uidiv
 1308              	.LVL133:
 1309 00a6 3883     		strh	r0, [r7, #24]
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
 1310              		.loc 1 1910 0
 1311 00a8 3800     		movs	r0, r7
 1312 00aa FFF7FEFF 		bl	SmartSense_TunePrescalers
 1313              	.LVL134:
1911:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1314              		.loc 1 1911 0
 1315 00ae 0190     		str	r0, [sp, #4]
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1316              		.loc 1 1914 0
 1317 00b0 01E0     		b	.L101
 1318              	.L102:
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1319              		.loc 1 1916 0
 1320 00b2 5B00     		lsls	r3, r3, #1
 1321 00b4 A381     		strh	r3, [r4, #12]
 1322              	.L101:
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1323              		.loc 1 1914 0
 1324 00b6 A389     		ldrh	r3, [r4, #12]
 1325 00b8 9E42     		cmp	r6, r3
 1326 00ba FAD8     		bhi	.L102
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1327              		.loc 1 1972 0
 1328 00bc 174B     		ldr	r3, .L106+20
 1329 00be 9842     		cmp	r0, r3
 1330 00c0 01D8     		bhi	.L105
1782:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1331              		.loc 1 1782 0
 1332 00c2 0026     		movs	r6, #0
 1333              	.LVL135:
 1334 00c4 00E0     		b	.L103
 1335              	.LVL136:
 1336              	.L105:
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1337              		.loc 1 1974 0
 1338 00c6 0626     		movs	r6, #6
 1339              	.LVL137:
 1340              	.L103:
1984:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1341              		.loc 1 1984 0
 1342 00c8 5521     		movs	r1, #85
 1343 00ca 2800     		movs	r0, r5
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 79


 1344              	.LVL138:
 1345 00cc FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1346              	.LVL139:
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
 1347              		.loc 1 1986 0
 1348 00d0 A37A     		ldrb	r3, [r4, #10]
 1349 00d2 DB00     		lsls	r3, r3, #3
 1350 00d4 0F4A     		ldr	r2, .L106+12
 1351 00d6 D318     		adds	r3, r2, r3
 1352 00d8 5B68     		ldr	r3, [r3, #4]
 1353 00da 01A8     		add	r0, sp, #4
 1354 00dc 4360     		str	r3, [r0, #4]
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
 1355              		.loc 1 1987 0
 1356 00de 637A     		ldrb	r3, [r4, #9]
 1357 00e0 8376     		strb	r3, [r0, #26]
1988:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1358              		.loc 1 1988 0
 1359 00e2 4346     		mov	r3, r8
 1360 00e4 8360     		str	r3, [r0, #8]
2003:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1361              		.loc 1 2003 0
 1362 00e6 FFF7FEFF 		bl	SmartSense_TuneSensitivity
 1363              	.LVL140:
 1364 00ea 2080     		strh	r0, [r4]
2013:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1365              		.loc 1 2013 0
 1366 00ec 2100     		movs	r1, r4
 1367 00ee 2800     		movs	r0, r5
 1368 00f0 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1369              	.LVL141:
2016:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1370              		.loc 1 2016 0
 1371 00f4 5521     		movs	r1, #85
 1372 00f6 2800     		movs	r0, r5
 1373 00f8 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1374              	.LVL142:
 1375 00fc 3043     		orrs	r0, r6
 1376              	.LVL143:
2023:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1377              		.loc 1 2023 0
 1378 00fe 08B0     		add	sp, sp, #32
 1379              		@ sp needed
 1380              	.LVL144:
 1381              	.LVL145:
 1382 0100 04BC     		pop	{r2}
 1383 0102 9046     		mov	r8, r2
 1384 0104 F0BD     		pop	{r4, r5, r6, r7, pc}
 1385              	.L107:
 1386 0106 C046     		.align	2
 1387              	.L106:
 1388 0108 00000000 		.word	CapSense_dsFlash
 1389 010c 570B0000 		.word	2903
 1390 0110 C05D0000 		.word	24000
 1391 0114 00000000 		.word	.LANCHOR1
 1392 0118 FF0F0000 		.word	4095
 1393 011c 880D0100 		.word	69000
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 80


 1394              		.cfi_endproc
 1395              	.LFE19:
 1396              		.size	CapSense_SsAutoTuneWidget, .-CapSense_SsAutoTuneWidget
 1397              		.section	.text.CapSense_SsAutoTune,"ax",%progbits
 1398              		.align	2
 1399              		.global	CapSense_SsAutoTune
 1400              		.code	16
 1401              		.thumb_func
 1402              		.type	CapSense_SsAutoTune, %function
 1403              	CapSense_SsAutoTune:
 1404              	.LFB20:
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1405              		.loc 1 2048 0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 0
 1408              		@ frame_needed = 0, uses_anonymous_args = 0
 1409 0000 70B5     		push	{r4, r5, r6, lr}
 1410              		.cfi_def_cfa_offset 16
 1411              		.cfi_offset 4, -16
 1412              		.cfi_offset 5, -12
 1413              		.cfi_offset 6, -8
 1414              		.cfi_offset 14, -4
 1415              	.LVL146:
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1416              		.loc 1 2053 0
 1417 0002 0024     		movs	r4, #0
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1418              		.loc 1 2049 0
 1419 0004 0025     		movs	r5, #0
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1420              		.loc 1 2053 0
 1421 0006 04E0     		b	.L109
 1422              	.LVL147:
 1423              	.L110:
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1424              		.loc 1 2058 0
 1425 0008 2000     		movs	r0, r4
 1426 000a FFF7FEFF 		bl	CapSense_SsAutoTuneWidget
 1427              	.LVL148:
 1428 000e 0543     		orrs	r5, r0
 1429              	.LVL149:
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1430              		.loc 1 2053 0
 1431 0010 0134     		adds	r4, r4, #1
 1432              	.LVL150:
 1433              	.L109:
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1434              		.loc 1 2053 0 is_stmt 0 discriminator 1
 1435 0012 002C     		cmp	r4, #0
 1436 0014 F8D0     		beq	.L110
2062:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
 1437              		.loc 1 2062 0 is_stmt 1
 1438 0016 2800     		movs	r0, r5
 1439              		@ sp needed
 1440              	.LVL151:
 1441              	.LVL152:
 1442 0018 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 81


 1443              		.cfi_endproc
 1444              	.LFE20:
 1445              		.size	CapSense_SsAutoTune, .-CapSense_SsAutoTune
 1446 001a C046     		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1447              		.align	2
 1448              		.global	CapSense_SsInitializeSourceSenseClk
 1449              		.code	16
 1450              		.thumb_func
 1451              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1452              	CapSense_SsInitializeSourceSenseClk:
 1453              	.LFB23:
2405:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1454              		.loc 1 2405 0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 0
 1457              		@ frame_needed = 0, uses_anonymous_args = 0
 1458 0000 10B5     		push	{r4, lr}
 1459              		.cfi_def_cfa_offset 8
 1460              		.cfi_offset 4, -8
 1461              		.cfi_offset 14, -4
 1462              	.LVL153:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1463              		.loc 1 2409 0
 1464 0002 0024     		movs	r4, #0
 1465 0004 07E0     		b	.L112
 1466              	.LVL154:
 1467              	.L113:
2411:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1468              		.loc 1 2411 0
 1469 0006 6301     		lsls	r3, r4, #5
 1470 0008 044A     		ldr	r2, .L114
 1471 000a D318     		adds	r3, r2, r3
 1472 000c 5968     		ldr	r1, [r3, #4]
 1473              	.LVL155:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1474              		.loc 1 2417 0
 1475 000e 2000     		movs	r0, r4
 1476 0010 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1477              	.LVL156:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1478              		.loc 1 2409 0
 1479 0014 0134     		adds	r4, r4, #1
 1480              	.LVL157:
 1481              	.L112:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1482              		.loc 1 2409 0 is_stmt 0 discriminator 1
 1483 0016 002C     		cmp	r4, #0
 1484 0018 F5D0     		beq	.L113
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1485              		.loc 1 2432 0 is_stmt 1
 1486              		@ sp needed
 1487              	.LVL158:
 1488 001a 10BD     		pop	{r4, pc}
 1489              	.L115:
 1490              		.align	2
 1491              	.L114:
 1492 001c 00000000 		.word	CapSense_dsFlash
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 82


 1493              		.cfi_endproc
 1494              	.LFE23:
 1495              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1496              		.section	.text.CapSense_SetInactiveElectrodeState,"ax",%progbits
 1497              		.align	2
 1498              		.global	CapSense_SetInactiveElectrodeState
 1499              		.code	16
 1500              		.thumb_func
 1501              		.type	CapSense_SetInactiveElectrodeState, %function
 1502              	CapSense_SetInactiveElectrodeState:
 1503              	.LFB28:
2915:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2916:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2917:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2919:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
2920:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2921:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
2922:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2923:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2924:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2925:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
2926:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2927:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2928:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2929:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
2930:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
2932:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2934:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
2935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
2936:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2938:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
2939:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2940:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 hsiomReg;
2941:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 drReg;
2942:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 pcReg;
2943:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
2944:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8  interruptState;
2945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2946:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store register state */
2947:Generated_Source\PSoC4/CapSense_Sensing.c ****         hsiomReg = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK;
2948:Generated_Source\PSoC4/CapSense_Sensing.c ****         drReg = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR) & CapSense_EXT_CAP_DR_MASK;
2949:Generated_Source\PSoC4/CapSense_Sensing.c ****         pcReg = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR) & CapSense_EXT_CAP_PC_MASK;
2950:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2951:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2952:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2953:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
2954:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
2955:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
2956:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2958:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2959:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2960:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 83


2961:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
2962:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
2963:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2964:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2965:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2966:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2967:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
2968:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
2969:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
2970:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
2971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2974:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
2975:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2976:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Restore previous register values */
2977:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2978:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
2979:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
2980:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= pcReg;
2981:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
2982:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2983:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2984:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2985:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
2986:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
2987:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= drReg;
2988:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
2989:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2990:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2991:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2992:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
2993:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
2994:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= hsiomReg;
2995:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
2996:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2997:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2998:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2999:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
3000:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3002:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV1)
3003:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3004:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
3005:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3006:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3007:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3008:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
3009:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3010:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3011:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
3012:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
3013:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
3014:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
3015:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
3016:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3017:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 84


3018:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
3019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3021:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
3022:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
3023:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
3024:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3025:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodHsiom = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK_
3026:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(CapSense_CMOD_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CMOD;
3027:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(CapSense_CMOD_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CMOD;
3028:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3029:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CSH capacitor is connected to. */
3030:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3031:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3032:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshHsiom = CY_GET_REG32(CapSense_CSH_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3033:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshDr = CY_GET_REG32(CapSense_CSH_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CSH;
3034:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshPc = CY_GET_REG32(CapSense_CSH_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CSH;
3035:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3037:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3039:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintA capacitor is connected to. */
3040:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAHsiom = CY_GET_REG32(CapSense_CintA_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3041:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintADr = CY_GET_REG32(CapSense_CintA_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTA;
3042:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAPc = CY_GET_REG32(CapSense_CintA_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTA;
3043:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3044:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintB capacitor is connected to. */
3045:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBHsiom = CY_GET_REG32(CapSense_CintB_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3046:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBDr = CY_GET_REG32(CapSense_CintB_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTB;
3047:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBPc = CY_GET_REG32(CapSense_CintB_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTB;
3048:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3049:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3050:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3051:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CMOD capacitor from the AMUXBUS and connect it to GND. */
3052:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CMOD,
3053:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3054:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR, CapSense_EXT_CAP_DR_MASK_CMOD, 0u);
3055:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR, CapSense_EXT_CAP_PC_MASK_CMOD,
3056:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CMOD);
3057:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3058:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3059:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3060:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Disconnect the CSH capacitor from the AMUXBUS and connect it to GND. */
3061:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CSH,
3062:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_HSIOM_SEL_GPIO);
3063:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, CapSense_EXT_CAP_DR_MASK_CSH, 0u);
3064:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR, CapSense_EXT_CAP_PC_MASK_CSH,
3065:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_STRONG_CFG_CSH);
3066:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3067:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3068:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3069:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3070:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintA capacitor from the AMUXBUS and connect it to GND. */
3071:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTA,
3072:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3073:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTA, 0u);
3074:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTA,
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 85


3075:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTA);
3076:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3077:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintB capacitor from the AMUXBUS and connect it to GND. */
3078:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTB,
3079:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3080:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTB, 0u);
3081:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTB,
3082:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTB);
3083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3084:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3085:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
3086:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
3087:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3088:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3089:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CMOD capacitor is connected to. */
3090:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR,
3091:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CMOD, cmodPc);
3092:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR,
3093:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CMOD, cmodDr);
3094:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR,
3095:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CMOD, cmodHsiom);
3096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3098:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Restore the pin configuration, the CSH capacitor is connected to. */
3100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR,
3101:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_MASK_CSH, cshPc);
3102:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR,
3103:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_DR_MASK_CSH, cshDr);
3104:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR,
3105:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_HSIOM_MASK_CSH, cshHsiom);
3106:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3107:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3108:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3109:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3110:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintA capacitor is connected to. */
3111:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR,
3112:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTA, cintAPc);
3113:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR,
3114:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTA, cintADr);
3115:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR,
3116:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTA, cintAHsiom);
3117:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3118:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintB capacitor is connected to. */
3119:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR,
3120:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTB, cintBPc);
3121:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR,
3122:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTB, cintBDr);
3123:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR,
3124:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTB, cintBHsiom);
3125:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3126:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
3127:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV1) */
3128:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3129:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3130:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
3131:Generated_Source\PSoC4/CapSense_Sensing.c ****     (CapSense_ENABLE == CapSense_CSX_EN))
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 86


3132:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3133:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SetInactiveElectrodeState
3134:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3135:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3136:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3137:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the RAM data structure with the desired state of inactive
3138:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  electrodes for the specified operation mode. The state of pins is not changed
3139:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  in scope of this routine.
3140:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3141:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3142:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the following registers of RAM data structure:
3143:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSD_ISC_VALUE - Connection of inactive CSD and CSX
3144:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during the regular CSD scan. By default, this register is initialized
3145:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     with the value of Inactive Sensor Connection combobox on the CSD Settings tab.
3146:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSD_E value should be used as the Mode parameter
3147:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3149:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSX_ISC_VALUE - Connection of inactive CSD, CSX and
3150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during the regular CSX scan. By default, this
3151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     register is initialized with the value of Inactive Sensor Connection combobox
3152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     on the CSX Settings tab.
3153:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSX_E value should be used as the Mode parameter
3154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SNS_CAP_ISC_VALUE - Connection of inactive CSD and CSX
3157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during measurement of CSD electrodes capacitance.
3158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     This register is initialized with the CapSense_SNS_CONNECTION_GROUND value
3159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     by default.
3160:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SNS_CAP_E value should be used as the Mode parameter
3161:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3162:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3163:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSX_SNS_CAP_ISC_VALUE - Connection of inactive CSD, CSX and
3164:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during measurement of CSX electrodes (Tx and Rx)
3165:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     capacitance. This register is initialized with the CapSense_SNS_CONNECTION_GROUND
3166:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     value by default.
3167:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSX_SNS_CAP_E value should be used as the Mode parameter
3168:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3169:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3170:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SH_CAP_ISC_VALUE - Connection of inactive CSD and CSX electrodes
3171:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     measurement of dedicated Shield  electrodes capacitance. This register is initialized wit
3172:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the CapSense_SNS_CONNECTION_GROUND value by default.
3173:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SH_CAP_E value should be used as the Mode parameter
3174:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3175:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3176:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3177:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode Operation mode, the state of inactive sensors should be configured for.
3178:Generated_Source\PSoC4/CapSense_Sensing.c ****     *       This parameter can take the following values:
3179:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSD_E - Regular CSD scan.
3180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSX_E - Regular CSX scan.
3181:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SNS_CAP_E - Measurement of the CSD sensor capacitance.
3182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSX_SNS_CAP_E - Measurement of the CSX electrode capacitance.
3183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SH_CAP_E - Measurement of the dedicated CSD Shield
3184:Generated_Source\PSoC4/CapSense_Sensing.c ****     *          electrode capacitance.
3185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3186:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  state The desired state of inactive sensors.
3188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        This parameter can take the following values:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 87


3189:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_GROUND - Inactive sensors are connected to the ground.
3190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_HIGHZ - Inactive sensors are floating (not
3191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           connected to GND or Shield).
3192:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_SHIELD - Inactive sensors are connected to the shield.
3193:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           This option is available only if the Enable shield electrode check box is set.
3194:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           At least one dedicated shield electrode is required to use the
3195:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           CapSense_SNS_CONNECTION_SHIELD option for the CapSense_BIST_CSD_SH_CAP_E
3196:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           operation mode.
3197:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
3199:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
3200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation was successfully completed.
3201:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
3202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3204:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32_t CapSense_SetInactiveElectrodeState(CapSense_OPERATION_MODE_ENUM mode, uint32_t state)
3205:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1504              		.loc 1 3205 0
 1505              		.cfi_startproc
 1506              		@ args = 0, pretend = 0, frame = 0
 1507              		@ frame_needed = 0, uses_anonymous_args = 0
 1508              	.LVL159:
 1509 0000 10B5     		push	{r4, lr}
 1510              		.cfi_def_cfa_offset 8
 1511              		.cfi_offset 4, -8
 1512              		.cfi_offset 14, -4
 1513              	.LVL160:
3206:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32_t retVal = CYRET_SUCCESS;
3207:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3208:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(mode)
 1514              		.loc 1 3208 0
 1515 0002 0028     		cmp	r0, #0
 1516 0004 04D1     		bne	.L120
3209:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
3210:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSD_EN)
3211:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSD_E:
3212:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsdISC = (uint8)state;
 1517              		.loc 1 3212 0
 1518 0006 BD23     		movs	r3, #189
 1519 0008 5B00     		lsls	r3, r3, #1
 1520 000a 044A     		ldr	r2, .L121
 1521 000c D154     		strb	r1, [r2, r3]
3213:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1522              		.loc 1 3213 0
 1523 000e 03E0     		b	.L119
 1524              	.L120:
3214:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3215:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3216:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSX_EN)
3217:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSX_E:
3218:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsxISC = (uint8)state;
3219:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3220:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3222:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3223:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3224:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN))
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 88


3225:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SNS_CAP_E:
3226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsdSnsCapISC = (uint8)state;
3227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3228:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3229:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3230:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3231:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3232:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSX_EN))
3233:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSX_SNS_CAP_E:
3234:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsxSnsCapISC = (uint8)state;
3235:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3236:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3238:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3239:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SH_CAP_EN) &&\
3240:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN) &&\
3241:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_SHIELD_EN))
3242:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SH_CAP_E:
3243:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_CSD_TOTAL_SHIELD_COUNT == 0u) &&
3244:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_SNS_CONNECTION_SHIELD != state))
3245:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3246:Generated_Source\PSoC4/CapSense_Sensing.c ****                     retVal = CYRET_BAD_PARAM;
3247:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3248:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
3249:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3250:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_dsRam.selfTestConfig.bistCsdShCapISC = (uint8)state;
3251:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3252:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3253:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3254:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3255:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
3256:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0u);
 1525              		.loc 1 3256 0 discriminator 1
 1526 0010 0020     		movs	r0, #0
 1527              	.LVL161:
 1528 0012 FFF7FEFF 		bl	CyHalt
 1529              	.LVL162:
3257:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = CYRET_BAD_PARAM;
 1530              		.loc 1 3257 0 discriminator 1
 1531 0016 0120     		movs	r0, #1
 1532              	.LVL163:
 1533              	.L119:
3258:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
3259:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
3260:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3261:Generated_Source\PSoC4/CapSense_Sensing.c ****         return(retVal);
3262:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1534              		.loc 1 3262 0
 1535              		@ sp needed
 1536 0018 10BD     		pop	{r4, pc}
 1537              	.L122:
 1538 001a C046     		.align	2
 1539              	.L121:
 1540 001c 00000000 		.word	CapSense_dsRam
 1541              		.cfi_endproc
 1542              	.LFE28:
 1543              		.size	CapSense_SetInactiveElectrodeState, .-CapSense_SetInactiveElectrodeState
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 89


 1544              		.section	.text.CapSense_WriteBitsSafe,"ax",%progbits
 1545              		.align	2
 1546              		.global	CapSense_WriteBitsSafe
 1547              		.code	16
 1548              		.thumb_func
 1549              		.type	CapSense_WriteBitsSafe, %function
 1550              	CapSense_WriteBitsSafe:
 1551              	.LFB29:
3263:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
3264:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSX_EN)) */
3265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3266:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3267:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
3268:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_WriteBitsSafe
3269:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
3270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
3272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3273:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3274:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3275:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
3276:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3277:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3278:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3279:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param regPtr
3280:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a pointer to port-pin register.
3281:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3282:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mask
3283:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies bits to be modified.
3284:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3285:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param value
3286:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a value to be written to the register.
3287:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3288:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
3289:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_WriteBitsSafe(reg32 * regPtr, uint32 mask, uint32 value)
3290:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 1552              		.loc 1 3290 0
 1553              		.cfi_startproc
 1554              		@ args = 0, pretend = 0, frame = 0
 1555              		@ frame_needed = 0, uses_anonymous_args = 0
 1556              	.LVL164:
 1557 0000 70B5     		push	{r4, r5, r6, lr}
 1558              		.cfi_def_cfa_offset 16
 1559              		.cfi_offset 4, -16
 1560              		.cfi_offset 5, -12
 1561              		.cfi_offset 6, -8
 1562              		.cfi_offset 14, -4
 1563 0002 0500     		movs	r5, r0
 1564 0004 0E00     		movs	r6, r1
 1565 0006 1400     		movs	r4, r2
3291:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 interruptState = CyEnterCriticalSection();
 1566              		.loc 1 3291 0
 1567 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1568              	.LVL165:
3292:Generated_Source\PSoC4/CapSense_Sensing.c ****     (* regPtr) = ((* regPtr) & ((uint32)~mask)) | (value & mask);
 1569              		.loc 1 3292 0
 1570 000c 2B68     		ldr	r3, [r5]
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 90


 1571 000e 5C40     		eors	r4, r3
 1572              	.LVL166:
 1573 0010 3440     		ands	r4, r6
 1574 0012 5C40     		eors	r4, r3
 1575 0014 2C60     		str	r4, [r5]
3293:Generated_Source\PSoC4/CapSense_Sensing.c ****     CyExitCriticalSection(interruptState);
 1576              		.loc 1 3293 0
 1577 0016 FFF7FEFF 		bl	CyExitCriticalSection
 1578              	.LVL167:
3294:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1579              		.loc 1 3294 0
 1580              		@ sp needed
 1581              	.LVL168:
 1582              	.LVL169:
 1583 001a 70BD     		pop	{r4, r5, r6, pc}
 1584              		.cfi_endproc
 1585              	.LFE29:
 1586              		.size	CapSense_WriteBitsSafe, .-CapSense_WriteBitsSafe
 1587              		.section	.text.CapSense_SsCSDDisableMode,"ax",%progbits
 1588              		.align	2
 1589              		.code	16
 1590              		.thumb_func
 1591              		.type	CapSense_SsCSDDisableMode, %function
 1592              	CapSense_SsCSDDisableMode:
 1593              	.LFB9:
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 1594              		.loc 1 954 0
 1595              		.cfi_startproc
 1596              		@ args = 0, pretend = 0, frame = 0
 1597              		@ frame_needed = 0, uses_anonymous_args = 0
 1598 0000 10B5     		push	{r4, lr}
 1599              		.cfi_def_cfa_offset 8
 1600              		.cfi_offset 4, -8
 1601              		.cfi_offset 14, -4
 968:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1602              		.loc 1 968 0
 1603 0002 0022     		movs	r2, #0
 1604 0004 F021     		movs	r1, #240
 1605 0006 0901     		lsls	r1, r1, #4
 1606 0008 0248     		ldr	r0, .L125
 1607 000a FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1608              	.LVL170:
 971:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1609              		.loc 1 971 0
 1610 000e FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 1611              	.LVL171:
 983:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1612              		.loc 1 983 0
 1613              		@ sp needed
 1614 0012 10BD     		pop	{r4, pc}
 1615              	.L126:
 1616              		.align	2
 1617              	.L125:
 1618 0014 00040240 		.word	1073873920
 1619              		.cfi_endproc
 1620              	.LFE9:
 1621              		.size	CapSense_SsCSDDisableMode, .-CapSense_SsCSDDisableMode
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 91


 1622              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 1623              		.align	2
 1624              		.global	CapSense_SsSwitchSensingMode
 1625              		.code	16
 1626              		.thumb_func
 1627              		.type	CapSense_SsSwitchSensingMode, %function
 1628              	CapSense_SsSwitchSensingMode:
 1629              	.LFB10:
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 1630              		.loc 1 1068 0
 1631              		.cfi_startproc
 1632              		@ args = 0, pretend = 0, frame = 0
 1633              		@ frame_needed = 0, uses_anonymous_args = 0
 1634              	.LVL172:
 1635 0000 10B5     		push	{r4, lr}
 1636              		.cfi_def_cfa_offset 8
 1637              		.cfi_offset 4, -8
 1638              		.cfi_offset 14, -4
 1639 0002 0400     		movs	r4, r0
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1640              		.loc 1 1069 0
 1641 0004 0C4B     		ldr	r3, .L131
 1642 0006 1B78     		ldrb	r3, [r3]
 1643 0008 8342     		cmp	r3, r0
 1644 000a 14D0     		beq	.L127
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1645              		.loc 1 1072 0
 1646 000c 012B     		cmp	r3, #1
 1647 000e 01D1     		bne	.L129
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1648              		.loc 1 1075 0
 1649 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableMode
 1650              	.LVL173:
 1651              	.L129:
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1652              		.loc 1 1105 0
 1653 0014 012C     		cmp	r4, #1
 1654 0016 05D1     		bne	.L130
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 1655              		.loc 1 1109 0
 1656 0018 FFF7FEFF 		bl	CapSense_SsCSDInitialize
 1657              	.LVL174:
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1658              		.loc 1 1110 0
 1659 001c 0122     		movs	r2, #1
 1660 001e 064B     		ldr	r3, .L131
 1661 0020 1A70     		strb	r2, [r3]
 1662 0022 08E0     		b	.L127
 1663              	.L130:
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1664              		.loc 1 1113 0
 1665 0024 022C     		cmp	r4, #2
 1666 0026 06D0     		beq	.L127
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1667              		.loc 1 1121 0
 1668 0028 042C     		cmp	r4, #4
 1669 002a 04D0     		beq	.L127
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 92


1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1670              		.loc 1 1129 0
 1671 002c 032C     		cmp	r4, #3
 1672 002e 02D0     		beq	.L127
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1673              		.loc 1 1138 0
 1674 0030 0022     		movs	r2, #0
 1675 0032 014B     		ldr	r3, .L131
 1676 0034 1A70     		strb	r2, [r3]
 1677              	.L127:
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1678              		.loc 1 1141 0
 1679              		@ sp needed
 1680 0036 10BD     		pop	{r4, pc}
 1681              	.L132:
 1682              		.align	2
 1683              	.L131:
 1684 0038 00000000 		.word	.LANCHOR0
 1685              		.cfi_endproc
 1686              	.LFE10:
 1687              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 1688              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1689              		.align	2
 1690              		.global	CapSense_SsInitialize
 1691              		.code	16
 1692              		.thumb_func
 1693              		.type	CapSense_SsInitialize, %function
 1694              	CapSense_SsInitialize:
 1695              	.LFB7:
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1696              		.loc 1 708 0
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 0
 1699              		@ frame_needed = 0, uses_anonymous_args = 0
 1700 0000 10B5     		push	{r4, lr}
 1701              		.cfi_def_cfa_offset 8
 1702              		.cfi_offset 4, -8
 1703              		.cfi_offset 14, -4
 1704              	.LVL175:
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 1705              		.loc 1 742 0
 1706 0002 FFF7FEFF 		bl	CapSense_SsTrimIdacs
 1707              	.LVL176:
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 1708              		.loc 1 747 0
 1709 0006 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 1710              	.LVL177:
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 1711              		.loc 1 752 0
 1712 000a 0020     		movs	r0, #0
 1713 000c FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 1714              	.LVL178:
 753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1715              		.loc 1 753 0
 1716 0010 0021     		movs	r1, #0
 1717 0012 7C23     		movs	r3, #124
 1718 0014 FF33     		adds	r3, r3, #255
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 93


 1719 0016 054A     		ldr	r2, .L134
 1720 0018 D154     		strb	r1, [r2, r3]
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 1721              		.loc 1 755 0
 1722 001a 0020     		movs	r0, #0
 1723 001c FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1724              	.LVL179:
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 1725              		.loc 1 758 0
 1726 0020 0120     		movs	r0, #1
 1727 0022 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1728              	.LVL180:
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1729              		.loc 1 769 0
 1730 0026 0020     		movs	r0, #0
 1731              		@ sp needed
 1732 0028 10BD     		pop	{r4, pc}
 1733              	.L135:
 1734 002a C046     		.align	2
 1735              	.L134:
 1736 002c 00000000 		.word	CapSense_dsRam
 1737              		.cfi_endproc
 1738              	.LFE7:
 1739              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 1740              		.section	.text.CapSense_DischargeExtCapacitors,"ax",%progbits
 1741              		.align	2
 1742              		.global	CapSense_DischargeExtCapacitors
 1743              		.code	16
 1744              		.thumb_func
 1745              		.type	CapSense_DischargeExtCapacitors, %function
 1746              	CapSense_DischargeExtCapacitors:
 1747              	.LFB27:
3022:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
 1748              		.loc 1 3022 0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 8
 1751              		@ frame_needed = 0, uses_anonymous_args = 0
 1752              	.LVL181:
 1753 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1754              		.cfi_def_cfa_offset 20
 1755              		.cfi_offset 4, -20
 1756              		.cfi_offset 5, -16
 1757              		.cfi_offset 6, -12
 1758              		.cfi_offset 7, -8
 1759              		.cfi_offset 14, -4
 1760 0002 5F46     		mov	r7, fp
 1761 0004 4E46     		mov	r6, r9
 1762 0006 4546     		mov	r5, r8
 1763 0008 E0B4     		push	{r5, r6, r7}
 1764              		.cfi_def_cfa_offset 32
 1765              		.cfi_offset 8, -32
 1766              		.cfi_offset 9, -28
 1767              		.cfi_offset 11, -24
 1768 000a 82B0     		sub	sp, sp, #8
 1769              		.cfi_def_cfa_offset 40
 1770 000c 0190     		str	r0, [sp, #4]
3025:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(CapSense_CMOD_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CMOD;
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 94


 1771              		.loc 1 3025 0
 1772 000e 1E4C     		ldr	r4, .L137
 1773 0010 2668     		ldr	r6, [r4]
 1774 0012 F023     		movs	r3, #240
 1775 0014 1B01     		lsls	r3, r3, #4
 1776 0016 3340     		ands	r3, r6
 1777 0018 9846     		mov	r8, r3
 1778              	.LVL182:
3026:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(CapSense_CMOD_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CMOD;
 1779              		.loc 1 3026 0
 1780 001a 1C4E     		ldr	r6, .L137+4
 1781 001c 3368     		ldr	r3, [r6]
 1782              	.LVL183:
 1783 001e 0422     		movs	r2, #4
 1784 0020 1A40     		ands	r2, r3
 1785 0022 9146     		mov	r9, r2
 1786              	.LVL184:
3027:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1787              		.loc 1 3027 0
 1788 0024 1A4D     		ldr	r5, .L137+8
 1789 0026 2B68     		ldr	r3, [r5]
 1790 0028 E027     		movs	r7, #224
 1791 002a 7F00     		lsls	r7, r7, #1
 1792 002c 3B40     		ands	r3, r7
 1793 002e 9B46     		mov	fp, r3
 1794              	.LVL185:
3052:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
 1795              		.loc 1 3052 0
 1796 0030 0022     		movs	r2, #0
 1797              	.LVL186:
 1798 0032 F021     		movs	r1, #240
 1799 0034 0901     		lsls	r1, r1, #4
 1800 0036 2000     		movs	r0, r4
 1801              	.LVL187:
 1802 0038 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1803              	.LVL188:
3054:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR, CapSense_EXT_CAP_PC_MASK_CMOD,
 1804              		.loc 1 3054 0
 1805 003c 0022     		movs	r2, #0
 1806 003e 0421     		movs	r1, #4
 1807 0040 3000     		movs	r0, r6
 1808 0042 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1809              	.LVL189:
3055:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CMOD);
 1810              		.loc 1 3055 0
 1811 0046 C022     		movs	r2, #192
 1812 0048 5200     		lsls	r2, r2, #1
 1813 004a 3900     		movs	r1, r7
 1814 004c 2800     		movs	r0, r5
 1815 004e FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1816              	.LVL190:
3086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1817              		.loc 1 3086 0
 1818 0052 6B46     		mov	r3, sp
 1819 0054 9888     		ldrh	r0, [r3, #4]
 1820 0056 FFF7FEFF 		bl	CyDelayUs
 1821              	.LVL191:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 95


3090:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CMOD, cmodPc);
 1822              		.loc 1 3090 0
 1823 005a 5A46     		mov	r2, fp
 1824 005c 3900     		movs	r1, r7
 1825 005e 2800     		movs	r0, r5
 1826 0060 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1827              	.LVL192:
3092:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CMOD, cmodDr);
 1828              		.loc 1 3092 0
 1829 0064 4A46     		mov	r2, r9
 1830 0066 0421     		movs	r1, #4
 1831 0068 3000     		movs	r0, r6
 1832 006a FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1833              	.LVL193:
3094:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CMOD, cmodHsiom);
 1834              		.loc 1 3094 0
 1835 006e 4246     		mov	r2, r8
 1836 0070 F021     		movs	r1, #240
 1837 0072 0901     		lsls	r1, r1, #4
 1838 0074 2000     		movs	r0, r4
 1839 0076 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1840              	.LVL194:
3126:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV1) */
 1841              		.loc 1 3126 0
 1842 007a 02B0     		add	sp, sp, #8
 1843              		@ sp needed
 1844              	.LVL195:
 1845              	.LVL196:
 1846              	.LVL197:
 1847 007c 1CBC     		pop	{r2, r3, r4}
 1848 007e 9046     		mov	r8, r2
 1849 0080 9946     		mov	r9, r3
 1850 0082 A346     		mov	fp, r4
 1851 0084 F0BD     		pop	{r4, r5, r6, r7, pc}
 1852              	.L138:
 1853 0086 C046     		.align	2
 1854              	.L137:
 1855 0088 00040240 		.word	1073873920
 1856 008c 00040440 		.word	1074004992
 1857 0090 08040440 		.word	1074005000
 1858              		.cfi_endproc
 1859              	.LFE27:
 1860              		.size	CapSense_DischargeExtCapacitors, .-CapSense_DischargeExtCapacitors
 1861              		.global	CapSense_idacGainTable
 1862              		.comm	CapSense_curSnsIOPtr,4,4
 1863              		.comm	CapSense_curRamSnsPtr,4,4
 1864              		.global	CapSense_requestScanAllWidget
 1865              		.global	CapSense_sensorIndex
 1866              		.global	CapSense_widgetIndex
 1867              		.global	CapSense_scanFreqIndex
 1868              		.global	CapSense_currentSenseMethod
 1869              		.section	.rodata
 1870              		.align	2
 1871              		.set	.LANCHOR1,. + 0
 1872              		.type	CapSense_idacGainTable, %object
 1873              		.size	CapSense_idacGainTable, 16
 1874              	CapSense_idacGainTable:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 96


 1875 0000 00000000 		.word	0
 1876 0004 804F1200 		.word	1200000
 1877 0008 00040000 		.word	1024
 1878 000c 009F2400 		.word	2400000
 1879              		.type	CapSense_scanFreqIndex, %object
 1880              		.size	CapSense_scanFreqIndex, 1
 1881              	CapSense_scanFreqIndex:
 1882 0010 00       		.space	1
 1883              		.bss
 1884              		.set	.LANCHOR0,. + 0
 1885              		.type	CapSense_currentSenseMethod, %object
 1886              		.size	CapSense_currentSenseMethod, 1
 1887              	CapSense_currentSenseMethod:
 1888 0000 00       		.space	1
 1889              		.type	CapSense_requestScanAllWidget, %object
 1890              		.size	CapSense_requestScanAllWidget, 1
 1891              	CapSense_requestScanAllWidget:
 1892 0001 00       		.space	1
 1893              		.type	CapSense_sensorIndex, %object
 1894              		.size	CapSense_sensorIndex, 1
 1895              	CapSense_sensorIndex:
 1896 0002 00       		.space	1
 1897              		.type	CapSense_widgetIndex, %object
 1898              		.size	CapSense_widgetIndex, 1
 1899              	CapSense_widgetIndex:
 1900 0003 00       		.space	1
 1901              		.text
 1902              	.Letext0:
 1903              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 1904              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 1905              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1906              		.file 5 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1907              		.file 6 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 1908              		.file 7 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1909              		.file 8 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 1910              		.file 9 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 1911              		.file 10 "Generated_Source\\PSoC4/CyLib.h"
 1912              		.file 11 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1913              		.section	.debug_info,"",%progbits
 1914              	.Ldebug_info0:
 1915 0000 12140000 		.4byte	0x1412
 1916 0004 0400     		.2byte	0x4
 1917 0006 00000000 		.4byte	.Ldebug_abbrev0
 1918 000a 04       		.byte	0x4
 1919 000b 01       		.uleb128 0x1
 1920 000c 74030000 		.4byte	.LASF226
 1921 0010 0C       		.byte	0xc
 1922 0011 560A0000 		.4byte	.LASF227
 1923 0015 EE010000 		.4byte	.LASF228
 1924 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1925 001d 00000000 		.4byte	0
 1926 0021 00000000 		.4byte	.Ldebug_line0
 1927 0025 02       		.uleb128 0x2
 1928 0026 01       		.byte	0x1
 1929 0027 06       		.byte	0x6
 1930 0028 F20C0000 		.4byte	.LASF0
 1931 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 97


 1932 002d 01       		.byte	0x1
 1933 002e 08       		.byte	0x8
 1934 002f A00B0000 		.4byte	.LASF1
 1935 0033 02       		.uleb128 0x2
 1936 0034 02       		.byte	0x2
 1937 0035 05       		.byte	0x5
 1938 0036 2C090000 		.4byte	.LASF2
 1939 003a 02       		.uleb128 0x2
 1940 003b 02       		.byte	0x2
 1941 003c 07       		.byte	0x7
 1942 003d 1A0D0000 		.4byte	.LASF3
 1943 0041 02       		.uleb128 0x2
 1944 0042 04       		.byte	0x4
 1945 0043 05       		.byte	0x5
 1946 0044 64090000 		.4byte	.LASF4
 1947 0048 03       		.uleb128 0x3
 1948 0049 C40B0000 		.4byte	.LASF9
 1949 004d 02       		.byte	0x2
 1950 004e 41       		.byte	0x41
 1951 004f 53000000 		.4byte	0x53
 1952 0053 02       		.uleb128 0x2
 1953 0054 04       		.byte	0x4
 1954 0055 07       		.byte	0x7
 1955 0056 E80A0000 		.4byte	.LASF5
 1956 005a 02       		.uleb128 0x2
 1957 005b 08       		.byte	0x8
 1958 005c 05       		.byte	0x5
 1959 005d 79060000 		.4byte	.LASF6
 1960 0061 02       		.uleb128 0x2
 1961 0062 08       		.byte	0x8
 1962 0063 07       		.byte	0x7
 1963 0064 C7020000 		.4byte	.LASF7
 1964 0068 04       		.uleb128 0x4
 1965 0069 04       		.byte	0x4
 1966 006a 05       		.byte	0x5
 1967 006b 696E7400 		.ascii	"int\000"
 1968 006f 02       		.uleb128 0x2
 1969 0070 04       		.byte	0x4
 1970 0071 07       		.byte	0x7
 1971 0072 AD000000 		.4byte	.LASF8
 1972 0076 03       		.uleb128 0x3
 1973 0077 37020000 		.4byte	.LASF10
 1974 007b 03       		.byte	0x3
 1975 007c 30       		.byte	0x30
 1976 007d 48000000 		.4byte	0x48
 1977 0081 05       		.uleb128 0x5
 1978 0082 900D0000 		.4byte	.LASF11
 1979 0086 04       		.byte	0x4
 1980 0087 F701     		.2byte	0x1f7
 1981 0089 2C000000 		.4byte	0x2c
 1982 008d 05       		.uleb128 0x5
 1983 008e 83050000 		.4byte	.LASF12
 1984 0092 04       		.byte	0x4
 1985 0093 F801     		.2byte	0x1f8
 1986 0095 3A000000 		.4byte	0x3a
 1987 0099 05       		.uleb128 0x5
 1988 009a BE070000 		.4byte	.LASF13
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 98


 1989 009e 04       		.byte	0x4
 1990 009f F901     		.2byte	0x1f9
 1991 00a1 53000000 		.4byte	0x53
 1992 00a5 02       		.uleb128 0x2
 1993 00a6 04       		.byte	0x4
 1994 00a7 04       		.byte	0x4
 1995 00a8 78020000 		.4byte	.LASF14
 1996 00ac 02       		.uleb128 0x2
 1997 00ad 08       		.byte	0x8
 1998 00ae 04       		.byte	0x4
 1999 00af 960D0000 		.4byte	.LASF15
 2000 00b3 02       		.uleb128 0x2
 2001 00b4 01       		.byte	0x1
 2002 00b5 08       		.byte	0x8
 2003 00b6 09050000 		.4byte	.LASF16
 2004 00ba 05       		.uleb128 0x5
 2005 00bb 970B0000 		.4byte	.LASF17
 2006 00bf 04       		.byte	0x4
 2007 00c0 9902     		.2byte	0x299
 2008 00c2 53000000 		.4byte	0x53
 2009 00c6 05       		.uleb128 0x5
 2010 00c7 23010000 		.4byte	.LASF18
 2011 00cb 04       		.byte	0x4
 2012 00cc A102     		.2byte	0x2a1
 2013 00ce D2000000 		.4byte	0xd2
 2014 00d2 06       		.uleb128 0x6
 2015 00d3 81000000 		.4byte	0x81
 2016 00d7 05       		.uleb128 0x5
 2017 00d8 93080000 		.4byte	.LASF19
 2018 00dc 04       		.byte	0x4
 2019 00dd A302     		.2byte	0x2a3
 2020 00df E3000000 		.4byte	0xe3
 2021 00e3 06       		.uleb128 0x6
 2022 00e4 99000000 		.4byte	0x99
 2023 00e8 05       		.uleb128 0x5
 2024 00e9 7B070000 		.4byte	.LASF20
 2025 00ed 04       		.byte	0x4
 2026 00ee B302     		.2byte	0x2b3
 2027 00f0 F4000000 		.4byte	0xf4
 2028 00f4 07       		.uleb128 0x7
 2029 00f5 04       		.byte	0x4
 2030 00f6 FA000000 		.4byte	0xfa
 2031 00fa 08       		.uleb128 0x8
 2032 00fb 05       		.uleb128 0x5
 2033 00fc 1C0C0000 		.4byte	.LASF21
 2034 0100 05       		.byte	0x5
 2035 0101 3D01     		.2byte	0x13d
 2036 0103 8D000000 		.4byte	0x8d
 2037 0107 05       		.uleb128 0x5
 2038 0108 F3050000 		.4byte	.LASF22
 2039 010c 05       		.byte	0x5
 2040 010d 4101     		.2byte	0x141
 2041 010f 81000000 		.4byte	0x81
 2042 0113 09       		.uleb128 0x9
 2043 0114 1C       		.byte	0x1c
 2044 0115 06       		.byte	0x6
 2045 0116 31       		.byte	0x31
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 99


 2046 0117 A0010000 		.4byte	0x1a0
 2047 011b 0A       		.uleb128 0xa
 2048 011c F10B0000 		.4byte	.LASF23
 2049 0120 06       		.byte	0x6
 2050 0121 36       		.byte	0x36
 2051 0122 99000000 		.4byte	0x99
 2052 0126 00       		.byte	0
 2053 0127 0A       		.uleb128 0xa
 2054 0128 48010000 		.4byte	.LASF24
 2055 012c 06       		.byte	0x6
 2056 012d 3B       		.byte	0x3b
 2057 012e 99000000 		.4byte	0x99
 2058 0132 04       		.byte	0x4
 2059 0133 0A       		.uleb128 0xa
 2060 0134 3C080000 		.4byte	.LASF25
 2061 0138 06       		.byte	0x6
 2062 0139 40       		.byte	0x40
 2063 013a A0010000 		.4byte	0x1a0
 2064 013e 08       		.byte	0x8
 2065 013f 0A       		.uleb128 0xa
 2066 0140 75040000 		.4byte	.LASF26
 2067 0144 06       		.byte	0x6
 2068 0145 45       		.byte	0x45
 2069 0146 A0010000 		.4byte	0x1a0
 2070 014a 0C       		.byte	0xc
 2071 014b 0A       		.uleb128 0xa
 2072 014c 83080000 		.4byte	.LASF27
 2073 0150 06       		.byte	0x6
 2074 0151 4A       		.byte	0x4a
 2075 0152 8D000000 		.4byte	0x8d
 2076 0156 10       		.byte	0x10
 2077 0157 0A       		.uleb128 0xa
 2078 0158 010B0000 		.4byte	.LASF28
 2079 015c 06       		.byte	0x6
 2080 015d 4F       		.byte	0x4f
 2081 015e 8D000000 		.4byte	0x8d
 2082 0162 12       		.byte	0x12
 2083 0163 0A       		.uleb128 0xa
 2084 0164 130A0000 		.4byte	.LASF29
 2085 0168 06       		.byte	0x6
 2086 0169 54       		.byte	0x54
 2087 016a 8D000000 		.4byte	0x8d
 2088 016e 14       		.byte	0x14
 2089 016f 0A       		.uleb128 0xa
 2090 0170 6C010000 		.4byte	.LASF30
 2091 0174 06       		.byte	0x6
 2092 0175 59       		.byte	0x59
 2093 0176 8D000000 		.4byte	0x8d
 2094 017a 16       		.byte	0x16
 2095 017b 0A       		.uleb128 0xa
 2096 017c 4D040000 		.4byte	.LASF31
 2097 0180 06       		.byte	0x6
 2098 0181 5E       		.byte	0x5e
 2099 0182 8D000000 		.4byte	0x8d
 2100 0186 18       		.byte	0x18
 2101 0187 0A       		.uleb128 0xa
 2102 0188 24050000 		.4byte	.LASF32
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 100


 2103 018c 06       		.byte	0x6
 2104 018d 63       		.byte	0x63
 2105 018e 81000000 		.4byte	0x81
 2106 0192 1A       		.byte	0x1a
 2107 0193 0A       		.uleb128 0xa
 2108 0194 AC080000 		.4byte	.LASF33
 2109 0198 06       		.byte	0x6
 2110 0199 68       		.byte	0x68
 2111 019a 81000000 		.4byte	0x81
 2112 019e 1B       		.byte	0x1b
 2113 019f 00       		.byte	0
 2114 01a0 07       		.uleb128 0x7
 2115 01a1 04       		.byte	0x4
 2116 01a2 8D000000 		.4byte	0x8d
 2117 01a6 03       		.uleb128 0x3
 2118 01a7 2D0D0000 		.4byte	.LASF34
 2119 01ab 06       		.byte	0x6
 2120 01ac 6A       		.byte	0x6a
 2121 01ad 13010000 		.4byte	0x113
 2122 01b1 09       		.uleb128 0x9
 2123 01b2 0C       		.byte	0xc
 2124 01b3 06       		.byte	0x6
 2125 01b4 75       		.byte	0x75
 2126 01b5 0E020000 		.4byte	0x20e
 2127 01b9 0A       		.uleb128 0xa
 2128 01ba AB0D0000 		.4byte	.LASF35
 2129 01be 06       		.byte	0x6
 2130 01bf 7A       		.byte	0x7a
 2131 01c0 8D000000 		.4byte	0x8d
 2132 01c4 00       		.byte	0
 2133 01c5 0A       		.uleb128 0xa
 2134 01c6 B20D0000 		.4byte	.LASF36
 2135 01ca 06       		.byte	0x6
 2136 01cb 7E       		.byte	0x7e
 2137 01cc 8D000000 		.4byte	0x8d
 2138 01d0 02       		.byte	0x2
 2139 01d1 0A       		.uleb128 0xa
 2140 01d2 B90D0000 		.4byte	.LASF37
 2141 01d6 06       		.byte	0x6
 2142 01d7 82       		.byte	0x82
 2143 01d8 8D000000 		.4byte	0x8d
 2144 01dc 04       		.byte	0x4
 2145 01dd 0A       		.uleb128 0xa
 2146 01de C00D0000 		.4byte	.LASF38
 2147 01e2 06       		.byte	0x6
 2148 01e3 86       		.byte	0x86
 2149 01e4 8D000000 		.4byte	0x8d
 2150 01e8 06       		.byte	0x6
 2151 01e9 0A       		.uleb128 0xa
 2152 01ea C70D0000 		.4byte	.LASF39
 2153 01ee 06       		.byte	0x6
 2154 01ef 8A       		.byte	0x8a
 2155 01f0 8D000000 		.4byte	0x8d
 2156 01f4 08       		.byte	0x8
 2157 01f5 0A       		.uleb128 0xa
 2158 01f6 CE0D0000 		.4byte	.LASF40
 2159 01fa 06       		.byte	0x6
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 101


 2160 01fb 8E       		.byte	0x8e
 2161 01fc 81000000 		.4byte	0x81
 2162 0200 0A       		.byte	0xa
 2163 0201 0A       		.uleb128 0xa
 2164 0202 D50D0000 		.4byte	.LASF41
 2165 0206 06       		.byte	0x6
 2166 0207 92       		.byte	0x92
 2167 0208 81000000 		.4byte	0x81
 2168 020c 0B       		.byte	0xb
 2169 020d 00       		.byte	0
 2170 020e 03       		.uleb128 0x3
 2171 020f CD040000 		.4byte	.LASF42
 2172 0213 06       		.byte	0x6
 2173 0214 93       		.byte	0x93
 2174 0215 B1010000 		.4byte	0x1b1
 2175 0219 0B       		.uleb128 0xb
 2176 021a 01       		.byte	0x1
 2177 021b 2C000000 		.4byte	0x2c
 2178 021f 07       		.byte	0x7
 2179 0220 70       		.byte	0x70
 2180 0221 44020000 		.4byte	0x244
 2181 0225 0C       		.uleb128 0xc
 2182 0226 98000000 		.4byte	.LASF43
 2183 022a 00       		.byte	0
 2184 022b 0C       		.uleb128 0xc
 2185 022c 970A0000 		.4byte	.LASF44
 2186 0230 01       		.byte	0x1
 2187 0231 0C       		.uleb128 0xc
 2188 0232 86090000 		.4byte	.LASF45
 2189 0236 02       		.byte	0x2
 2190 0237 0C       		.uleb128 0xc
 2191 0238 520C0000 		.4byte	.LASF46
 2192 023c 03       		.byte	0x3
 2193 023d 0C       		.uleb128 0xc
 2194 023e 5B080000 		.4byte	.LASF47
 2195 0242 04       		.byte	0x4
 2196 0243 00       		.byte	0
 2197 0244 03       		.uleb128 0x3
 2198 0245 2C060000 		.4byte	.LASF48
 2199 0249 07       		.byte	0x7
 2200 024a 76       		.byte	0x76
 2201 024b 19020000 		.4byte	0x219
 2202 024f 09       		.uleb128 0x9
 2203 0250 14       		.byte	0x14
 2204 0251 07       		.byte	0x7
 2205 0252 AD       		.byte	0xad
 2206 0253 F4020000 		.4byte	0x2f4
 2207 0257 0A       		.uleb128 0xa
 2208 0258 B4050000 		.4byte	.LASF49
 2209 025c 07       		.byte	0x7
 2210 025d B2       		.byte	0xb2
 2211 025e 8D000000 		.4byte	0x8d
 2212 0262 00       		.byte	0
 2213 0263 0A       		.uleb128 0xa
 2214 0264 480B0000 		.4byte	.LASF50
 2215 0268 07       		.byte	0x7
 2216 0269 B7       		.byte	0xb7
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 102


 2217 026a FB000000 		.4byte	0xfb
 2218 026e 02       		.byte	0x2
 2219 026f 0A       		.uleb128 0xa
 2220 0270 01050000 		.4byte	.LASF51
 2221 0274 07       		.byte	0x7
 2222 0275 BC       		.byte	0xbc
 2223 0276 81000000 		.4byte	0x81
 2224 027a 04       		.byte	0x4
 2225 027b 0A       		.uleb128 0xa
 2226 027c 67070000 		.4byte	.LASF52
 2227 0280 07       		.byte	0x7
 2228 0281 C1       		.byte	0xc1
 2229 0282 81000000 		.4byte	0x81
 2230 0286 05       		.byte	0x5
 2231 0287 0A       		.uleb128 0xa
 2232 0288 7C040000 		.4byte	.LASF53
 2233 028c 07       		.byte	0x7
 2234 028d C7       		.byte	0xc7
 2235 028e 81000000 		.4byte	0x81
 2236 0292 06       		.byte	0x6
 2237 0293 0A       		.uleb128 0xa
 2238 0294 A8060000 		.4byte	.LASF54
 2239 0298 07       		.byte	0x7
 2240 0299 CD       		.byte	0xcd
 2241 029a 81000000 		.4byte	0x81
 2242 029e 07       		.byte	0x7
 2243 029f 0A       		.uleb128 0xa
 2244 02a0 B6040000 		.4byte	.LASF55
 2245 02a4 07       		.byte	0x7
 2246 02a5 D4       		.byte	0xd4
 2247 02a6 07010000 		.4byte	0x107
 2248 02aa 08       		.byte	0x8
 2249 02ab 0A       		.uleb128 0xa
 2250 02ac 060B0000 		.4byte	.LASF56
 2251 02b0 07       		.byte	0x7
 2252 02b1 DB       		.byte	0xdb
 2253 02b2 F4020000 		.4byte	0x2f4
 2254 02b6 09       		.byte	0x9
 2255 02b7 0A       		.uleb128 0xa
 2256 02b8 60020000 		.4byte	.LASF57
 2257 02bc 07       		.byte	0x7
 2258 02bd E0       		.byte	0xe0
 2259 02be 81000000 		.4byte	0x81
 2260 02c2 0A       		.byte	0xa
 2261 02c3 0A       		.uleb128 0xa
 2262 02c4 A10C0000 		.4byte	.LASF58
 2263 02c8 07       		.byte	0x7
 2264 02c9 E8       		.byte	0xe8
 2265 02ca 8D000000 		.4byte	0x8d
 2266 02ce 0C       		.byte	0xc
 2267 02cf 0A       		.uleb128 0xa
 2268 02d0 E9080000 		.4byte	.LASF59
 2269 02d4 07       		.byte	0x7
 2270 02d5 ED       		.byte	0xed
 2271 02d6 81000000 		.4byte	0x81
 2272 02da 0E       		.byte	0xe
 2273 02db 0A       		.uleb128 0xa
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 103


 2274 02dc 130A0000 		.4byte	.LASF29
 2275 02e0 07       		.byte	0x7
 2276 02e1 F3       		.byte	0xf3
 2277 02e2 8D000000 		.4byte	0x8d
 2278 02e6 10       		.byte	0x10
 2279 02e7 0A       		.uleb128 0xa
 2280 02e8 75040000 		.4byte	.LASF26
 2281 02ec 07       		.byte	0x7
 2282 02ed F8       		.byte	0xf8
 2283 02ee 8D000000 		.4byte	0x8d
 2284 02f2 12       		.byte	0x12
 2285 02f3 00       		.byte	0
 2286 02f4 0D       		.uleb128 0xd
 2287 02f5 81000000 		.4byte	0x81
 2288 02f9 04030000 		.4byte	0x304
 2289 02fd 0E       		.uleb128 0xe
 2290 02fe 04030000 		.4byte	0x304
 2291 0302 00       		.byte	0
 2292 0303 00       		.byte	0
 2293 0304 02       		.uleb128 0x2
 2294 0305 04       		.byte	0x4
 2295 0306 07       		.byte	0x7
 2296 0307 D70A0000 		.4byte	.LASF60
 2297 030b 03       		.uleb128 0x3
 2298 030c 99070000 		.4byte	.LASF61
 2299 0310 07       		.byte	0x7
 2300 0311 F9       		.byte	0xf9
 2301 0312 4F020000 		.4byte	0x24f
 2302 0316 09       		.uleb128 0x9
 2303 0317 14       		.byte	0x14
 2304 0318 07       		.byte	0x7
 2305 0319 FE       		.byte	0xfe
 2306 031a C8030000 		.4byte	0x3c8
 2307 031e 0F       		.uleb128 0xf
 2308 031f B4050000 		.4byte	.LASF49
 2309 0323 07       		.byte	0x7
 2310 0324 0301     		.2byte	0x103
 2311 0326 8D000000 		.4byte	0x8d
 2312 032a 00       		.byte	0
 2313 032b 0F       		.uleb128 0xf
 2314 032c 480B0000 		.4byte	.LASF50
 2315 0330 07       		.byte	0x7
 2316 0331 0801     		.2byte	0x108
 2317 0333 FB000000 		.4byte	0xfb
 2318 0337 02       		.byte	0x2
 2319 0338 0F       		.uleb128 0xf
 2320 0339 01050000 		.4byte	.LASF51
 2321 033d 07       		.byte	0x7
 2322 033e 0D01     		.2byte	0x10d
 2323 0340 81000000 		.4byte	0x81
 2324 0344 04       		.byte	0x4
 2325 0345 0F       		.uleb128 0xf
 2326 0346 67070000 		.4byte	.LASF52
 2327 034a 07       		.byte	0x7
 2328 034b 1201     		.2byte	0x112
 2329 034d 81000000 		.4byte	0x81
 2330 0351 05       		.byte	0x5
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 104


 2331 0352 0F       		.uleb128 0xf
 2332 0353 7C040000 		.4byte	.LASF53
 2333 0357 07       		.byte	0x7
 2334 0358 1801     		.2byte	0x118
 2335 035a 81000000 		.4byte	0x81
 2336 035e 06       		.byte	0x6
 2337 035f 0F       		.uleb128 0xf
 2338 0360 A8060000 		.4byte	.LASF54
 2339 0364 07       		.byte	0x7
 2340 0365 1E01     		.2byte	0x11e
 2341 0367 81000000 		.4byte	0x81
 2342 036b 07       		.byte	0x7
 2343 036c 0F       		.uleb128 0xf
 2344 036d B6040000 		.4byte	.LASF55
 2345 0371 07       		.byte	0x7
 2346 0372 2501     		.2byte	0x125
 2347 0374 07010000 		.4byte	0x107
 2348 0378 08       		.byte	0x8
 2349 0379 0F       		.uleb128 0xf
 2350 037a 060B0000 		.4byte	.LASF56
 2351 037e 07       		.byte	0x7
 2352 037f 2C01     		.2byte	0x12c
 2353 0381 F4020000 		.4byte	0x2f4
 2354 0385 09       		.byte	0x9
 2355 0386 0F       		.uleb128 0xf
 2356 0387 60020000 		.4byte	.LASF57
 2357 038b 07       		.byte	0x7
 2358 038c 3101     		.2byte	0x131
 2359 038e 81000000 		.4byte	0x81
 2360 0392 0A       		.byte	0xa
 2361 0393 0F       		.uleb128 0xf
 2362 0394 A10C0000 		.4byte	.LASF58
 2363 0398 07       		.byte	0x7
 2364 0399 3901     		.2byte	0x139
 2365 039b 8D000000 		.4byte	0x8d
 2366 039f 0C       		.byte	0xc
 2367 03a0 0F       		.uleb128 0xf
 2368 03a1 E9080000 		.4byte	.LASF59
 2369 03a5 07       		.byte	0x7
 2370 03a6 3E01     		.2byte	0x13e
 2371 03a8 81000000 		.4byte	0x81
 2372 03ac 0E       		.byte	0xe
 2373 03ad 0F       		.uleb128 0xf
 2374 03ae 130A0000 		.4byte	.LASF29
 2375 03b2 07       		.byte	0x7
 2376 03b3 4401     		.2byte	0x144
 2377 03b5 8D000000 		.4byte	0x8d
 2378 03b9 10       		.byte	0x10
 2379 03ba 0F       		.uleb128 0xf
 2380 03bb 75040000 		.4byte	.LASF26
 2381 03bf 07       		.byte	0x7
 2382 03c0 4901     		.2byte	0x149
 2383 03c2 8D000000 		.4byte	0x8d
 2384 03c6 12       		.byte	0x12
 2385 03c7 00       		.byte	0
 2386 03c8 05       		.uleb128 0x5
 2387 03c9 790B0000 		.4byte	.LASF62
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 105


 2388 03cd 07       		.byte	0x7
 2389 03ce 4A01     		.2byte	0x14a
 2390 03d0 16030000 		.4byte	0x316
 2391 03d4 10       		.uleb128 0x10
 2392 03d5 14       		.byte	0x14
 2393 03d6 07       		.byte	0x7
 2394 03d7 5001     		.2byte	0x150
 2395 03d9 EB030000 		.4byte	0x3eb
 2396 03dd 0F       		.uleb128 0xf
 2397 03de 6D030000 		.4byte	.LASF63
 2398 03e2 07       		.byte	0x7
 2399 03e3 5501     		.2byte	0x155
 2400 03e5 C8030000 		.4byte	0x3c8
 2401 03e9 00       		.byte	0
 2402 03ea 00       		.byte	0
 2403 03eb 05       		.uleb128 0x5
 2404 03ec D2010000 		.4byte	.LASF64
 2405 03f0 07       		.byte	0x7
 2406 03f1 5601     		.2byte	0x156
 2407 03f3 D4030000 		.4byte	0x3d4
 2408 03f7 10       		.uleb128 0x10
 2409 03f8 0A       		.byte	0xa
 2410 03f9 07       		.byte	0x7
 2411 03fa 5C01     		.2byte	0x15c
 2412 03fc 4F040000 		.4byte	0x44f
 2413 0400 11       		.uleb128 0x11
 2414 0401 72617700 		.ascii	"raw\000"
 2415 0405 07       		.byte	0x7
 2416 0406 6101     		.2byte	0x161
 2417 0408 4F040000 		.4byte	0x44f
 2418 040c 00       		.byte	0
 2419 040d 0F       		.uleb128 0xf
 2420 040e 150D0000 		.4byte	.LASF65
 2421 0412 07       		.byte	0x7
 2422 0413 6601     		.2byte	0x166
 2423 0415 4F040000 		.4byte	0x44f
 2424 0419 02       		.byte	0x2
 2425 041a 0F       		.uleb128 0xf
 2426 041b 510B0000 		.4byte	.LASF66
 2427 041f 07       		.byte	0x7
 2428 0420 6C01     		.2byte	0x16c
 2429 0422 F4020000 		.4byte	0x2f4
 2430 0426 04       		.byte	0x4
 2431 0427 0F       		.uleb128 0xf
 2432 0428 78090000 		.4byte	.LASF67
 2433 042c 07       		.byte	0x7
 2434 042d 7101     		.2byte	0x171
 2435 042f FB000000 		.4byte	0xfb
 2436 0433 06       		.byte	0x6
 2437 0434 0F       		.uleb128 0xf
 2438 0435 9D0D0000 		.4byte	.LASF68
 2439 0439 07       		.byte	0x7
 2440 043a 7601     		.2byte	0x176
 2441 043c 5F040000 		.4byte	0x45f
 2442 0440 08       		.byte	0x8
 2443 0441 0F       		.uleb128 0xf
 2444 0442 6A060000 		.4byte	.LASF69
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 106


 2445 0446 07       		.byte	0x7
 2446 0447 7B01     		.2byte	0x17b
 2447 0449 F4020000 		.4byte	0x2f4
 2448 044d 09       		.byte	0x9
 2449 044e 00       		.byte	0
 2450 044f 0D       		.uleb128 0xd
 2451 0450 8D000000 		.4byte	0x8d
 2452 0454 5F040000 		.4byte	0x45f
 2453 0458 0E       		.uleb128 0xe
 2454 0459 04030000 		.4byte	0x304
 2455 045d 00       		.byte	0
 2456 045e 00       		.byte	0
 2457 045f 0D       		.uleb128 0xd
 2458 0460 07010000 		.4byte	0x107
 2459 0464 6F040000 		.4byte	0x46f
 2460 0468 0E       		.uleb128 0xe
 2461 0469 04030000 		.4byte	0x304
 2462 046d 00       		.byte	0
 2463 046e 00       		.byte	0
 2464 046f 05       		.uleb128 0x5
 2465 0470 1B040000 		.4byte	.LASF70
 2466 0474 07       		.byte	0x7
 2467 0475 7C01     		.2byte	0x17c
 2468 0477 F7030000 		.4byte	0x3f7
 2469 047b 12       		.uleb128 0x12
 2470 047c 4001     		.2byte	0x140
 2471 047e 07       		.byte	0x7
 2472 047f 8201     		.2byte	0x182
 2473 0481 93040000 		.4byte	0x493
 2474 0485 0F       		.uleb128 0xf
 2475 0486 6D030000 		.4byte	.LASF63
 2476 048a 07       		.byte	0x7
 2477 048b 8701     		.2byte	0x187
 2478 048d 93040000 		.4byte	0x493
 2479 0491 00       		.byte	0
 2480 0492 00       		.byte	0
 2481 0493 0D       		.uleb128 0xd
 2482 0494 6F040000 		.4byte	0x46f
 2483 0498 A3040000 		.4byte	0x4a3
 2484 049c 0E       		.uleb128 0xe
 2485 049d 04030000 		.4byte	0x304
 2486 04a1 1F       		.byte	0x1f
 2487 04a2 00       		.byte	0
 2488 04a3 05       		.uleb128 0x5
 2489 04a4 8C0E0000 		.4byte	.LASF71
 2490 04a8 07       		.byte	0x7
 2491 04a9 8801     		.2byte	0x188
 2492 04ab 7B040000 		.4byte	0x47b
 2493 04af 12       		.uleb128 0x12
 2494 04b0 7C01     		.2byte	0x17c
 2495 04b2 07       		.byte	0x7
 2496 04b3 8E01     		.2byte	0x18e
 2497 04b5 B7050000 		.4byte	0x5b7
 2498 04b9 0F       		.uleb128 0xf
 2499 04ba B5080000 		.4byte	.LASF72
 2500 04be 07       		.byte	0x7
 2501 04bf 9501     		.2byte	0x195
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 107


 2502 04c1 8D000000 		.4byte	0x8d
 2503 04c5 00       		.byte	0
 2504 04c6 0F       		.uleb128 0xf
 2505 04c7 F80D0000 		.4byte	.LASF73
 2506 04cb 07       		.byte	0x7
 2507 04cc 9A01     		.2byte	0x19a
 2508 04ce 8D000000 		.4byte	0x8d
 2509 04d2 02       		.byte	0x2
 2510 04d3 0F       		.uleb128 0xf
 2511 04d4 D2000000 		.4byte	.LASF74
 2512 04d8 07       		.byte	0x7
 2513 04d9 9F01     		.2byte	0x19f
 2514 04db 8D000000 		.4byte	0x8d
 2515 04df 04       		.byte	0x4
 2516 04e0 0F       		.uleb128 0xf
 2517 04e1 7D090000 		.4byte	.LASF75
 2518 04e5 07       		.byte	0x7
 2519 04e6 A501     		.2byte	0x1a5
 2520 04e8 8D000000 		.4byte	0x8d
 2521 04ec 06       		.byte	0x6
 2522 04ed 0F       		.uleb128 0xf
 2523 04ee BA000000 		.4byte	.LASF76
 2524 04f2 07       		.byte	0x7
 2525 04f3 AA01     		.2byte	0x1aa
 2526 04f5 8D000000 		.4byte	0x8d
 2527 04f9 08       		.byte	0x8
 2528 04fa 0F       		.uleb128 0xf
 2529 04fb BF050000 		.4byte	.LASF77
 2530 04ff 07       		.byte	0x7
 2531 0500 AF01     		.2byte	0x1af
 2532 0502 E3000000 		.4byte	0xe3
 2533 0506 0C       		.byte	0xc
 2534 0507 0F       		.uleb128 0xf
 2535 0508 6D090000 		.4byte	.LASF78
 2536 050c 07       		.byte	0x7
 2537 050d B501     		.2byte	0x1b5
 2538 050f B7050000 		.4byte	0x5b7
 2539 0513 10       		.byte	0x10
 2540 0514 0F       		.uleb128 0xf
 2541 0515 310A0000 		.4byte	.LASF79
 2542 0519 07       		.byte	0x7
 2543 051a BC01     		.2byte	0x1bc
 2544 051c B7050000 		.4byte	0x5b7
 2545 0520 14       		.byte	0x14
 2546 0521 0F       		.uleb128 0xf
 2547 0522 DF080000 		.4byte	.LASF80
 2548 0526 07       		.byte	0x7
 2549 0527 CC01     		.2byte	0x1cc
 2550 0529 B7050000 		.4byte	0x5b7
 2551 052d 18       		.byte	0x18
 2552 052e 0F       		.uleb128 0xf
 2553 052f 70070000 		.4byte	.LASF81
 2554 0533 07       		.byte	0x7
 2555 0534 D201     		.2byte	0x1d2
 2556 0536 8D000000 		.4byte	0x8d
 2557 053a 1C       		.byte	0x1c
 2558 053b 0F       		.uleb128 0xf
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 108


 2559 053c 11040000 		.4byte	.LASF82
 2560 0540 07       		.byte	0x7
 2561 0541 D701     		.2byte	0x1d7
 2562 0543 81000000 		.4byte	0x81
 2563 0547 1E       		.byte	0x1e
 2564 0548 0F       		.uleb128 0xf
 2565 0549 CB060000 		.4byte	.LASF83
 2566 054d 07       		.byte	0x7
 2567 054e DC01     		.2byte	0x1dc
 2568 0550 EB030000 		.4byte	0x3eb
 2569 0554 20       		.byte	0x20
 2570 0555 0F       		.uleb128 0xf
 2571 0556 BF020000 		.4byte	.LASF84
 2572 055a 07       		.byte	0x7
 2573 055b E101     		.2byte	0x1e1
 2574 055d A3040000 		.4byte	0x4a3
 2575 0561 34       		.byte	0x34
 2576 0562 13       		.uleb128 0x13
 2577 0563 88000000 		.4byte	.LASF85
 2578 0567 07       		.byte	0x7
 2579 0568 E601     		.2byte	0x1e6
 2580 056a 81000000 		.4byte	0x81
 2581 056e 7401     		.2byte	0x174
 2582 0570 13       		.uleb128 0x13
 2583 0571 0C030000 		.4byte	.LASF86
 2584 0575 07       		.byte	0x7
 2585 0576 EB01     		.2byte	0x1eb
 2586 0578 81000000 		.4byte	0x81
 2587 057c 7501     		.2byte	0x175
 2588 057e 13       		.uleb128 0x13
 2589 057f 99080000 		.4byte	.LASF87
 2590 0583 07       		.byte	0x7
 2591 0584 F001     		.2byte	0x1f0
 2592 0586 8D000000 		.4byte	0x8d
 2593 058a 7601     		.2byte	0x176
 2594 058c 13       		.uleb128 0x13
 2595 058d 43070000 		.4byte	.LASF88
 2596 0591 07       		.byte	0x7
 2597 0592 F501     		.2byte	0x1f5
 2598 0594 4F040000 		.4byte	0x44f
 2599 0598 7801     		.2byte	0x178
 2600 059a 13       		.uleb128 0x13
 2601 059b DA000000 		.4byte	.LASF89
 2602 059f 07       		.byte	0x7
 2603 05a0 FA01     		.2byte	0x1fa
 2604 05a2 81000000 		.4byte	0x81
 2605 05a6 7A01     		.2byte	0x17a
 2606 05a8 13       		.uleb128 0x13
 2607 05a9 010C0000 		.4byte	.LASF90
 2608 05ad 07       		.byte	0x7
 2609 05ae FF01     		.2byte	0x1ff
 2610 05b0 81000000 		.4byte	0x81
 2611 05b4 7B01     		.2byte	0x17b
 2612 05b6 00       		.byte	0
 2613 05b7 0D       		.uleb128 0xd
 2614 05b8 99000000 		.4byte	0x99
 2615 05bc C7050000 		.4byte	0x5c7
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 109


 2616 05c0 0E       		.uleb128 0xe
 2617 05c1 04030000 		.4byte	0x304
 2618 05c5 00       		.byte	0
 2619 05c6 00       		.byte	0
 2620 05c7 05       		.uleb128 0x5
 2621 05c8 36090000 		.4byte	.LASF91
 2622 05cc 07       		.byte	0x7
 2623 05cd 0002     		.2byte	0x200
 2624 05cf AF040000 		.4byte	0x4af
 2625 05d3 10       		.uleb128 0x10
 2626 05d4 1C       		.byte	0x1c
 2627 05d5 07       		.byte	0x7
 2628 05d6 0602     		.2byte	0x206
 2629 05d8 52060000 		.4byte	0x652
 2630 05dc 0F       		.uleb128 0xf
 2631 05dd B5070000 		.4byte	.LASF92
 2632 05e1 07       		.byte	0x7
 2633 05e2 0B02     		.2byte	0x20b
 2634 05e4 52060000 		.4byte	0x652
 2635 05e8 00       		.byte	0
 2636 05e9 0F       		.uleb128 0xf
 2637 05ea 73060000 		.4byte	.LASF93
 2638 05ee 07       		.byte	0x7
 2639 05ef 1002     		.2byte	0x210
 2640 05f1 52060000 		.4byte	0x652
 2641 05f5 04       		.byte	0x4
 2642 05f6 0F       		.uleb128 0xf
 2643 05f7 57040000 		.4byte	.LASF94
 2644 05fb 07       		.byte	0x7
 2645 05fc 1502     		.2byte	0x215
 2646 05fe 52060000 		.4byte	0x652
 2647 0602 08       		.byte	0x8
 2648 0603 0F       		.uleb128 0xf
 2649 0604 A2090000 		.4byte	.LASF95
 2650 0608 07       		.byte	0x7
 2651 0609 1A02     		.2byte	0x21a
 2652 060b 52060000 		.4byte	0x652
 2653 060f 0C       		.byte	0xc
 2654 0610 0F       		.uleb128 0xf
 2655 0611 970C0000 		.4byte	.LASF96
 2656 0615 07       		.byte	0x7
 2657 0616 1F02     		.2byte	0x21f
 2658 0618 99000000 		.4byte	0x99
 2659 061c 10       		.byte	0x10
 2660 061d 0F       		.uleb128 0xf
 2661 061e F4070000 		.4byte	.LASF97
 2662 0622 07       		.byte	0x7
 2663 0623 2402     		.2byte	0x224
 2664 0625 99000000 		.4byte	0x99
 2665 0629 14       		.byte	0x14
 2666 062a 0F       		.uleb128 0xf
 2667 062b 78050000 		.4byte	.LASF98
 2668 062f 07       		.byte	0x7
 2669 0630 2902     		.2byte	0x229
 2670 0632 81000000 		.4byte	0x81
 2671 0636 18       		.byte	0x18
 2672 0637 0F       		.uleb128 0xf
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 110


 2673 0638 E00A0000 		.4byte	.LASF99
 2674 063c 07       		.byte	0x7
 2675 063d 2E02     		.2byte	0x22e
 2676 063f 81000000 		.4byte	0x81
 2677 0643 19       		.byte	0x19
 2678 0644 0F       		.uleb128 0xf
 2679 0645 7E020000 		.4byte	.LASF100
 2680 0649 07       		.byte	0x7
 2681 064a 3302     		.2byte	0x233
 2682 064c 81000000 		.4byte	0x81
 2683 0650 1A       		.byte	0x1a
 2684 0651 00       		.byte	0
 2685 0652 07       		.uleb128 0x7
 2686 0653 04       		.byte	0x4
 2687 0654 D7000000 		.4byte	0xd7
 2688 0658 05       		.uleb128 0x5
 2689 0659 F3020000 		.4byte	.LASF101
 2690 065d 07       		.byte	0x7
 2691 065e 3402     		.2byte	0x234
 2692 0660 D3050000 		.4byte	0x5d3
 2693 0664 10       		.uleb128 0x10
 2694 0665 20       		.byte	0x20
 2695 0666 07       		.byte	0x7
 2696 0667 6702     		.2byte	0x267
 2697 0669 F0060000 		.4byte	0x6f0
 2698 066d 0F       		.uleb128 0xf
 2699 066e 7C0D0000 		.4byte	.LASF102
 2700 0672 07       		.byte	0x7
 2701 0673 7002     		.2byte	0x270
 2702 0675 F0060000 		.4byte	0x6f0
 2703 0679 00       		.byte	0
 2704 067a 0F       		.uleb128 0xf
 2705 067b 100C0000 		.4byte	.LASF103
 2706 067f 07       		.byte	0x7
 2707 0680 7702     		.2byte	0x277
 2708 0682 F7060000 		.4byte	0x6f7
 2709 0686 04       		.byte	0x4
 2710 0687 0F       		.uleb128 0xf
 2711 0688 BE080000 		.4byte	.LASF104
 2712 068c 07       		.byte	0x7
 2713 068d 7D02     		.2byte	0x27d
 2714 068f F9060000 		.4byte	0x6f9
 2715 0693 08       		.byte	0x8
 2716 0694 0F       		.uleb128 0xf
 2717 0695 C5070000 		.4byte	.LASF105
 2718 0699 07       		.byte	0x7
 2719 069a 8302     		.2byte	0x283
 2720 069c F7060000 		.4byte	0x6f7
 2721 06a0 0C       		.byte	0xc
 2722 06a1 0F       		.uleb128 0xf
 2723 06a2 230B0000 		.4byte	.LASF106
 2724 06a6 07       		.byte	0x7
 2725 06a7 8A02     		.2byte	0x28a
 2726 06a9 FF060000 		.4byte	0x6ff
 2727 06ad 10       		.byte	0x10
 2728 06ae 0F       		.uleb128 0xf
 2729 06af E40B0000 		.4byte	.LASF107
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 111


 2730 06b3 07       		.byte	0x7
 2731 06b4 8F02     		.2byte	0x28f
 2732 06b6 99000000 		.4byte	0x99
 2733 06ba 14       		.byte	0x14
 2734 06bb 0F       		.uleb128 0xf
 2735 06bc C1040000 		.4byte	.LASF108
 2736 06c0 07       		.byte	0x7
 2737 06c1 9602     		.2byte	0x296
 2738 06c3 8D000000 		.4byte	0x8d
 2739 06c7 18       		.byte	0x18
 2740 06c8 0F       		.uleb128 0xf
 2741 06c9 2B030000 		.4byte	.LASF109
 2742 06cd 07       		.byte	0x7
 2743 06ce 9D02     		.2byte	0x29d
 2744 06d0 81000000 		.4byte	0x81
 2745 06d4 1A       		.byte	0x1a
 2746 06d5 0F       		.uleb128 0xf
 2747 06d6 87060000 		.4byte	.LASF110
 2748 06da 07       		.byte	0x7
 2749 06db A702     		.2byte	0x2a7
 2750 06dd 81000000 		.4byte	0x81
 2751 06e1 1B       		.byte	0x1b
 2752 06e2 0F       		.uleb128 0xf
 2753 06e3 1C030000 		.4byte	.LASF111
 2754 06e7 07       		.byte	0x7
 2755 06e8 AF02     		.2byte	0x2af
 2756 06ea 05070000 		.4byte	0x705
 2757 06ee 1C       		.byte	0x1c
 2758 06ef 00       		.byte	0
 2759 06f0 07       		.uleb128 0x7
 2760 06f1 04       		.byte	0x4
 2761 06f2 F6060000 		.4byte	0x6f6
 2762 06f6 14       		.uleb128 0x14
 2763 06f7 15       		.uleb128 0x15
 2764 06f8 04       		.byte	0x4
 2765 06f9 07       		.uleb128 0x7
 2766 06fa 04       		.byte	0x4
 2767 06fb 6F040000 		.4byte	0x46f
 2768 06ff 07       		.uleb128 0x7
 2769 0700 04       		.byte	0x4
 2770 0701 81000000 		.4byte	0x81
 2771 0705 07       		.uleb128 0x7
 2772 0706 04       		.byte	0x4
 2773 0707 0E020000 		.4byte	0x20e
 2774 070b 05       		.uleb128 0x5
 2775 070c 95040000 		.4byte	.LASF112
 2776 0710 07       		.byte	0x7
 2777 0711 B002     		.2byte	0x2b0
 2778 0713 64060000 		.4byte	0x664
 2779 0717 10       		.uleb128 0x10
 2780 0718 20       		.byte	0x20
 2781 0719 07       		.byte	0x7
 2782 071a B602     		.2byte	0x2b6
 2783 071c 2E070000 		.4byte	0x72e
 2784 0720 0F       		.uleb128 0xf
 2785 0721 A90E0000 		.4byte	.LASF113
 2786 0725 07       		.byte	0x7
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 112


 2787 0726 BB02     		.2byte	0x2bb
 2788 0728 2E070000 		.4byte	0x72e
 2789 072c 00       		.byte	0
 2790 072d 00       		.byte	0
 2791 072e 0D       		.uleb128 0xd
 2792 072f 0B070000 		.4byte	0x70b
 2793 0733 3E070000 		.4byte	0x73e
 2794 0737 0E       		.uleb128 0xe
 2795 0738 04030000 		.4byte	0x304
 2796 073c 00       		.byte	0
 2797 073d 00       		.byte	0
 2798 073e 05       		.uleb128 0x5
 2799 073f E8060000 		.4byte	.LASF114
 2800 0743 07       		.byte	0x7
 2801 0744 BC02     		.2byte	0x2bc
 2802 0746 17070000 		.4byte	0x717
 2803 074a 02       		.uleb128 0x2
 2804 074b 08       		.byte	0x8
 2805 074c 04       		.byte	0x4
 2806 074d 77080000 		.4byte	.LASF115
 2807 0751 0B       		.uleb128 0xb
 2808 0752 01       		.byte	0x1
 2809 0753 2C000000 		.4byte	0x2c
 2810 0757 08       		.byte	0x8
 2811 0758 43       		.byte	0x43
 2812 0759 7C070000 		.4byte	0x77c
 2813 075d 0C       		.uleb128 0xc
 2814 075e D4060000 		.4byte	.LASF116
 2815 0762 00       		.byte	0
 2816 0763 0C       		.uleb128 0xc
 2817 0764 DF050000 		.4byte	.LASF117
 2818 0768 01       		.byte	0x1
 2819 0769 0C       		.uleb128 0xc
 2820 076a 5C050000 		.4byte	.LASF118
 2821 076e 02       		.byte	0x2
 2822 076f 0C       		.uleb128 0xc
 2823 0770 0E0E0000 		.4byte	.LASF119
 2824 0774 03       		.byte	0x3
 2825 0775 0C       		.uleb128 0xc
 2826 0776 F9000000 		.4byte	.LASF120
 2827 077a 04       		.byte	0x4
 2828 077b 00       		.byte	0
 2829 077c 03       		.uleb128 0x3
 2830 077d 15080000 		.4byte	.LASF121
 2831 0781 08       		.byte	0x8
 2832 0782 49       		.byte	0x49
 2833 0783 51070000 		.4byte	0x751
 2834 0787 09       		.uleb128 0x9
 2835 0788 08       		.byte	0x8
 2836 0789 08       		.byte	0x8
 2837 078a CF       		.byte	0xcf
 2838 078b A8070000 		.4byte	0x7a8
 2839 078f 0A       		.uleb128 0xa
 2840 0790 EA090000 		.4byte	.LASF122
 2841 0794 08       		.byte	0x8
 2842 0795 D4       		.byte	0xd4
 2843 0796 99000000 		.4byte	0x99
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 113


 2844 079a 00       		.byte	0
 2845 079b 0A       		.uleb128 0xa
 2846 079c D5070000 		.4byte	.LASF123
 2847 07a0 08       		.byte	0x8
 2848 07a1 D9       		.byte	0xd9
 2849 07a2 99000000 		.4byte	0x99
 2850 07a6 04       		.byte	0x4
 2851 07a7 00       		.byte	0
 2852 07a8 03       		.uleb128 0x3
 2853 07a9 590B0000 		.4byte	.LASF124
 2854 07ad 08       		.byte	0x8
 2855 07ae DA       		.byte	0xda
 2856 07af 87070000 		.4byte	0x787
 2857 07b3 16       		.uleb128 0x16
 2858 07b4 97050000 		.4byte	.LASF125
 2859 07b8 01       		.byte	0x1
 2860 07b9 4A08     		.2byte	0x84a
 2861 07bb 00000000 		.4byte	.LFB21
 2862 07bf 2C000000 		.4byte	.LFE21-.LFB21
 2863 07c3 01       		.uleb128 0x1
 2864 07c4 9C       		.byte	0x9c
 2865 07c5 DA070000 		.4byte	0x7da
 2866 07c9 17       		.uleb128 0x17
 2867 07ca AE0B0000 		.4byte	.LASF127
 2868 07ce 01       		.byte	0x1
 2869 07cf 4C08     		.2byte	0x84c
 2870 07d1 99000000 		.4byte	0x99
 2871 07d5 00000000 		.4byte	.LLST0
 2872 07d9 00       		.byte	0
 2873 07da 16       		.uleb128 0x16
 2874 07db 330B0000 		.4byte	.LASF126
 2875 07df 01       		.byte	0x1
 2876 07e0 7008     		.2byte	0x870
 2877 07e2 00000000 		.4byte	.LFB22
 2878 07e6 08000000 		.4byte	.LFE22-.LFB22
 2879 07ea 01       		.uleb128 0x1
 2880 07eb 9C       		.byte	0x9c
 2881 07ec FA070000 		.4byte	0x7fa
 2882 07f0 18       		.uleb128 0x18
 2883 07f1 06000000 		.4byte	.LVL4
 2884 07f5 B3070000 		.4byte	0x7b3
 2885 07f9 00       		.byte	0
 2886 07fa 19       		.uleb128 0x19
 2887 07fb 9A010000 		.4byte	.LASF229
 2888 07ff 01       		.byte	0x1
 2889 0800 EC       		.byte	0xec
 2890 0801 99000000 		.4byte	0x99
 2891 0805 00000000 		.4byte	.LFB1
 2892 0809 10000000 		.4byte	.LFE1-.LFB1
 2893 080d 01       		.uleb128 0x1
 2894 080e 9C       		.byte	0x9c
 2895 080f 1A       		.uleb128 0x1a
 2896 0810 A8090000 		.4byte	.LASF129
 2897 0814 01       		.byte	0x1
 2898 0815 1A01     		.2byte	0x11a
 2899 0817 BA000000 		.4byte	0xba
 2900 081b 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 114


 2901 081f 40000000 		.4byte	.LFE2-.LFB2
 2902 0823 01       		.uleb128 0x1
 2903 0824 9C       		.byte	0x9c
 2904 0825 53080000 		.4byte	0x853
 2905 0829 1B       		.uleb128 0x1b
 2906 082a 2A0E0000 		.4byte	.LASF135
 2907 082e 01       		.byte	0x1
 2908 082f 1A01     		.2byte	0x11a
 2909 0831 99000000 		.4byte	0x99
 2910 0835 1E000000 		.4byte	.LLST1
 2911 0839 17       		.uleb128 0x17
 2912 083a 010E0000 		.4byte	.LASF128
 2913 083e 01       		.byte	0x1
 2914 083f 1C01     		.2byte	0x11c
 2915 0841 BA000000 		.4byte	0xba
 2916 0845 3F000000 		.4byte	.LLST2
 2917 0849 18       		.uleb128 0x18
 2918 084a 38000000 		.4byte	.LVL7
 2919 084e 68130000 		.4byte	0x1368
 2920 0852 00       		.byte	0
 2921 0853 1A       		.uleb128 0x1a
 2922 0854 FE060000 		.4byte	.LASF130
 2923 0858 01       		.byte	0x1
 2924 0859 6D01     		.2byte	0x16d
 2925 085b BA000000 		.4byte	0xba
 2926 085f 00000000 		.4byte	.LFB3
 2927 0863 2C000000 		.4byte	.LFE3-.LFB3
 2928 0867 01       		.uleb128 0x1
 2929 0868 9C       		.byte	0x9c
 2930 0869 87080000 		.4byte	0x887
 2931 086d 17       		.uleb128 0x17
 2932 086e 36000000 		.4byte	.LASF131
 2933 0872 01       		.byte	0x1
 2934 0873 6F01     		.2byte	0x16f
 2935 0875 BA000000 		.4byte	0xba
 2936 0879 5D000000 		.4byte	.LLST3
 2937 087d 18       		.uleb128 0x18
 2938 087e 16000000 		.4byte	.LVL10
 2939 0882 74130000 		.4byte	0x1374
 2940 0886 00       		.byte	0
 2941 0887 1A       		.uleb128 0x1a
 2942 0888 7F0C0000 		.4byte	.LASF132
 2943 088c 01       		.byte	0x1
 2944 088d AB01     		.2byte	0x1ab
 2945 088f BA000000 		.4byte	0xba
 2946 0893 00000000 		.4byte	.LFB4
 2947 0897 3C000000 		.4byte	.LFE4-.LFB4
 2948 089b 01       		.uleb128 0x1
 2949 089c 9C       		.byte	0x9c
 2950 089d DF080000 		.4byte	0x8df
 2951 08a1 17       		.uleb128 0x17
 2952 08a2 36000000 		.4byte	.LASF131
 2953 08a6 01       		.byte	0x1
 2954 08a7 AD01     		.2byte	0x1ad
 2955 08a9 BA000000 		.4byte	0xba
 2956 08ad 7C000000 		.4byte	.LLST4
 2957 08b1 17       		.uleb128 0x17
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 115


 2958 08b2 48080000 		.4byte	.LASF133
 2959 08b6 01       		.byte	0x1
 2960 08b7 AF01     		.2byte	0x1af
 2961 08b9 99000000 		.4byte	0x99
 2962 08bd CA000000 		.4byte	.LLST5
 2963 08c1 1C       		.uleb128 0x1c
 2964 08c2 18000000 		.4byte	.LVL15
 2965 08c6 0F080000 		.4byte	0x80f
 2966 08ca D5080000 		.4byte	0x8d5
 2967 08ce 1D       		.uleb128 0x1d
 2968 08cf 01       		.uleb128 0x1
 2969 08d0 50       		.byte	0x50
 2970 08d1 02       		.uleb128 0x2
 2971 08d2 74       		.byte	0x74
 2972 08d3 00       		.sleb128 0
 2973 08d4 00       		.byte	0
 2974 08d5 18       		.uleb128 0x18
 2975 08d6 26000000 		.4byte	.LVL16
 2976 08da 53080000 		.4byte	0x853
 2977 08de 00       		.byte	0
 2978 08df 1A       		.uleb128 0x1a
 2979 08e0 5B000000 		.4byte	.LASF134
 2980 08e4 01       		.byte	0x1
 2981 08e5 1702     		.2byte	0x217
 2982 08e7 BA000000 		.4byte	0xba
 2983 08eb 00000000 		.4byte	.LFB5
 2984 08ef 54000000 		.4byte	.LFE5-.LFB5
 2985 08f3 01       		.uleb128 0x1
 2986 08f4 9C       		.byte	0x9c
 2987 08f5 33090000 		.4byte	0x933
 2988 08f9 1B       		.uleb128 0x1b
 2989 08fa 2A0E0000 		.4byte	.LASF135
 2990 08fe 01       		.byte	0x1
 2991 08ff 1702     		.2byte	0x217
 2992 0901 99000000 		.4byte	0x99
 2993 0905 DD000000 		.4byte	.LLST6
 2994 0909 1B       		.uleb128 0x1b
 2995 090a 26020000 		.4byte	.LASF136
 2996 090e 01       		.byte	0x1
 2997 090f 1702     		.2byte	0x217
 2998 0911 99000000 		.4byte	0x99
 2999 0915 FE000000 		.4byte	.LLST7
 3000 0919 17       		.uleb128 0x17
 3001 091a 010E0000 		.4byte	.LASF128
 3002 091e 01       		.byte	0x1
 3003 091f 1902     		.2byte	0x219
 3004 0921 BA000000 		.4byte	0xba
 3005 0925 1F010000 		.4byte	.LLST8
 3006 0929 18       		.uleb128 0x18
 3007 092a 48000000 		.4byte	.LVL22
 3008 092e 80130000 		.4byte	0x1380
 3009 0932 00       		.byte	0
 3010 0933 1A       		.uleb128 0x1a
 3011 0934 88070000 		.4byte	.LASF137
 3012 0938 01       		.byte	0x1
 3013 0939 8102     		.2byte	0x281
 3014 093b BA000000 		.4byte	0xba
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 116


 3015 093f 00000000 		.4byte	.LFB6
 3016 0943 2C000000 		.4byte	.LFE6-.LFB6
 3017 0947 01       		.uleb128 0x1
 3018 0948 9C       		.byte	0x9c
 3019 0949 67090000 		.4byte	0x967
 3020 094d 17       		.uleb128 0x17
 3021 094e 36000000 		.4byte	.LASF131
 3022 0952 01       		.byte	0x1
 3023 0953 8302     		.2byte	0x283
 3024 0955 BA000000 		.4byte	0xba
 3025 0959 3D010000 		.4byte	.LLST9
 3026 095d 18       		.uleb128 0x18
 3027 095e 16000000 		.4byte	.LVL25
 3028 0962 8C130000 		.4byte	0x138c
 3029 0966 00       		.byte	0
 3030 0967 1E       		.uleb128 0x1e
 3031 0968 CF0B0000 		.4byte	.LASF144
 3032 096c 01       		.byte	0x1
 3033 096d 4803     		.2byte	0x348
 3034 096f 00000000 		.4byte	.LFB8
 3035 0973 9C000000 		.4byte	.LFE8-.LFB8
 3036 0977 01       		.uleb128 0x1
 3037 0978 9C       		.byte	0x9c
 3038 0979 310A0000 		.4byte	0xa31
 3039 097d 1B       		.uleb128 0x1b
 3040 097e 2A0E0000 		.4byte	.LASF135
 3041 0982 01       		.byte	0x1
 3042 0983 4803     		.2byte	0x348
 3043 0985 99000000 		.4byte	0x99
 3044 0989 5C010000 		.4byte	.LLST10
 3045 098d 1B       		.uleb128 0x1b
 3046 098e 22000000 		.4byte	.LASF138
 3047 0992 01       		.byte	0x1
 3048 0993 4803     		.2byte	0x348
 3049 0995 99000000 		.4byte	0x99
 3050 0999 7D010000 		.4byte	.LLST11
 3051 099d 1B       		.uleb128 0x1b
 3052 099e 6F0C0000 		.4byte	.LASF139
 3053 09a2 01       		.byte	0x1
 3054 09a3 4803     		.2byte	0x348
 3055 09a5 99000000 		.4byte	0x99
 3056 09a9 9E010000 		.4byte	.LLST12
 3057 09ad 1F       		.uleb128 0x1f
 3058 09ae AE040000 		.4byte	.LASF140
 3059 09b2 01       		.byte	0x1
 3060 09b3 4A03     		.2byte	0x34a
 3061 09b5 99000000 		.4byte	0x99
 3062 09b9 01       		.byte	0x1
 3063 09ba 17       		.uleb128 0x17
 3064 09bb 750C0000 		.4byte	.LASF141
 3065 09bf 01       		.byte	0x1
 3066 09c0 4B03     		.2byte	0x34b
 3067 09c2 99000000 		.4byte	0x99
 3068 09c6 CA010000 		.4byte	.LLST13
 3069 09ca 17       		.uleb128 0x17
 3070 09cb 14010000 		.4byte	.LASF142
 3071 09cf 01       		.byte	0x1
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 117


 3072 09d0 4C03     		.2byte	0x34c
 3073 09d2 81000000 		.4byte	0x81
 3074 09d6 E9010000 		.4byte	.LLST14
 3075 09da 17       		.uleb128 0x17
 3076 09db FB0B0000 		.4byte	.LASF143
 3077 09df 01       		.byte	0x1
 3078 09e0 4D03     		.2byte	0x34d
 3079 09e2 310A0000 		.4byte	0xa31
 3080 09e6 12020000 		.4byte	.LLST15
 3081 09ea 18       		.uleb128 0x18
 3082 09eb 1A000000 		.4byte	.LVL32
 3083 09ef 98130000 		.4byte	0x1398
 3084 09f3 18       		.uleb128 0x18
 3085 09f4 3A000000 		.4byte	.LVL33
 3086 09f8 A3130000 		.4byte	0x13a3
 3087 09fc 18       		.uleb128 0x18
 3088 09fd 4C000000 		.4byte	.LVL34
 3089 0a01 98130000 		.4byte	0x1398
 3090 0a05 18       		.uleb128 0x18
 3091 0a06 6C000000 		.4byte	.LVL35
 3092 0a0a A3130000 		.4byte	0x13a3
 3093 0a0e 18       		.uleb128 0x18
 3094 0a0f 72000000 		.4byte	.LVL36
 3095 0a13 98130000 		.4byte	0x1398
 3096 0a17 18       		.uleb128 0x18
 3097 0a18 84000000 		.4byte	.LVL37
 3098 0a1c A3130000 		.4byte	0x13a3
 3099 0a20 20       		.uleb128 0x20
 3100 0a21 8C000000 		.4byte	.LVL38
 3101 0a25 AE130000 		.4byte	0x13ae
 3102 0a29 1D       		.uleb128 0x1d
 3103 0a2a 01       		.uleb128 0x1
 3104 0a2b 50       		.byte	0x50
 3105 0a2c 02       		.uleb128 0x2
 3106 0a2d 74       		.byte	0x74
 3107 0a2e 00       		.sleb128 0
 3108 0a2f 00       		.byte	0
 3109 0a30 00       		.byte	0
 3110 0a31 07       		.uleb128 0x7
 3111 0a32 04       		.byte	0x4
 3112 0a33 370A0000 		.4byte	0xa37
 3113 0a37 21       		.uleb128 0x21
 3114 0a38 58060000 		.4byte	0x658
 3115 0a3c 1E       		.uleb128 0x1e
 3116 0a3d 4A090000 		.4byte	.LASF145
 3117 0a41 01       		.byte	0x1
 3118 0a42 8E04     		.2byte	0x48e
 3119 0a44 00000000 		.4byte	.LFB11
 3120 0a48 80000000 		.4byte	.LFE11-.LFB11
 3121 0a4c 01       		.uleb128 0x1
 3122 0a4d 9C       		.byte	0x9c
 3123 0a4e E50A0000 		.4byte	0xae5
 3124 0a52 1B       		.uleb128 0x1b
 3125 0a53 6F0C0000 		.4byte	.LASF139
 3126 0a57 01       		.byte	0x1
 3127 0a58 8E04     		.2byte	0x48e
 3128 0a5a 99000000 		.4byte	0x99
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 118


 3129 0a5e 25020000 		.4byte	.LLST16
 3130 0a62 17       		.uleb128 0x17
 3131 0a63 14010000 		.4byte	.LASF142
 3132 0a67 01       		.byte	0x1
 3133 0a68 9004     		.2byte	0x490
 3134 0a6a 81000000 		.4byte	0x81
 3135 0a6e 46020000 		.4byte	.LLST17
 3136 0a72 17       		.uleb128 0x17
 3137 0a73 6E020000 		.4byte	.LASF146
 3138 0a77 01       		.byte	0x1
 3139 0a78 9204     		.2byte	0x492
 3140 0a7a 99000000 		.4byte	0x99
 3141 0a7e 59020000 		.4byte	.LLST18
 3142 0a82 17       		.uleb128 0x17
 3143 0a83 69040000 		.4byte	.LASF147
 3144 0a87 01       		.byte	0x1
 3145 0a88 9404     		.2byte	0x494
 3146 0a8a 99000000 		.4byte	0x99
 3147 0a8e 78020000 		.4byte	.LLST19
 3148 0a92 17       		.uleb128 0x17
 3149 0a93 5E030000 		.4byte	.LASF148
 3150 0a97 01       		.byte	0x1
 3151 0a98 9504     		.2byte	0x495
 3152 0a9a 99000000 		.4byte	0x99
 3153 0a9e 97020000 		.4byte	.LLST20
 3154 0aa2 17       		.uleb128 0x17
 3155 0aa3 4C050000 		.4byte	.LASF149
 3156 0aa7 01       		.byte	0x1
 3157 0aa8 9704     		.2byte	0x497
 3158 0aaa 99000000 		.4byte	0x99
 3159 0aae B6020000 		.4byte	.LLST21
 3160 0ab2 17       		.uleb128 0x17
 3161 0ab3 23070000 		.4byte	.LASF150
 3162 0ab7 01       		.byte	0x1
 3163 0ab8 9804     		.2byte	0x498
 3164 0aba 99000000 		.4byte	0x99
 3165 0abe E0020000 		.4byte	.LLST22
 3166 0ac2 17       		.uleb128 0x17
 3167 0ac3 B6020000 		.4byte	.LASF151
 3168 0ac7 01       		.byte	0x1
 3169 0ac8 9A04     		.2byte	0x49a
 3170 0aca 310A0000 		.4byte	0xa31
 3171 0ace F3020000 		.4byte	.LLST23
 3172 0ad2 18       		.uleb128 0x18
 3173 0ad3 34000000 		.4byte	.LVL49
 3174 0ad7 98130000 		.4byte	0x1398
 3175 0adb 18       		.uleb128 0x18
 3176 0adc 6C000000 		.4byte	.LVL60
 3177 0ae0 A3130000 		.4byte	0x13a3
 3178 0ae4 00       		.byte	0
 3179 0ae5 22       		.uleb128 0x22
 3180 0ae6 5E0D0000 		.4byte	.LASF230
 3181 0aea 01       		.byte	0x1
 3182 0aeb 2405     		.2byte	0x524
 3183 0aed 00000000 		.4byte	.LFB12
 3184 0af1 02000000 		.4byte	.LFE12-.LFB12
 3185 0af5 01       		.uleb128 0x1
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 119


 3186 0af6 9C       		.byte	0x9c
 3187 0af7 1E       		.uleb128 0x1e
 3188 0af8 13090000 		.4byte	.LASF152
 3189 0afc 01       		.byte	0x1
 3190 0afd 7105     		.2byte	0x571
 3191 0aff 00000000 		.4byte	.LFB13
 3192 0b03 08000000 		.4byte	.LFE13-.LFB13
 3193 0b07 01       		.uleb128 0x1
 3194 0b08 9C       		.byte	0x9c
 3195 0b09 2F0B0000 		.4byte	0xb2f
 3196 0b0d 1B       		.uleb128 0x1b
 3197 0b0e B3060000 		.4byte	.LASF153
 3198 0b12 01       		.byte	0x1
 3199 0b13 7105     		.2byte	0x571
 3200 0b15 E8000000 		.4byte	0xe8
 3201 0b19 06030000 		.4byte	.LLST24
 3202 0b1d 20       		.uleb128 0x20
 3203 0b1e 06000000 		.4byte	.LVL68
 3204 0b22 BA130000 		.4byte	0x13ba
 3205 0b26 1D       		.uleb128 0x1d
 3206 0b27 01       		.uleb128 0x1
 3207 0b28 50       		.byte	0x50
 3208 0b29 03       		.uleb128 0x3
 3209 0b2a F3       		.byte	0xf3
 3210 0b2b 01       		.uleb128 0x1
 3211 0b2c 50       		.byte	0x50
 3212 0b2d 00       		.byte	0
 3213 0b2e 00       		.byte	0
 3214 0b2f 1E       		.uleb128 0x1e
 3215 0b30 AA010000 		.4byte	.LASF154
 3216 0b34 01       		.byte	0x1
 3217 0b35 8805     		.2byte	0x588
 3218 0b37 00000000 		.4byte	.LFB14
 3219 0b3b 30000000 		.4byte	.LFE14-.LFB14
 3220 0b3f 01       		.uleb128 0x1
 3221 0b40 9C       		.byte	0x9c
 3222 0b41 560B0000 		.4byte	0xb56
 3223 0b45 1B       		.uleb128 0x1b
 3224 0b46 62040000 		.4byte	.LASF155
 3225 0b4a 01       		.byte	0x1
 3226 0b4b 8805     		.2byte	0x588
 3227 0b4d 99000000 		.4byte	0x99
 3228 0b51 27030000 		.4byte	.LLST25
 3229 0b55 00       		.byte	0
 3230 0b56 1E       		.uleb128 0x1e
 3231 0b57 0E060000 		.4byte	.LASF156
 3232 0b5b 01       		.byte	0x1
 3233 0b5c CC05     		.2byte	0x5cc
 3234 0b5e 00000000 		.4byte	.LFB15
 3235 0b62 30000000 		.4byte	.LFE15-.LFB15
 3236 0b66 01       		.uleb128 0x1
 3237 0b67 9C       		.byte	0x9c
 3238 0b68 7D0B0000 		.4byte	0xb7d
 3239 0b6c 1B       		.uleb128 0x1b
 3240 0b6d A10C0000 		.4byte	.LASF58
 3241 0b71 01       		.byte	0x1
 3242 0b72 CC05     		.2byte	0x5cc
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 120


 3243 0b74 99000000 		.4byte	0x99
 3244 0b78 55030000 		.4byte	.LLST26
 3245 0b7c 00       		.byte	0
 3246 0b7d 1E       		.uleb128 0x1e
 3247 0b7e F9070000 		.4byte	.LASF157
 3248 0b82 01       		.byte	0x1
 3249 0b83 2006     		.2byte	0x620
 3250 0b85 00000000 		.4byte	.LFB16
 3251 0b89 12000000 		.4byte	.LFE16-.LFB16
 3252 0b8d 01       		.uleb128 0x1
 3253 0b8e 9C       		.byte	0x9c
 3254 0b8f D90B0000 		.4byte	0xbd9
 3255 0b93 1B       		.uleb128 0x1b
 3256 0b94 A10C0000 		.4byte	.LASF58
 3257 0b98 01       		.byte	0x1
 3258 0b99 2006     		.2byte	0x620
 3259 0b9b 99000000 		.4byte	0x99
 3260 0b9f 83030000 		.4byte	.LLST27
 3261 0ba3 1B       		.uleb128 0x1b
 3262 0ba4 62040000 		.4byte	.LASF155
 3263 0ba8 01       		.byte	0x1
 3264 0ba9 2006     		.2byte	0x620
 3265 0bab 99000000 		.4byte	0x99
 3266 0baf AF030000 		.4byte	.LLST28
 3267 0bb3 1C       		.uleb128 0x1c
 3268 0bb4 0A000000 		.4byte	.LVL77
 3269 0bb8 2F0B0000 		.4byte	0xb2f
 3270 0bbc C80B0000 		.4byte	0xbc8
 3271 0bc0 1D       		.uleb128 0x1d
 3272 0bc1 01       		.uleb128 0x1
 3273 0bc2 50       		.byte	0x50
 3274 0bc3 03       		.uleb128 0x3
 3275 0bc4 F3       		.byte	0xf3
 3276 0bc5 01       		.uleb128 0x1
 3277 0bc6 51       		.byte	0x51
 3278 0bc7 00       		.byte	0
 3279 0bc8 20       		.uleb128 0x20
 3280 0bc9 10000000 		.4byte	.LVL78
 3281 0bcd 560B0000 		.4byte	0xb56
 3282 0bd1 1D       		.uleb128 0x1d
 3283 0bd2 01       		.uleb128 0x1
 3284 0bd3 50       		.byte	0x50
 3285 0bd4 02       		.uleb128 0x2
 3286 0bd5 74       		.byte	0x74
 3287 0bd6 00       		.sleb128 0
 3288 0bd7 00       		.byte	0
 3289 0bd8 00       		.byte	0
 3290 0bd9 1A       		.uleb128 0x1a
 3291 0bda C6050000 		.4byte	.LASF158
 3292 0bde 01       		.byte	0x1
 3293 0bdf 5406     		.2byte	0x654
 3294 0be1 BA000000 		.4byte	0xba
 3295 0be5 00000000 		.4byte	.LFB17
 3296 0be9 1A000000 		.4byte	.LFE17-.LFB17
 3297 0bed 01       		.uleb128 0x1
 3298 0bee 9C       		.byte	0x9c
 3299 0bef 2B0C0000 		.4byte	0xc2b
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 121


 3300 0bf3 1B       		.uleb128 0x1b
 3301 0bf4 2A0E0000 		.4byte	.LASF135
 3302 0bf8 01       		.byte	0x1
 3303 0bf9 5406     		.2byte	0x654
 3304 0bfb 99000000 		.4byte	0x99
 3305 0bff D0030000 		.4byte	.LLST29
 3306 0c03 17       		.uleb128 0x17
 3307 0c04 BB060000 		.4byte	.LASF159
 3308 0c08 01       		.byte	0x1
 3309 0c09 5606     		.2byte	0x656
 3310 0c0b BA000000 		.4byte	0xba
 3311 0c0f 12040000 		.4byte	.LLST30
 3312 0c13 20       		.uleb128 0x20
 3313 0c14 18000000 		.4byte	.LVL86
 3314 0c18 C5130000 		.4byte	0x13c5
 3315 0c1c 1D       		.uleb128 0x1d
 3316 0c1d 01       		.uleb128 0x1
 3317 0c1e 50       		.byte	0x50
 3318 0c1f 03       		.uleb128 0x3
 3319 0c20 F3       		.byte	0xf3
 3320 0c21 01       		.uleb128 0x1
 3321 0c22 50       		.byte	0x50
 3322 0c23 1D       		.uleb128 0x1d
 3323 0c24 01       		.uleb128 0x1
 3324 0c25 51       		.byte	0x51
 3325 0c26 02       		.uleb128 0x2
 3326 0c27 08       		.byte	0x8
 3327 0c28 55       		.byte	0x55
 3328 0c29 00       		.byte	0
 3329 0c2a 00       		.byte	0
 3330 0c2b 1A       		.uleb128 0x1a
 3331 0c2c 7D010000 		.4byte	.LASF160
 3332 0c30 01       		.byte	0x1
 3333 0c31 C906     		.2byte	0x6c9
 3334 0c33 BA000000 		.4byte	0xba
 3335 0c37 00000000 		.4byte	.LFB18
 3336 0c3b 1A000000 		.4byte	.LFE18-.LFB18
 3337 0c3f 01       		.uleb128 0x1
 3338 0c40 9C       		.byte	0x9c
 3339 0c41 760C0000 		.4byte	0xc76
 3340 0c45 17       		.uleb128 0x17
 3341 0c46 BB060000 		.4byte	.LASF159
 3342 0c4a 01       		.byte	0x1
 3343 0c4b CB06     		.2byte	0x6cb
 3344 0c4d BA000000 		.4byte	0xba
 3345 0c51 3C040000 		.4byte	.LLST31
 3346 0c55 17       		.uleb128 0x17
 3347 0c56 48080000 		.4byte	.LASF133
 3348 0c5a 01       		.byte	0x1
 3349 0c5b CC06     		.2byte	0x6cc
 3350 0c5d 99000000 		.4byte	0x99
 3351 0c61 66040000 		.4byte	.LLST32
 3352 0c65 20       		.uleb128 0x20
 3353 0c66 0E000000 		.4byte	.LVL89
 3354 0c6a D90B0000 		.4byte	0xbd9
 3355 0c6e 1D       		.uleb128 0x1d
 3356 0c6f 01       		.uleb128 0x1
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 122


 3357 0c70 50       		.byte	0x50
 3358 0c71 02       		.uleb128 0x2
 3359 0c72 74       		.byte	0x74
 3360 0c73 00       		.sleb128 0
 3361 0c74 00       		.byte	0
 3362 0c75 00       		.byte	0
 3363 0c76 1A       		.uleb128 0x1a
 3364 0c77 00000000 		.4byte	.LASF161
 3365 0c7b 01       		.byte	0x1
 3366 0c7c E80A     		.2byte	0xae8
 3367 0c7e 99000000 		.4byte	0x99
 3368 0c82 00000000 		.4byte	.LFB25
 3369 0c86 10000000 		.4byte	.LFE25-.LFB25
 3370 0c8a 01       		.uleb128 0x1
 3371 0c8b 9C       		.byte	0x9c
 3372 0c8c BD0C0000 		.4byte	0xcbd
 3373 0c90 1B       		.uleb128 0x1b
 3374 0c91 2A0E0000 		.4byte	.LASF135
 3375 0c95 01       		.byte	0x1
 3376 0c96 E80A     		.2byte	0xae8
 3377 0c98 99000000 		.4byte	0x99
 3378 0c9c 85040000 		.4byte	.LLST33
 3379 0ca0 23       		.uleb128 0x23
 3380 0ca1 FA0A0000 		.4byte	.LASF162
 3381 0ca5 01       		.byte	0x1
 3382 0ca6 EA0A     		.2byte	0xaea
 3383 0ca8 99000000 		.4byte	0x99
 3384 0cac 01       		.uleb128 0x1
 3385 0cad 50       		.byte	0x50
 3386 0cae 23       		.uleb128 0x23
 3387 0caf 2F020000 		.4byte	.LASF163
 3388 0cb3 01       		.byte	0x1
 3389 0cb4 EE0A     		.2byte	0xaee
 3390 0cb6 BD0C0000 		.4byte	0xcbd
 3391 0cba 01       		.uleb128 0x1
 3392 0cbb 53       		.byte	0x53
 3393 0cbc 00       		.byte	0
 3394 0cbd 07       		.uleb128 0x7
 3395 0cbe 04       		.byte	0x4
 3396 0cbf 0B030000 		.4byte	0x30b
 3397 0cc3 1A       		.uleb128 0x1a
 3398 0cc4 33040000 		.4byte	.LASF164
 3399 0cc8 01       		.byte	0x1
 3400 0cc9 400B     		.2byte	0xb40
 3401 0ccb 81000000 		.4byte	0x81
 3402 0ccf 00000000 		.4byte	.LFB26
 3403 0cd3 34000000 		.4byte	.LFE26-.LFB26
 3404 0cd7 01       		.uleb128 0x1
 3405 0cd8 9C       		.byte	0x9c
 3406 0cd9 1E0D0000 		.4byte	0xd1e
 3407 0cdd 1B       		.uleb128 0x1b
 3408 0cde DC0D0000 		.4byte	.LASF165
 3409 0ce2 01       		.byte	0x1
 3410 0ce3 400B     		.2byte	0xb40
 3411 0ce5 99000000 		.4byte	0x99
 3412 0ce9 A6040000 		.4byte	.LLST34
 3413 0ced 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 123


 3414 0cee B4050000 		.4byte	.LASF49
 3415 0cf2 01       		.byte	0x1
 3416 0cf3 400B     		.2byte	0xb40
 3417 0cf5 99000000 		.4byte	0x99
 3418 0cf9 EF040000 		.4byte	.LLST35
 3419 0cfd 17       		.uleb128 0x17
 3420 0cfe CF0A0000 		.4byte	.LASF166
 3421 0d02 01       		.byte	0x1
 3422 0d03 420B     		.2byte	0xb42
 3423 0d05 99000000 		.4byte	0x99
 3424 0d09 29050000 		.4byte	.LLST36
 3425 0d0d 17       		.uleb128 0x17
 3426 0d0e EA0D0000 		.4byte	.LASF167
 3427 0d12 01       		.byte	0x1
 3428 0d13 430B     		.2byte	0xb43
 3429 0d15 99000000 		.4byte	0x99
 3430 0d19 3C050000 		.4byte	.LLST37
 3431 0d1d 00       		.byte	0
 3432 0d1e 16       		.uleb128 0x16
 3433 0d1f 40020000 		.4byte	.LASF168
 3434 0d23 01       		.byte	0x1
 3435 0d24 9909     		.2byte	0x999
 3436 0d26 00000000 		.4byte	.LFB24
 3437 0d2a 14000000 		.4byte	.LFE24-.LFB24
 3438 0d2e 01       		.uleb128 0x1
 3439 0d2f 9C       		.byte	0x9c
 3440 0d30 9E0D0000 		.4byte	0xd9e
 3441 0d34 1B       		.uleb128 0x1b
 3442 0d35 48080000 		.4byte	.LASF133
 3443 0d39 01       		.byte	0x1
 3444 0d3a 9909     		.2byte	0x999
 3445 0d3c 99000000 		.4byte	0x99
 3446 0d40 5B050000 		.4byte	.LLST38
 3447 0d44 1B       		.uleb128 0x1b
 3448 0d45 2F020000 		.4byte	.LASF163
 3449 0d49 01       		.byte	0x1
 3450 0d4a 9909     		.2byte	0x999
 3451 0d4c BD0C0000 		.4byte	0xcbd
 3452 0d50 7C050000 		.4byte	.LLST39
 3453 0d54 23       		.uleb128 0x23
 3454 0d55 34030000 		.4byte	.LASF169
 3455 0d59 01       		.byte	0x1
 3456 0d5a 9B09     		.2byte	0x99b
 3457 0d5c 81000000 		.4byte	0x81
 3458 0d60 01       		.uleb128 0x1
 3459 0d61 50       		.byte	0x50
 3460 0d62 1F       		.uleb128 0x1f
 3461 0d63 2F010000 		.4byte	.LASF170
 3462 0d67 01       		.byte	0x1
 3463 0d68 9C09     		.2byte	0x99c
 3464 0d6a 81000000 		.4byte	0x81
 3465 0d6e 00       		.byte	0
 3466 0d6f 17       		.uleb128 0x17
 3467 0d70 DC0D0000 		.4byte	.LASF165
 3468 0d74 01       		.byte	0x1
 3469 0d75 A209     		.2byte	0x9a2
 3470 0d77 99000000 		.4byte	0x99
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 124


 3471 0d7b A8050000 		.4byte	.LLST40
 3472 0d7f 1C       		.uleb128 0x1c
 3473 0d80 08000000 		.4byte	.LVL110
 3474 0d84 760C0000 		.4byte	0xc76
 3475 0d88 940D0000 		.4byte	0xd94
 3476 0d8c 1D       		.uleb128 0x1d
 3477 0d8d 01       		.uleb128 0x1
 3478 0d8e 50       		.byte	0x50
 3479 0d8f 03       		.uleb128 0x3
 3480 0d90 F3       		.byte	0xf3
 3481 0d91 01       		.uleb128 0x1
 3482 0d92 50       		.byte	0x50
 3483 0d93 00       		.byte	0
 3484 0d94 18       		.uleb128 0x18
 3485 0d95 10000000 		.4byte	.LVL112
 3486 0d99 C30C0000 		.4byte	0xcc3
 3487 0d9d 00       		.byte	0
 3488 0d9e 24       		.uleb128 0x24
 3489 0d9f 84020000 		.4byte	.LASF171
 3490 0da3 01       		.byte	0x1
 3491 0da4 F406     		.2byte	0x6f4
 3492 0da6 BA000000 		.4byte	0xba
 3493 0daa 00000000 		.4byte	.LFB19
 3494 0dae 20010000 		.4byte	.LFE19-.LFB19
 3495 0db2 01       		.uleb128 0x1
 3496 0db3 9C       		.byte	0x9c
 3497 0db4 100F0000 		.4byte	0xf10
 3498 0db8 1B       		.uleb128 0x1b
 3499 0db9 2A0E0000 		.4byte	.LASF135
 3500 0dbd 01       		.byte	0x1
 3501 0dbe F406     		.2byte	0x6f4
 3502 0dc0 99000000 		.4byte	0x99
 3503 0dc4 BB050000 		.4byte	.LLST41
 3504 0dc8 17       		.uleb128 0x17
 3505 0dc9 02040000 		.4byte	.LASF172
 3506 0dcd 01       		.byte	0x1
 3507 0dce F606     		.2byte	0x6f6
 3508 0dd0 BA000000 		.4byte	0xba
 3509 0dd4 E7050000 		.4byte	.LLST42
 3510 0dd8 17       		.uleb128 0x17
 3511 0dd9 52080000 		.4byte	.LASF173
 3512 0ddd 01       		.byte	0x1
 3513 0dde F806     		.2byte	0x6f8
 3514 0de0 99000000 		.4byte	0x99
 3515 0de4 11060000 		.4byte	.LLST43
 3516 0de8 25       		.uleb128 0x25
 3517 0de9 C6000000 		.4byte	.LASF174
 3518 0ded 01       		.byte	0x1
 3519 0dee F906     		.2byte	0x6f9
 3520 0df0 99000000 		.4byte	0x99
 3521 0df4 C05D     		.2byte	0x5dc0
 3522 0df6 17       		.uleb128 0x17
 3523 0df7 340C0000 		.4byte	.LASF175
 3524 0dfb 01       		.byte	0x1
 3525 0dfc FA06     		.2byte	0x6fa
 3526 0dfe 99000000 		.4byte	0x99
 3527 0e02 30060000 		.4byte	.LLST44
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 125


 3528 0e06 25       		.uleb128 0x25
 3529 0e07 F2090000 		.4byte	.LASF176
 3530 0e0b 01       		.byte	0x1
 3531 0e0c FB06     		.2byte	0x6fb
 3532 0e0e 99000000 		.4byte	0x99
 3533 0e12 7007     		.2byte	0x770
 3534 0e14 23       		.uleb128 0x23
 3535 0e15 F2040000 		.4byte	.LASF177
 3536 0e19 01       		.byte	0x1
 3537 0e1a FD06     		.2byte	0x6fd
 3538 0e1c A6010000 		.4byte	0x1a6
 3539 0e20 02       		.uleb128 0x2
 3540 0e21 91       		.byte	0x91
 3541 0e22 4C       		.sleb128 -52
 3542 0e23 17       		.uleb128 0x17
 3543 0e24 890D0000 		.4byte	.LASF178
 3544 0e28 01       		.byte	0x1
 3545 0e29 FF06     		.2byte	0x6ff
 3546 0e2b 99000000 		.4byte	0x99
 3547 0e2f 67060000 		.4byte	.LLST45
 3548 0e33 17       		.uleb128 0x17
 3549 0e34 30000000 		.4byte	.LASF179
 3550 0e38 01       		.byte	0x1
 3551 0e39 0007     		.2byte	0x700
 3552 0e3b 99000000 		.4byte	0x99
 3553 0e3f 9C060000 		.4byte	.LLST46
 3554 0e43 17       		.uleb128 0x17
 3555 0e44 B80B0000 		.4byte	.LASF180
 3556 0e48 01       		.byte	0x1
 3557 0e49 0107     		.2byte	0x701
 3558 0e4b 99000000 		.4byte	0x99
 3559 0e4f C7060000 		.4byte	.LLST47
 3560 0e53 17       		.uleb128 0x17
 3561 0e54 39010000 		.4byte	.LASF181
 3562 0e58 01       		.byte	0x1
 3563 0e59 0807     		.2byte	0x708
 3564 0e5b 100F0000 		.4byte	0xf10
 3565 0e5f FC060000 		.4byte	.LLST48
 3566 0e63 17       		.uleb128 0x17
 3567 0e64 E5000000 		.4byte	.LASF182
 3568 0e68 01       		.byte	0x1
 3569 0e69 0907     		.2byte	0x709
 3570 0e6b BD0C0000 		.4byte	0xcbd
 3571 0e6f 0F070000 		.4byte	.LLST49
 3572 0e73 17       		.uleb128 0x17
 3573 0e74 8A050000 		.4byte	.LASF183
 3574 0e78 01       		.byte	0x1
 3575 0e79 0A07     		.2byte	0x70a
 3576 0e7b F9060000 		.4byte	0x6f9
 3577 0e7f 22070000 		.4byte	.LLST50
 3578 0e83 1C       		.uleb128 0x1c
 3579 0e84 54000000 		.4byte	.LVL123
 3580 0e88 C5130000 		.4byte	0x13c5
 3581 0e8c 9D0E0000 		.4byte	0xe9d
 3582 0e90 1D       		.uleb128 0x1d
 3583 0e91 01       		.uleb128 0x1
 3584 0e92 50       		.byte	0x50
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 126


 3585 0e93 02       		.uleb128 0x2
 3586 0e94 75       		.byte	0x75
 3587 0e95 00       		.sleb128 0
 3588 0e96 1D       		.uleb128 0x1d
 3589 0e97 01       		.uleb128 0x1
 3590 0e98 51       		.byte	0x51
 3591 0e99 02       		.uleb128 0x2
 3592 0e9a 08       		.byte	0x8
 3593 0e9b 55       		.byte	0x55
 3594 0e9c 00       		.byte	0
 3595 0e9d 1C       		.uleb128 0x1c
 3596 0e9e AE000000 		.4byte	.LVL134
 3597 0ea2 D1130000 		.4byte	0x13d1
 3598 0ea6 B10E0000 		.4byte	0xeb1
 3599 0eaa 1D       		.uleb128 0x1d
 3600 0eab 01       		.uleb128 0x1
 3601 0eac 50       		.byte	0x50
 3602 0ead 02       		.uleb128 0x2
 3603 0eae 77       		.byte	0x77
 3604 0eaf 00       		.sleb128 0
 3605 0eb0 00       		.byte	0
 3606 0eb1 1C       		.uleb128 0x1c
 3607 0eb2 D0000000 		.4byte	.LVL139
 3608 0eb6 C5130000 		.4byte	0x13c5
 3609 0eba CB0E0000 		.4byte	0xecb
 3610 0ebe 1D       		.uleb128 0x1d
 3611 0ebf 01       		.uleb128 0x1
 3612 0ec0 50       		.byte	0x50
 3613 0ec1 02       		.uleb128 0x2
 3614 0ec2 75       		.byte	0x75
 3615 0ec3 00       		.sleb128 0
 3616 0ec4 1D       		.uleb128 0x1d
 3617 0ec5 01       		.uleb128 0x1
 3618 0ec6 51       		.byte	0x51
 3619 0ec7 02       		.uleb128 0x2
 3620 0ec8 08       		.byte	0x8
 3621 0ec9 55       		.byte	0x55
 3622 0eca 00       		.byte	0
 3623 0ecb 1C       		.uleb128 0x1c
 3624 0ecc EA000000 		.4byte	.LVL140
 3625 0ed0 DC130000 		.4byte	0x13dc
 3626 0ed4 DF0E0000 		.4byte	0xedf
 3627 0ed8 1D       		.uleb128 0x1d
 3628 0ed9 01       		.uleb128 0x1
 3629 0eda 50       		.byte	0x50
 3630 0edb 02       		.uleb128 0x2
 3631 0edc 77       		.byte	0x77
 3632 0edd 00       		.sleb128 0
 3633 0ede 00       		.byte	0
 3634 0edf 1C       		.uleb128 0x1c
 3635 0ee0 F4000000 		.4byte	.LVL141
 3636 0ee4 1E0D0000 		.4byte	0xd1e
 3637 0ee8 F90E0000 		.4byte	0xef9
 3638 0eec 1D       		.uleb128 0x1d
 3639 0eed 01       		.uleb128 0x1
 3640 0eee 50       		.byte	0x50
 3641 0eef 02       		.uleb128 0x2
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 127


 3642 0ef0 75       		.byte	0x75
 3643 0ef1 00       		.sleb128 0
 3644 0ef2 1D       		.uleb128 0x1d
 3645 0ef3 01       		.uleb128 0x1
 3646 0ef4 51       		.byte	0x51
 3647 0ef5 02       		.uleb128 0x2
 3648 0ef6 74       		.byte	0x74
 3649 0ef7 00       		.sleb128 0
 3650 0ef8 00       		.byte	0
 3651 0ef9 20       		.uleb128 0x20
 3652 0efa FC000000 		.4byte	.LVL142
 3653 0efe C5130000 		.4byte	0x13c5
 3654 0f02 1D       		.uleb128 0x1d
 3655 0f03 01       		.uleb128 0x1
 3656 0f04 50       		.byte	0x50
 3657 0f05 02       		.uleb128 0x2
 3658 0f06 75       		.byte	0x75
 3659 0f07 00       		.sleb128 0
 3660 0f08 1D       		.uleb128 0x1d
 3661 0f09 01       		.uleb128 0x1
 3662 0f0a 51       		.byte	0x51
 3663 0f0b 02       		.uleb128 0x2
 3664 0f0c 08       		.byte	0x8
 3665 0f0d 55       		.byte	0x55
 3666 0f0e 00       		.byte	0
 3667 0f0f 00       		.byte	0
 3668 0f10 07       		.uleb128 0x7
 3669 0f11 04       		.byte	0x4
 3670 0f12 160F0000 		.4byte	0xf16
 3671 0f16 21       		.uleb128 0x21
 3672 0f17 0B070000 		.4byte	0x70b
 3673 0f1b 1A       		.uleb128 0x1a
 3674 0f1c 53070000 		.4byte	.LASF184
 3675 0f20 01       		.byte	0x1
 3676 0f21 FF07     		.2byte	0x7ff
 3677 0f23 BA000000 		.4byte	0xba
 3678 0f27 00000000 		.4byte	.LFB20
 3679 0f2b 1A000000 		.4byte	.LFE20-.LFB20
 3680 0f2f 01       		.uleb128 0x1
 3681 0f30 9C       		.byte	0x9c
 3682 0f31 660F0000 		.4byte	0xf66
 3683 0f35 17       		.uleb128 0x17
 3684 0f36 02040000 		.4byte	.LASF172
 3685 0f3a 01       		.byte	0x1
 3686 0f3b 0108     		.2byte	0x801
 3687 0f3d BA000000 		.4byte	0xba
 3688 0f41 35070000 		.4byte	.LLST51
 3689 0f45 17       		.uleb128 0x17
 3690 0f46 48080000 		.4byte	.LASF133
 3691 0f4a 01       		.byte	0x1
 3692 0f4b 0208     		.2byte	0x802
 3693 0f4d 99000000 		.4byte	0x99
 3694 0f51 5F070000 		.4byte	.LLST52
 3695 0f55 20       		.uleb128 0x20
 3696 0f56 0E000000 		.4byte	.LVL148
 3697 0f5a 9E0D0000 		.4byte	0xd9e
 3698 0f5e 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 128


 3699 0f5f 01       		.uleb128 0x1
 3700 0f60 50       		.byte	0x50
 3701 0f61 02       		.uleb128 0x2
 3702 0f62 74       		.byte	0x74
 3703 0f63 00       		.sleb128 0
 3704 0f64 00       		.byte	0
 3705 0f65 00       		.byte	0
 3706 0f66 1E       		.uleb128 0x1e
 3707 0f67 510E0000 		.4byte	.LASF185
 3708 0f6b 01       		.byte	0x1
 3709 0f6c 6409     		.2byte	0x964
 3710 0f6e 00000000 		.4byte	.LFB23
 3711 0f72 20000000 		.4byte	.LFE23-.LFB23
 3712 0f76 01       		.uleb128 0x1
 3713 0f77 9C       		.byte	0x9c
 3714 0f78 AD0F0000 		.4byte	0xfad
 3715 0f7c 17       		.uleb128 0x17
 3716 0f7d 48080000 		.4byte	.LASF133
 3717 0f81 01       		.byte	0x1
 3718 0f82 6609     		.2byte	0x966
 3719 0f84 99000000 		.4byte	0x99
 3720 0f88 7E070000 		.4byte	.LLST53
 3721 0f8c 17       		.uleb128 0x17
 3722 0f8d 2F020000 		.4byte	.LASF163
 3723 0f91 01       		.byte	0x1
 3724 0f92 6709     		.2byte	0x967
 3725 0f94 BD0C0000 		.4byte	0xcbd
 3726 0f98 9D070000 		.4byte	.LLST54
 3727 0f9c 20       		.uleb128 0x20
 3728 0f9d 14000000 		.4byte	.LVL156
 3729 0fa1 1E0D0000 		.4byte	0xd1e
 3730 0fa5 1D       		.uleb128 0x1d
 3731 0fa6 01       		.uleb128 0x1
 3732 0fa7 50       		.byte	0x50
 3733 0fa8 02       		.uleb128 0x2
 3734 0fa9 74       		.byte	0x74
 3735 0faa 00       		.sleb128 0
 3736 0fab 00       		.byte	0
 3737 0fac 00       		.byte	0
 3738 0fad 1A       		.uleb128 0x1a
 3739 0fae 47060000 		.4byte	.LASF186
 3740 0fb2 01       		.byte	0x1
 3741 0fb3 840C     		.2byte	0xc84
 3742 0fb5 76000000 		.4byte	0x76
 3743 0fb9 00000000 		.4byte	.LFB28
 3744 0fbd 20000000 		.4byte	.LFE28-.LFB28
 3745 0fc1 01       		.uleb128 0x1
 3746 0fc2 9C       		.byte	0x9c
 3747 0fc3 07100000 		.4byte	0x1007
 3748 0fc7 1B       		.uleb128 0x1b
 3749 0fc8 5D040000 		.4byte	.LASF187
 3750 0fcc 01       		.byte	0x1
 3751 0fcd 840C     		.2byte	0xc84
 3752 0fcf 7C070000 		.4byte	0x77c
 3753 0fd3 B0070000 		.4byte	.LLST55
 3754 0fd7 1B       		.uleb128 0x1b
 3755 0fd8 6F0C0000 		.4byte	.LASF139
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 129


 3756 0fdc 01       		.byte	0x1
 3757 0fdd 840C     		.2byte	0xc84
 3758 0fdf 76000000 		.4byte	0x76
 3759 0fe3 D1070000 		.4byte	.LLST56
 3760 0fe7 17       		.uleb128 0x17
 3761 0fe8 FA0A0000 		.4byte	.LASF162
 3762 0fec 01       		.byte	0x1
 3763 0fed 860C     		.2byte	0xc86
 3764 0fef 76000000 		.4byte	0x76
 3765 0ff3 F2070000 		.4byte	.LLST57
 3766 0ff7 20       		.uleb128 0x20
 3767 0ff8 16000000 		.4byte	.LVL162
 3768 0ffc E7130000 		.4byte	0x13e7
 3769 1000 1D       		.uleb128 0x1d
 3770 1001 01       		.uleb128 0x1
 3771 1002 50       		.byte	0x50
 3772 1003 01       		.uleb128 0x1
 3773 1004 30       		.byte	0x30
 3774 1005 00       		.byte	0
 3775 1006 00       		.byte	0
 3776 1007 1E       		.uleb128 0x1e
 3777 1008 0C070000 		.4byte	.LASF188
 3778 100c 01       		.byte	0x1
 3779 100d D90C     		.2byte	0xcd9
 3780 100f 00000000 		.4byte	.LFB29
 3781 1013 1C000000 		.4byte	.LFE29-.LFB29
 3782 1017 01       		.uleb128 0x1
 3783 1018 9C       		.byte	0x9c
 3784 1019 70100000 		.4byte	0x1070
 3785 101d 1B       		.uleb128 0x1b
 3786 101e CB010000 		.4byte	.LASF189
 3787 1022 01       		.byte	0x1
 3788 1023 D90C     		.2byte	0xcd9
 3789 1025 52060000 		.4byte	0x652
 3790 1029 1D080000 		.4byte	.LLST58
 3791 102d 1B       		.uleb128 0x1b
 3792 102e F4070000 		.4byte	.LASF97
 3793 1032 01       		.byte	0x1
 3794 1033 D90C     		.2byte	0xcd9
 3795 1035 99000000 		.4byte	0x99
 3796 1039 49080000 		.4byte	.LLST59
 3797 103d 1B       		.uleb128 0x1b
 3798 103e 58030000 		.4byte	.LASF190
 3799 1042 01       		.byte	0x1
 3800 1043 D90C     		.2byte	0xcd9
 3801 1045 99000000 		.4byte	0x99
 3802 1049 75080000 		.4byte	.LLST60
 3803 104d 17       		.uleb128 0x17
 3804 104e 14010000 		.4byte	.LASF142
 3805 1052 01       		.byte	0x1
 3806 1053 DB0C     		.2byte	0xcdb
 3807 1055 81000000 		.4byte	0x81
 3808 1059 A1080000 		.4byte	.LLST61
 3809 105d 18       		.uleb128 0x18
 3810 105e 0C000000 		.4byte	.LVL165
 3811 1062 98130000 		.4byte	0x1398
 3812 1066 18       		.uleb128 0x18
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 130


 3813 1067 1A000000 		.4byte	.LVL167
 3814 106b A3130000 		.4byte	0x13a3
 3815 106f 00       		.byte	0
 3816 1070 16       		.uleb128 0x16
 3817 1071 41000000 		.4byte	.LASF191
 3818 1075 01       		.byte	0x1
 3819 1076 B903     		.2byte	0x3b9
 3820 1078 00000000 		.4byte	.LFB9
 3821 107c 18000000 		.4byte	.LFE9-.LFB9
 3822 1080 01       		.uleb128 0x1
 3823 1081 9C       		.byte	0x9c
 3824 1082 B3100000 		.4byte	0x10b3
 3825 1086 1C       		.uleb128 0x1c
 3826 1087 0E000000 		.4byte	.LVL170
 3827 108b 07100000 		.4byte	0x1007
 3828 108f A9100000 		.4byte	0x10a9
 3829 1093 1D       		.uleb128 0x1d
 3830 1094 01       		.uleb128 0x1
 3831 1095 50       		.byte	0x50
 3832 1096 05       		.uleb128 0x5
 3833 1097 0C       		.byte	0xc
 3834 1098 00040240 		.4byte	0x40020400
 3835 109c 1D       		.uleb128 0x1d
 3836 109d 01       		.uleb128 0x1
 3837 109e 51       		.byte	0x51
 3838 109f 03       		.uleb128 0x3
 3839 10a0 0A       		.byte	0xa
 3840 10a1 000F     		.2byte	0xf00
 3841 10a3 1D       		.uleb128 0x1d
 3842 10a4 01       		.uleb128 0x1
 3843 10a5 52       		.byte	0x52
 3844 10a6 01       		.uleb128 0x1
 3845 10a7 30       		.byte	0x30
 3846 10a8 00       		.byte	0
 3847 10a9 18       		.uleb128 0x18
 3848 10aa 12000000 		.4byte	.LVL171
 3849 10ae F2130000 		.4byte	0x13f2
 3850 10b2 00       		.byte	0
 3851 10b3 1E       		.uleb128 0x1e
 3852 10b4 A80C0000 		.4byte	.LASF192
 3853 10b8 01       		.byte	0x1
 3854 10b9 2B04     		.2byte	0x42b
 3855 10bb 00000000 		.4byte	.LFB10
 3856 10bf 3C000000 		.4byte	.LFE10-.LFB10
 3857 10c3 01       		.uleb128 0x1
 3858 10c4 9C       		.byte	0x9c
 3859 10c5 EC100000 		.4byte	0x10ec
 3860 10c9 1B       		.uleb128 0x1b
 3861 10ca 5D040000 		.4byte	.LASF187
 3862 10ce 01       		.byte	0x1
 3863 10cf 2B04     		.2byte	0x42b
 3864 10d1 44020000 		.4byte	0x244
 3865 10d5 B4080000 		.4byte	.LLST62
 3866 10d9 18       		.uleb128 0x18
 3867 10da 14000000 		.4byte	.LVL173
 3868 10de 70100000 		.4byte	0x1070
 3869 10e2 18       		.uleb128 0x18
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 131


 3870 10e3 1C000000 		.4byte	.LVL174
 3871 10e7 FE130000 		.4byte	0x13fe
 3872 10eb 00       		.byte	0
 3873 10ec 1A       		.uleb128 0x1a
 3874 10ed C9080000 		.4byte	.LASF193
 3875 10f1 01       		.byte	0x1
 3876 10f2 C302     		.2byte	0x2c3
 3877 10f4 BA000000 		.4byte	0xba
 3878 10f8 00000000 		.4byte	.LFB7
 3879 10fc 30000000 		.4byte	.LFE7-.LFB7
 3880 1100 01       		.uleb128 0x1
 3881 1101 9C       		.byte	0x9c
 3882 1102 5B110000 		.4byte	0x115b
 3883 1106 1F       		.uleb128 0x1f
 3884 1107 430D0000 		.4byte	.LASF194
 3885 110b 01       		.byte	0x1
 3886 110c C502     		.2byte	0x2c5
 3887 110e BA000000 		.4byte	0xba
 3888 1112 00       		.byte	0
 3889 1113 18       		.uleb128 0x18
 3890 1114 06000000 		.4byte	.LVL176
 3891 1118 DA070000 		.4byte	0x7da
 3892 111c 18       		.uleb128 0x18
 3893 111d 0A000000 		.4byte	.LVL177
 3894 1121 660F0000 		.4byte	0xf66
 3895 1125 1C       		.uleb128 0x1c
 3896 1126 10000000 		.4byte	.LVL178
 3897 112a 3C0A0000 		.4byte	0xa3c
 3898 112e 38110000 		.4byte	0x1138
 3899 1132 1D       		.uleb128 0x1d
 3900 1133 01       		.uleb128 0x1
 3901 1134 50       		.byte	0x50
 3902 1135 01       		.uleb128 0x1
 3903 1136 30       		.byte	0x30
 3904 1137 00       		.byte	0
 3905 1138 1C       		.uleb128 0x1c
 3906 1139 20000000 		.4byte	.LVL179
 3907 113d B3100000 		.4byte	0x10b3
 3908 1141 4B110000 		.4byte	0x114b
 3909 1145 1D       		.uleb128 0x1d
 3910 1146 01       		.uleb128 0x1
 3911 1147 50       		.byte	0x50
 3912 1148 01       		.uleb128 0x1
 3913 1149 30       		.byte	0x30
 3914 114a 00       		.byte	0
 3915 114b 20       		.uleb128 0x20
 3916 114c 26000000 		.4byte	.LVL180
 3917 1150 B3100000 		.4byte	0x10b3
 3918 1154 1D       		.uleb128 0x1d
 3919 1155 01       		.uleb128 0x1
 3920 1156 50       		.byte	0x50
 3921 1157 01       		.uleb128 0x1
 3922 1158 31       		.byte	0x31
 3923 1159 00       		.byte	0
 3924 115a 00       		.byte	0
 3925 115b 1E       		.uleb128 0x1e
 3926 115c 2C050000 		.4byte	.LASF195
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 132


 3927 1160 01       		.byte	0x1
 3928 1161 CD0B     		.2byte	0xbcd
 3929 1163 00000000 		.4byte	.LFB27
 3930 1167 94000000 		.4byte	.LFE27-.LFB27
 3931 116b 01       		.uleb128 0x1
 3932 116c 9C       		.byte	0x9c
 3933 116d 83120000 		.4byte	0x1283
 3934 1171 1B       		.uleb128 0x1b
 3935 1172 87040000 		.4byte	.LASF196
 3936 1176 01       		.byte	0x1
 3937 1177 CD0B     		.2byte	0xbcd
 3938 1179 99000000 		.4byte	0x99
 3939 117d D5080000 		.4byte	.LLST63
 3940 1181 17       		.uleb128 0x17
 3941 1182 C4090000 		.4byte	.LASF197
 3942 1186 01       		.byte	0x1
 3943 1187 D10B     		.2byte	0xbd1
 3944 1189 99000000 		.4byte	0x99
 3945 118d F4080000 		.4byte	.LLST64
 3946 1191 17       		.uleb128 0x17
 3947 1192 BD090000 		.4byte	.LASF198
 3948 1196 01       		.byte	0x1
 3949 1197 D20B     		.2byte	0xbd2
 3950 1199 99000000 		.4byte	0x99
 3951 119d 12090000 		.4byte	.LLST65
 3952 11a1 17       		.uleb128 0x17
 3953 11a2 28010000 		.4byte	.LASF199
 3954 11a6 01       		.byte	0x1
 3955 11a7 D30B     		.2byte	0xbd3
 3956 11a9 99000000 		.4byte	0x99
 3957 11ad 30090000 		.4byte	.LLST66
 3958 11b1 1C       		.uleb128 0x1c
 3959 11b2 3C000000 		.4byte	.LVL188
 3960 11b6 07100000 		.4byte	0x1007
 3961 11ba D1110000 		.4byte	0x11d1
 3962 11be 1D       		.uleb128 0x1d
 3963 11bf 01       		.uleb128 0x1
 3964 11c0 50       		.byte	0x50
 3965 11c1 02       		.uleb128 0x2
 3966 11c2 74       		.byte	0x74
 3967 11c3 00       		.sleb128 0
 3968 11c4 1D       		.uleb128 0x1d
 3969 11c5 01       		.uleb128 0x1
 3970 11c6 51       		.byte	0x51
 3971 11c7 03       		.uleb128 0x3
 3972 11c8 0A       		.byte	0xa
 3973 11c9 000F     		.2byte	0xf00
 3974 11cb 1D       		.uleb128 0x1d
 3975 11cc 01       		.uleb128 0x1
 3976 11cd 52       		.byte	0x52
 3977 11ce 01       		.uleb128 0x1
 3978 11cf 30       		.byte	0x30
 3979 11d0 00       		.byte	0
 3980 11d1 1C       		.uleb128 0x1c
 3981 11d2 46000000 		.4byte	.LVL189
 3982 11d6 07100000 		.4byte	0x1007
 3983 11da EF110000 		.4byte	0x11ef
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 133


 3984 11de 1D       		.uleb128 0x1d
 3985 11df 01       		.uleb128 0x1
 3986 11e0 50       		.byte	0x50
 3987 11e1 02       		.uleb128 0x2
 3988 11e2 76       		.byte	0x76
 3989 11e3 00       		.sleb128 0
 3990 11e4 1D       		.uleb128 0x1d
 3991 11e5 01       		.uleb128 0x1
 3992 11e6 51       		.byte	0x51
 3993 11e7 01       		.uleb128 0x1
 3994 11e8 34       		.byte	0x34
 3995 11e9 1D       		.uleb128 0x1d
 3996 11ea 01       		.uleb128 0x1
 3997 11eb 52       		.byte	0x52
 3998 11ec 01       		.uleb128 0x1
 3999 11ed 30       		.byte	0x30
 4000 11ee 00       		.byte	0
 4001 11ef 1C       		.uleb128 0x1c
 4002 11f0 52000000 		.4byte	.LVL190
 4003 11f4 07100000 		.4byte	0x1007
 4004 11f8 10120000 		.4byte	0x1210
 4005 11fc 1D       		.uleb128 0x1d
 4006 11fd 01       		.uleb128 0x1
 4007 11fe 50       		.byte	0x50
 4008 11ff 02       		.uleb128 0x2
 4009 1200 75       		.byte	0x75
 4010 1201 00       		.sleb128 0
 4011 1202 1D       		.uleb128 0x1d
 4012 1203 01       		.uleb128 0x1
 4013 1204 51       		.byte	0x51
 4014 1205 02       		.uleb128 0x2
 4015 1206 77       		.byte	0x77
 4016 1207 00       		.sleb128 0
 4017 1208 1D       		.uleb128 0x1d
 4018 1209 01       		.uleb128 0x1
 4019 120a 52       		.byte	0x52
 4020 120b 03       		.uleb128 0x3
 4021 120c 0A       		.byte	0xa
 4022 120d 8001     		.2byte	0x180
 4023 120f 00       		.byte	0
 4024 1210 1C       		.uleb128 0x1c
 4025 1211 5A000000 		.4byte	.LVL191
 4026 1215 0A140000 		.4byte	0x140a
 4027 1219 26120000 		.4byte	0x1226
 4028 121d 1D       		.uleb128 0x1d
 4029 121e 01       		.uleb128 0x1
 4030 121f 50       		.byte	0x50
 4031 1220 04       		.uleb128 0x4
 4032 1221 7D       		.byte	0x7d
 4033 1222 04       		.sleb128 4
 4034 1223 94       		.byte	0x94
 4035 1224 02       		.byte	0x2
 4036 1225 00       		.byte	0
 4037 1226 1C       		.uleb128 0x1c
 4038 1227 64000000 		.4byte	.LVL192
 4039 122b 07100000 		.4byte	0x1007
 4040 122f 46120000 		.4byte	0x1246
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 134


 4041 1233 1D       		.uleb128 0x1d
 4042 1234 01       		.uleb128 0x1
 4043 1235 50       		.byte	0x50
 4044 1236 02       		.uleb128 0x2
 4045 1237 75       		.byte	0x75
 4046 1238 00       		.sleb128 0
 4047 1239 1D       		.uleb128 0x1d
 4048 123a 01       		.uleb128 0x1
 4049 123b 51       		.byte	0x51
 4050 123c 02       		.uleb128 0x2
 4051 123d 77       		.byte	0x77
 4052 123e 00       		.sleb128 0
 4053 123f 1D       		.uleb128 0x1d
 4054 1240 01       		.uleb128 0x1
 4055 1241 52       		.byte	0x52
 4056 1242 02       		.uleb128 0x2
 4057 1243 7B       		.byte	0x7b
 4058 1244 00       		.sleb128 0
 4059 1245 00       		.byte	0
 4060 1246 1C       		.uleb128 0x1c
 4061 1247 6E000000 		.4byte	.LVL193
 4062 124b 07100000 		.4byte	0x1007
 4063 124f 65120000 		.4byte	0x1265
 4064 1253 1D       		.uleb128 0x1d
 4065 1254 01       		.uleb128 0x1
 4066 1255 50       		.byte	0x50
 4067 1256 02       		.uleb128 0x2
 4068 1257 76       		.byte	0x76
 4069 1258 00       		.sleb128 0
 4070 1259 1D       		.uleb128 0x1d
 4071 125a 01       		.uleb128 0x1
 4072 125b 51       		.byte	0x51
 4073 125c 01       		.uleb128 0x1
 4074 125d 34       		.byte	0x34
 4075 125e 1D       		.uleb128 0x1d
 4076 125f 01       		.uleb128 0x1
 4077 1260 52       		.byte	0x52
 4078 1261 02       		.uleb128 0x2
 4079 1262 79       		.byte	0x79
 4080 1263 00       		.sleb128 0
 4081 1264 00       		.byte	0
 4082 1265 20       		.uleb128 0x20
 4083 1266 7A000000 		.4byte	.LVL194
 4084 126a 07100000 		.4byte	0x1007
 4085 126e 1D       		.uleb128 0x1d
 4086 126f 01       		.uleb128 0x1
 4087 1270 50       		.byte	0x50
 4088 1271 02       		.uleb128 0x2
 4089 1272 74       		.byte	0x74
 4090 1273 00       		.sleb128 0
 4091 1274 1D       		.uleb128 0x1d
 4092 1275 01       		.uleb128 0x1
 4093 1276 51       		.byte	0x51
 4094 1277 03       		.uleb128 0x3
 4095 1278 0A       		.byte	0xa
 4096 1279 000F     		.2byte	0xf00
 4097 127b 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 135


 4098 127c 01       		.uleb128 0x1
 4099 127d 52       		.byte	0x52
 4100 127e 02       		.uleb128 0x2
 4101 127f 78       		.byte	0x78
 4102 1280 00       		.sleb128 0
 4103 1281 00       		.byte	0
 4104 1282 00       		.byte	0
 4105 1283 26       		.uleb128 0x26
 4106 1284 34070000 		.4byte	.LASF200
 4107 1288 07       		.byte	0x7
 4108 1289 5304     		.2byte	0x453
 4109 128b C7050000 		.4byte	0x5c7
 4110 128f 26       		.uleb128 0x26
 4111 1290 020A0000 		.4byte	.LASF201
 4112 1294 07       		.byte	0x7
 4113 1295 5404     		.2byte	0x454
 4114 1297 9B120000 		.4byte	0x129b
 4115 129b 21       		.uleb128 0x21
 4116 129c 3E070000 		.4byte	0x73e
 4117 12a0 0D       		.uleb128 0xd
 4118 12a1 370A0000 		.4byte	0xa37
 4119 12a5 B0120000 		.4byte	0x12b0
 4120 12a9 0E       		.uleb128 0xe
 4121 12aa 04030000 		.4byte	0x304
 4122 12ae 1F       		.byte	0x1f
 4123 12af 00       		.byte	0
 4124 12b0 26       		.uleb128 0x26
 4125 12b1 4E0D0000 		.4byte	.LASF202
 4126 12b5 07       		.byte	0x7
 4127 12b6 5504     		.2byte	0x455
 4128 12b8 BC120000 		.4byte	0x12bc
 4129 12bc 21       		.uleb128 0x21
 4130 12bd A0120000 		.4byte	0x12a0
 4131 12c1 27       		.uleb128 0x27
 4132 12c2 73000000 		.4byte	.LASF203
 4133 12c6 01       		.byte	0x1
 4134 12c7 BC       		.byte	0xbc
 4135 12c8 D2000000 		.4byte	0xd2
 4136 12cc 05       		.uleb128 0x5
 4137 12cd 03       		.byte	0x3
 4138 12ce 00000000 		.4byte	CapSense_widgetIndex
 4139 12d2 27       		.uleb128 0x27
 4140 12d3 DE020000 		.4byte	.LASF204
 4141 12d7 01       		.byte	0x1
 4142 12d8 BD       		.byte	0xbd
 4143 12d9 D2000000 		.4byte	0xd2
 4144 12dd 05       		.uleb128 0x5
 4145 12de 03       		.byte	0x3
 4146 12df 00000000 		.4byte	CapSense_sensorIndex
 4147 12e3 27       		.uleb128 0x27
 4148 12e4 330E0000 		.4byte	.LASF205
 4149 12e8 01       		.byte	0x1
 4150 12e9 BE       		.byte	0xbe
 4151 12ea 81000000 		.4byte	0x81
 4152 12ee 05       		.uleb128 0x5
 4153 12ef 03       		.byte	0x3
 4154 12f0 00000000 		.4byte	CapSense_requestScanAllWidget
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 136


 4155 12f4 27       		.uleb128 0x27
 4156 12f5 DC0C0000 		.4byte	.LASF206
 4157 12f9 01       		.byte	0x1
 4158 12fa C1       		.byte	0xc1
 4159 12fb F9060000 		.4byte	0x6f9
 4160 12ff 05       		.uleb128 0x5
 4161 1300 03       		.byte	0x3
 4162 1301 00000000 		.4byte	CapSense_curRamSnsPtr
 4163 1305 27       		.uleb128 0x27
 4164 1306 B30A0000 		.4byte	.LASF207
 4165 130a 01       		.byte	0x1
 4166 130b AF       		.byte	0xaf
 4167 130c 44020000 		.4byte	0x244
 4168 1310 05       		.uleb128 0x5
 4169 1311 03       		.byte	0x3
 4170 1312 00000000 		.4byte	CapSense_currentSenseMethod
 4171 1316 27       		.uleb128 0x27
 4172 1317 FE0C0000 		.4byte	.LASF208
 4173 131b 01       		.byte	0x1
 4174 131c B8       		.byte	0xb8
 4175 131d 27130000 		.4byte	0x1327
 4176 1321 05       		.uleb128 0x5
 4177 1322 03       		.byte	0x3
 4178 1323 00000000 		.4byte	CapSense_scanFreqIndex
 4179 1327 21       		.uleb128 0x21
 4180 1328 81000000 		.4byte	0x81
 4181 132c 27       		.uleb128 0x27
 4182 132d DF070000 		.4byte	.LASF209
 4183 1331 01       		.byte	0x1
 4184 1332 D0       		.byte	0xd0
 4185 1333 310A0000 		.4byte	0xa31
 4186 1337 05       		.uleb128 0x5
 4187 1338 03       		.byte	0x3
 4188 1339 00000000 		.4byte	CapSense_curSnsIOPtr
 4189 133d 0D       		.uleb128 0xd
 4190 133e 4D130000 		.4byte	0x134d
 4191 1342 4D130000 		.4byte	0x134d
 4192 1346 0E       		.uleb128 0xe
 4193 1347 04030000 		.4byte	0x304
 4194 134b 01       		.byte	0x1
 4195 134c 00       		.byte	0
 4196 134d 21       		.uleb128 0x21
 4197 134e A8070000 		.4byte	0x7a8
 4198 1352 27       		.uleb128 0x27
 4199 1353 750E0000 		.4byte	.LASF210
 4200 1357 01       		.byte	0x1
 4201 1358 D2       		.byte	0xd2
 4202 1359 63130000 		.4byte	0x1363
 4203 135d 05       		.uleb128 0x5
 4204 135e 03       		.byte	0x3
 4205 135f 00000000 		.4byte	CapSense_idacGainTable
 4206 1363 21       		.uleb128 0x21
 4207 1364 3D130000 		.4byte	0x133d
 4208 1368 28       		.uleb128 0x28
 4209 1369 9E020000 		.4byte	.LASF211
 4210 136d 9E020000 		.4byte	.LASF211
 4211 1371 09       		.byte	0x9
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 137


 4212 1372 8801     		.2byte	0x188
 4213 1374 28       		.uleb128 0x28
 4214 1375 410C0000 		.4byte	.LASF212
 4215 1379 410C0000 		.4byte	.LASF212
 4216 137d 09       		.byte	0x9
 4217 137e 8A01     		.2byte	0x18a
 4218 1380 28       		.uleb128 0x28
 4219 1381 3D030000 		.4byte	.LASF213
 4220 1385 3D030000 		.4byte	.LASF213
 4221 1389 09       		.byte	0x9
 4222 138a 8901     		.2byte	0x189
 4223 138c 28       		.uleb128 0x28
 4224 138d 1D0A0000 		.4byte	.LASF214
 4225 1391 1D0A0000 		.4byte	.LASF214
 4226 1395 09       		.byte	0x9
 4227 1396 8B01     		.2byte	0x18b
 4228 1398 29       		.uleb128 0x29
 4229 1399 C50C0000 		.4byte	.LASF215
 4230 139d C50C0000 		.4byte	.LASF215
 4231 13a1 0A       		.byte	0xa
 4232 13a2 F8       		.byte	0xf8
 4233 13a3 29       		.uleb128 0x29
 4234 13a4 0E050000 		.4byte	.LASF216
 4235 13a8 0E050000 		.4byte	.LASF216
 4236 13ac 0A       		.byte	0xa
 4237 13ad F9       		.byte	0xf9
 4238 13ae 28       		.uleb128 0x28
 4239 13af 800A0000 		.4byte	.LASF217
 4240 13b3 800A0000 		.4byte	.LASF217
 4241 13b7 09       		.byte	0x9
 4242 13b8 9101     		.2byte	0x191
 4243 13ba 29       		.uleb128 0x29
 4244 13bb 0E0B0000 		.4byte	.LASF218
 4245 13bf 0E0B0000 		.4byte	.LASF218
 4246 13c3 0B       		.byte	0xb
 4247 13c4 18       		.byte	0x18
 4248 13c5 28       		.uleb128 0x28
 4249 13c6 CE090000 		.4byte	.LASF219
 4250 13ca CE090000 		.4byte	.LASF219
 4251 13ce 09       		.byte	0x9
 4252 13cf 8E01     		.2byte	0x18e
 4253 13d1 29       		.uleb128 0x29
 4254 13d2 3C0A0000 		.4byte	.LASF220
 4255 13d6 3C0A0000 		.4byte	.LASF220
 4256 13da 06       		.byte	0x6
 4257 13db B7       		.byte	0xb7
 4258 13dc 29       		.uleb128 0x29
 4259 13dd 51010000 		.4byte	.LASF221
 4260 13e1 51010000 		.4byte	.LASF221
 4261 13e5 06       		.byte	0x6
 4262 13e6 B8       		.byte	0xb8
 4263 13e7 29       		.uleb128 0x29
 4264 13e8 F2000000 		.4byte	.LASF222
 4265 13ec F2000000 		.4byte	.LASF222
 4266 13f0 0A       		.byte	0xa
 4267 13f1 FA       		.byte	0xfa
 4268 13f2 28       		.uleb128 0x28
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 138


 4269 13f3 F6080000 		.4byte	.LASF223
 4270 13f7 F6080000 		.4byte	.LASF223
 4271 13fb 09       		.byte	0x9
 4272 13fc A501     		.2byte	0x1a5
 4273 13fe 28       		.uleb128 0x28
 4274 13ff 8F060000 		.4byte	.LASF224
 4275 1403 8F060000 		.4byte	.LASF224
 4276 1407 09       		.byte	0x9
 4277 1408 A101     		.2byte	0x1a1
 4278 140a 29       		.uleb128 0x29
 4279 140b 32080000 		.4byte	.LASF225
 4280 140f 32080000 		.4byte	.LASF225
 4281 1413 0A       		.byte	0xa
 4282 1414 ED       		.byte	0xed
 4283 1415 00       		.byte	0
 4284              		.section	.debug_abbrev,"",%progbits
 4285              	.Ldebug_abbrev0:
 4286 0000 01       		.uleb128 0x1
 4287 0001 11       		.uleb128 0x11
 4288 0002 01       		.byte	0x1
 4289 0003 25       		.uleb128 0x25
 4290 0004 0E       		.uleb128 0xe
 4291 0005 13       		.uleb128 0x13
 4292 0006 0B       		.uleb128 0xb
 4293 0007 03       		.uleb128 0x3
 4294 0008 0E       		.uleb128 0xe
 4295 0009 1B       		.uleb128 0x1b
 4296 000a 0E       		.uleb128 0xe
 4297 000b 55       		.uleb128 0x55
 4298 000c 17       		.uleb128 0x17
 4299 000d 11       		.uleb128 0x11
 4300 000e 01       		.uleb128 0x1
 4301 000f 10       		.uleb128 0x10
 4302 0010 17       		.uleb128 0x17
 4303 0011 00       		.byte	0
 4304 0012 00       		.byte	0
 4305 0013 02       		.uleb128 0x2
 4306 0014 24       		.uleb128 0x24
 4307 0015 00       		.byte	0
 4308 0016 0B       		.uleb128 0xb
 4309 0017 0B       		.uleb128 0xb
 4310 0018 3E       		.uleb128 0x3e
 4311 0019 0B       		.uleb128 0xb
 4312 001a 03       		.uleb128 0x3
 4313 001b 0E       		.uleb128 0xe
 4314 001c 00       		.byte	0
 4315 001d 00       		.byte	0
 4316 001e 03       		.uleb128 0x3
 4317 001f 16       		.uleb128 0x16
 4318 0020 00       		.byte	0
 4319 0021 03       		.uleb128 0x3
 4320 0022 0E       		.uleb128 0xe
 4321 0023 3A       		.uleb128 0x3a
 4322 0024 0B       		.uleb128 0xb
 4323 0025 3B       		.uleb128 0x3b
 4324 0026 0B       		.uleb128 0xb
 4325 0027 49       		.uleb128 0x49
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 139


 4326 0028 13       		.uleb128 0x13
 4327 0029 00       		.byte	0
 4328 002a 00       		.byte	0
 4329 002b 04       		.uleb128 0x4
 4330 002c 24       		.uleb128 0x24
 4331 002d 00       		.byte	0
 4332 002e 0B       		.uleb128 0xb
 4333 002f 0B       		.uleb128 0xb
 4334 0030 3E       		.uleb128 0x3e
 4335 0031 0B       		.uleb128 0xb
 4336 0032 03       		.uleb128 0x3
 4337 0033 08       		.uleb128 0x8
 4338 0034 00       		.byte	0
 4339 0035 00       		.byte	0
 4340 0036 05       		.uleb128 0x5
 4341 0037 16       		.uleb128 0x16
 4342 0038 00       		.byte	0
 4343 0039 03       		.uleb128 0x3
 4344 003a 0E       		.uleb128 0xe
 4345 003b 3A       		.uleb128 0x3a
 4346 003c 0B       		.uleb128 0xb
 4347 003d 3B       		.uleb128 0x3b
 4348 003e 05       		.uleb128 0x5
 4349 003f 49       		.uleb128 0x49
 4350 0040 13       		.uleb128 0x13
 4351 0041 00       		.byte	0
 4352 0042 00       		.byte	0
 4353 0043 06       		.uleb128 0x6
 4354 0044 35       		.uleb128 0x35
 4355 0045 00       		.byte	0
 4356 0046 49       		.uleb128 0x49
 4357 0047 13       		.uleb128 0x13
 4358 0048 00       		.byte	0
 4359 0049 00       		.byte	0
 4360 004a 07       		.uleb128 0x7
 4361 004b 0F       		.uleb128 0xf
 4362 004c 00       		.byte	0
 4363 004d 0B       		.uleb128 0xb
 4364 004e 0B       		.uleb128 0xb
 4365 004f 49       		.uleb128 0x49
 4366 0050 13       		.uleb128 0x13
 4367 0051 00       		.byte	0
 4368 0052 00       		.byte	0
 4369 0053 08       		.uleb128 0x8
 4370 0054 15       		.uleb128 0x15
 4371 0055 00       		.byte	0
 4372 0056 27       		.uleb128 0x27
 4373 0057 19       		.uleb128 0x19
 4374 0058 00       		.byte	0
 4375 0059 00       		.byte	0
 4376 005a 09       		.uleb128 0x9
 4377 005b 13       		.uleb128 0x13
 4378 005c 01       		.byte	0x1
 4379 005d 0B       		.uleb128 0xb
 4380 005e 0B       		.uleb128 0xb
 4381 005f 3A       		.uleb128 0x3a
 4382 0060 0B       		.uleb128 0xb
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 140


 4383 0061 3B       		.uleb128 0x3b
 4384 0062 0B       		.uleb128 0xb
 4385 0063 01       		.uleb128 0x1
 4386 0064 13       		.uleb128 0x13
 4387 0065 00       		.byte	0
 4388 0066 00       		.byte	0
 4389 0067 0A       		.uleb128 0xa
 4390 0068 0D       		.uleb128 0xd
 4391 0069 00       		.byte	0
 4392 006a 03       		.uleb128 0x3
 4393 006b 0E       		.uleb128 0xe
 4394 006c 3A       		.uleb128 0x3a
 4395 006d 0B       		.uleb128 0xb
 4396 006e 3B       		.uleb128 0x3b
 4397 006f 0B       		.uleb128 0xb
 4398 0070 49       		.uleb128 0x49
 4399 0071 13       		.uleb128 0x13
 4400 0072 38       		.uleb128 0x38
 4401 0073 0B       		.uleb128 0xb
 4402 0074 00       		.byte	0
 4403 0075 00       		.byte	0
 4404 0076 0B       		.uleb128 0xb
 4405 0077 04       		.uleb128 0x4
 4406 0078 01       		.byte	0x1
 4407 0079 0B       		.uleb128 0xb
 4408 007a 0B       		.uleb128 0xb
 4409 007b 49       		.uleb128 0x49
 4410 007c 13       		.uleb128 0x13
 4411 007d 3A       		.uleb128 0x3a
 4412 007e 0B       		.uleb128 0xb
 4413 007f 3B       		.uleb128 0x3b
 4414 0080 0B       		.uleb128 0xb
 4415 0081 01       		.uleb128 0x1
 4416 0082 13       		.uleb128 0x13
 4417 0083 00       		.byte	0
 4418 0084 00       		.byte	0
 4419 0085 0C       		.uleb128 0xc
 4420 0086 28       		.uleb128 0x28
 4421 0087 00       		.byte	0
 4422 0088 03       		.uleb128 0x3
 4423 0089 0E       		.uleb128 0xe
 4424 008a 1C       		.uleb128 0x1c
 4425 008b 0B       		.uleb128 0xb
 4426 008c 00       		.byte	0
 4427 008d 00       		.byte	0
 4428 008e 0D       		.uleb128 0xd
 4429 008f 01       		.uleb128 0x1
 4430 0090 01       		.byte	0x1
 4431 0091 49       		.uleb128 0x49
 4432 0092 13       		.uleb128 0x13
 4433 0093 01       		.uleb128 0x1
 4434 0094 13       		.uleb128 0x13
 4435 0095 00       		.byte	0
 4436 0096 00       		.byte	0
 4437 0097 0E       		.uleb128 0xe
 4438 0098 21       		.uleb128 0x21
 4439 0099 00       		.byte	0
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 141


 4440 009a 49       		.uleb128 0x49
 4441 009b 13       		.uleb128 0x13
 4442 009c 2F       		.uleb128 0x2f
 4443 009d 0B       		.uleb128 0xb
 4444 009e 00       		.byte	0
 4445 009f 00       		.byte	0
 4446 00a0 0F       		.uleb128 0xf
 4447 00a1 0D       		.uleb128 0xd
 4448 00a2 00       		.byte	0
 4449 00a3 03       		.uleb128 0x3
 4450 00a4 0E       		.uleb128 0xe
 4451 00a5 3A       		.uleb128 0x3a
 4452 00a6 0B       		.uleb128 0xb
 4453 00a7 3B       		.uleb128 0x3b
 4454 00a8 05       		.uleb128 0x5
 4455 00a9 49       		.uleb128 0x49
 4456 00aa 13       		.uleb128 0x13
 4457 00ab 38       		.uleb128 0x38
 4458 00ac 0B       		.uleb128 0xb
 4459 00ad 00       		.byte	0
 4460 00ae 00       		.byte	0
 4461 00af 10       		.uleb128 0x10
 4462 00b0 13       		.uleb128 0x13
 4463 00b1 01       		.byte	0x1
 4464 00b2 0B       		.uleb128 0xb
 4465 00b3 0B       		.uleb128 0xb
 4466 00b4 3A       		.uleb128 0x3a
 4467 00b5 0B       		.uleb128 0xb
 4468 00b6 3B       		.uleb128 0x3b
 4469 00b7 05       		.uleb128 0x5
 4470 00b8 01       		.uleb128 0x1
 4471 00b9 13       		.uleb128 0x13
 4472 00ba 00       		.byte	0
 4473 00bb 00       		.byte	0
 4474 00bc 11       		.uleb128 0x11
 4475 00bd 0D       		.uleb128 0xd
 4476 00be 00       		.byte	0
 4477 00bf 03       		.uleb128 0x3
 4478 00c0 08       		.uleb128 0x8
 4479 00c1 3A       		.uleb128 0x3a
 4480 00c2 0B       		.uleb128 0xb
 4481 00c3 3B       		.uleb128 0x3b
 4482 00c4 05       		.uleb128 0x5
 4483 00c5 49       		.uleb128 0x49
 4484 00c6 13       		.uleb128 0x13
 4485 00c7 38       		.uleb128 0x38
 4486 00c8 0B       		.uleb128 0xb
 4487 00c9 00       		.byte	0
 4488 00ca 00       		.byte	0
 4489 00cb 12       		.uleb128 0x12
 4490 00cc 13       		.uleb128 0x13
 4491 00cd 01       		.byte	0x1
 4492 00ce 0B       		.uleb128 0xb
 4493 00cf 05       		.uleb128 0x5
 4494 00d0 3A       		.uleb128 0x3a
 4495 00d1 0B       		.uleb128 0xb
 4496 00d2 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 142


 4497 00d3 05       		.uleb128 0x5
 4498 00d4 01       		.uleb128 0x1
 4499 00d5 13       		.uleb128 0x13
 4500 00d6 00       		.byte	0
 4501 00d7 00       		.byte	0
 4502 00d8 13       		.uleb128 0x13
 4503 00d9 0D       		.uleb128 0xd
 4504 00da 00       		.byte	0
 4505 00db 03       		.uleb128 0x3
 4506 00dc 0E       		.uleb128 0xe
 4507 00dd 3A       		.uleb128 0x3a
 4508 00de 0B       		.uleb128 0xb
 4509 00df 3B       		.uleb128 0x3b
 4510 00e0 05       		.uleb128 0x5
 4511 00e1 49       		.uleb128 0x49
 4512 00e2 13       		.uleb128 0x13
 4513 00e3 38       		.uleb128 0x38
 4514 00e4 05       		.uleb128 0x5
 4515 00e5 00       		.byte	0
 4516 00e6 00       		.byte	0
 4517 00e7 14       		.uleb128 0x14
 4518 00e8 26       		.uleb128 0x26
 4519 00e9 00       		.byte	0
 4520 00ea 00       		.byte	0
 4521 00eb 00       		.byte	0
 4522 00ec 15       		.uleb128 0x15
 4523 00ed 0F       		.uleb128 0xf
 4524 00ee 00       		.byte	0
 4525 00ef 0B       		.uleb128 0xb
 4526 00f0 0B       		.uleb128 0xb
 4527 00f1 00       		.byte	0
 4528 00f2 00       		.byte	0
 4529 00f3 16       		.uleb128 0x16
 4530 00f4 2E       		.uleb128 0x2e
 4531 00f5 01       		.byte	0x1
 4532 00f6 03       		.uleb128 0x3
 4533 00f7 0E       		.uleb128 0xe
 4534 00f8 3A       		.uleb128 0x3a
 4535 00f9 0B       		.uleb128 0xb
 4536 00fa 3B       		.uleb128 0x3b
 4537 00fb 05       		.uleb128 0x5
 4538 00fc 27       		.uleb128 0x27
 4539 00fd 19       		.uleb128 0x19
 4540 00fe 11       		.uleb128 0x11
 4541 00ff 01       		.uleb128 0x1
 4542 0100 12       		.uleb128 0x12
 4543 0101 06       		.uleb128 0x6
 4544 0102 40       		.uleb128 0x40
 4545 0103 18       		.uleb128 0x18
 4546 0104 9742     		.uleb128 0x2117
 4547 0106 19       		.uleb128 0x19
 4548 0107 01       		.uleb128 0x1
 4549 0108 13       		.uleb128 0x13
 4550 0109 00       		.byte	0
 4551 010a 00       		.byte	0
 4552 010b 17       		.uleb128 0x17
 4553 010c 34       		.uleb128 0x34
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 143


 4554 010d 00       		.byte	0
 4555 010e 03       		.uleb128 0x3
 4556 010f 0E       		.uleb128 0xe
 4557 0110 3A       		.uleb128 0x3a
 4558 0111 0B       		.uleb128 0xb
 4559 0112 3B       		.uleb128 0x3b
 4560 0113 05       		.uleb128 0x5
 4561 0114 49       		.uleb128 0x49
 4562 0115 13       		.uleb128 0x13
 4563 0116 02       		.uleb128 0x2
 4564 0117 17       		.uleb128 0x17
 4565 0118 00       		.byte	0
 4566 0119 00       		.byte	0
 4567 011a 18       		.uleb128 0x18
 4568 011b 898201   		.uleb128 0x4109
 4569 011e 00       		.byte	0
 4570 011f 11       		.uleb128 0x11
 4571 0120 01       		.uleb128 0x1
 4572 0121 31       		.uleb128 0x31
 4573 0122 13       		.uleb128 0x13
 4574 0123 00       		.byte	0
 4575 0124 00       		.byte	0
 4576 0125 19       		.uleb128 0x19
 4577 0126 2E       		.uleb128 0x2e
 4578 0127 00       		.byte	0
 4579 0128 3F       		.uleb128 0x3f
 4580 0129 19       		.uleb128 0x19
 4581 012a 03       		.uleb128 0x3
 4582 012b 0E       		.uleb128 0xe
 4583 012c 3A       		.uleb128 0x3a
 4584 012d 0B       		.uleb128 0xb
 4585 012e 3B       		.uleb128 0x3b
 4586 012f 0B       		.uleb128 0xb
 4587 0130 27       		.uleb128 0x27
 4588 0131 19       		.uleb128 0x19
 4589 0132 49       		.uleb128 0x49
 4590 0133 13       		.uleb128 0x13
 4591 0134 11       		.uleb128 0x11
 4592 0135 01       		.uleb128 0x1
 4593 0136 12       		.uleb128 0x12
 4594 0137 06       		.uleb128 0x6
 4595 0138 40       		.uleb128 0x40
 4596 0139 18       		.uleb128 0x18
 4597 013a 9742     		.uleb128 0x2117
 4598 013c 19       		.uleb128 0x19
 4599 013d 00       		.byte	0
 4600 013e 00       		.byte	0
 4601 013f 1A       		.uleb128 0x1a
 4602 0140 2E       		.uleb128 0x2e
 4603 0141 01       		.byte	0x1
 4604 0142 3F       		.uleb128 0x3f
 4605 0143 19       		.uleb128 0x19
 4606 0144 03       		.uleb128 0x3
 4607 0145 0E       		.uleb128 0xe
 4608 0146 3A       		.uleb128 0x3a
 4609 0147 0B       		.uleb128 0xb
 4610 0148 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 144


 4611 0149 05       		.uleb128 0x5
 4612 014a 27       		.uleb128 0x27
 4613 014b 19       		.uleb128 0x19
 4614 014c 49       		.uleb128 0x49
 4615 014d 13       		.uleb128 0x13
 4616 014e 11       		.uleb128 0x11
 4617 014f 01       		.uleb128 0x1
 4618 0150 12       		.uleb128 0x12
 4619 0151 06       		.uleb128 0x6
 4620 0152 40       		.uleb128 0x40
 4621 0153 18       		.uleb128 0x18
 4622 0154 9742     		.uleb128 0x2117
 4623 0156 19       		.uleb128 0x19
 4624 0157 01       		.uleb128 0x1
 4625 0158 13       		.uleb128 0x13
 4626 0159 00       		.byte	0
 4627 015a 00       		.byte	0
 4628 015b 1B       		.uleb128 0x1b
 4629 015c 05       		.uleb128 0x5
 4630 015d 00       		.byte	0
 4631 015e 03       		.uleb128 0x3
 4632 015f 0E       		.uleb128 0xe
 4633 0160 3A       		.uleb128 0x3a
 4634 0161 0B       		.uleb128 0xb
 4635 0162 3B       		.uleb128 0x3b
 4636 0163 05       		.uleb128 0x5
 4637 0164 49       		.uleb128 0x49
 4638 0165 13       		.uleb128 0x13
 4639 0166 02       		.uleb128 0x2
 4640 0167 17       		.uleb128 0x17
 4641 0168 00       		.byte	0
 4642 0169 00       		.byte	0
 4643 016a 1C       		.uleb128 0x1c
 4644 016b 898201   		.uleb128 0x4109
 4645 016e 01       		.byte	0x1
 4646 016f 11       		.uleb128 0x11
 4647 0170 01       		.uleb128 0x1
 4648 0171 31       		.uleb128 0x31
 4649 0172 13       		.uleb128 0x13
 4650 0173 01       		.uleb128 0x1
 4651 0174 13       		.uleb128 0x13
 4652 0175 00       		.byte	0
 4653 0176 00       		.byte	0
 4654 0177 1D       		.uleb128 0x1d
 4655 0178 8A8201   		.uleb128 0x410a
 4656 017b 00       		.byte	0
 4657 017c 02       		.uleb128 0x2
 4658 017d 18       		.uleb128 0x18
 4659 017e 9142     		.uleb128 0x2111
 4660 0180 18       		.uleb128 0x18
 4661 0181 00       		.byte	0
 4662 0182 00       		.byte	0
 4663 0183 1E       		.uleb128 0x1e
 4664 0184 2E       		.uleb128 0x2e
 4665 0185 01       		.byte	0x1
 4666 0186 3F       		.uleb128 0x3f
 4667 0187 19       		.uleb128 0x19
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 145


 4668 0188 03       		.uleb128 0x3
 4669 0189 0E       		.uleb128 0xe
 4670 018a 3A       		.uleb128 0x3a
 4671 018b 0B       		.uleb128 0xb
 4672 018c 3B       		.uleb128 0x3b
 4673 018d 05       		.uleb128 0x5
 4674 018e 27       		.uleb128 0x27
 4675 018f 19       		.uleb128 0x19
 4676 0190 11       		.uleb128 0x11
 4677 0191 01       		.uleb128 0x1
 4678 0192 12       		.uleb128 0x12
 4679 0193 06       		.uleb128 0x6
 4680 0194 40       		.uleb128 0x40
 4681 0195 18       		.uleb128 0x18
 4682 0196 9742     		.uleb128 0x2117
 4683 0198 19       		.uleb128 0x19
 4684 0199 01       		.uleb128 0x1
 4685 019a 13       		.uleb128 0x13
 4686 019b 00       		.byte	0
 4687 019c 00       		.byte	0
 4688 019d 1F       		.uleb128 0x1f
 4689 019e 34       		.uleb128 0x34
 4690 019f 00       		.byte	0
 4691 01a0 03       		.uleb128 0x3
 4692 01a1 0E       		.uleb128 0xe
 4693 01a2 3A       		.uleb128 0x3a
 4694 01a3 0B       		.uleb128 0xb
 4695 01a4 3B       		.uleb128 0x3b
 4696 01a5 05       		.uleb128 0x5
 4697 01a6 49       		.uleb128 0x49
 4698 01a7 13       		.uleb128 0x13
 4699 01a8 1C       		.uleb128 0x1c
 4700 01a9 0B       		.uleb128 0xb
 4701 01aa 00       		.byte	0
 4702 01ab 00       		.byte	0
 4703 01ac 20       		.uleb128 0x20
 4704 01ad 898201   		.uleb128 0x4109
 4705 01b0 01       		.byte	0x1
 4706 01b1 11       		.uleb128 0x11
 4707 01b2 01       		.uleb128 0x1
 4708 01b3 31       		.uleb128 0x31
 4709 01b4 13       		.uleb128 0x13
 4710 01b5 00       		.byte	0
 4711 01b6 00       		.byte	0
 4712 01b7 21       		.uleb128 0x21
 4713 01b8 26       		.uleb128 0x26
 4714 01b9 00       		.byte	0
 4715 01ba 49       		.uleb128 0x49
 4716 01bb 13       		.uleb128 0x13
 4717 01bc 00       		.byte	0
 4718 01bd 00       		.byte	0
 4719 01be 22       		.uleb128 0x22
 4720 01bf 2E       		.uleb128 0x2e
 4721 01c0 00       		.byte	0
 4722 01c1 3F       		.uleb128 0x3f
 4723 01c2 19       		.uleb128 0x19
 4724 01c3 03       		.uleb128 0x3
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 146


 4725 01c4 0E       		.uleb128 0xe
 4726 01c5 3A       		.uleb128 0x3a
 4727 01c6 0B       		.uleb128 0xb
 4728 01c7 3B       		.uleb128 0x3b
 4729 01c8 05       		.uleb128 0x5
 4730 01c9 27       		.uleb128 0x27
 4731 01ca 19       		.uleb128 0x19
 4732 01cb 11       		.uleb128 0x11
 4733 01cc 01       		.uleb128 0x1
 4734 01cd 12       		.uleb128 0x12
 4735 01ce 06       		.uleb128 0x6
 4736 01cf 40       		.uleb128 0x40
 4737 01d0 18       		.uleb128 0x18
 4738 01d1 9742     		.uleb128 0x2117
 4739 01d3 19       		.uleb128 0x19
 4740 01d4 00       		.byte	0
 4741 01d5 00       		.byte	0
 4742 01d6 23       		.uleb128 0x23
 4743 01d7 34       		.uleb128 0x34
 4744 01d8 00       		.byte	0
 4745 01d9 03       		.uleb128 0x3
 4746 01da 0E       		.uleb128 0xe
 4747 01db 3A       		.uleb128 0x3a
 4748 01dc 0B       		.uleb128 0xb
 4749 01dd 3B       		.uleb128 0x3b
 4750 01de 05       		.uleb128 0x5
 4751 01df 49       		.uleb128 0x49
 4752 01e0 13       		.uleb128 0x13
 4753 01e1 02       		.uleb128 0x2
 4754 01e2 18       		.uleb128 0x18
 4755 01e3 00       		.byte	0
 4756 01e4 00       		.byte	0
 4757 01e5 24       		.uleb128 0x24
 4758 01e6 2E       		.uleb128 0x2e
 4759 01e7 01       		.byte	0x1
 4760 01e8 3F       		.uleb128 0x3f
 4761 01e9 19       		.uleb128 0x19
 4762 01ea 03       		.uleb128 0x3
 4763 01eb 0E       		.uleb128 0xe
 4764 01ec 3A       		.uleb128 0x3a
 4765 01ed 0B       		.uleb128 0xb
 4766 01ee 3B       		.uleb128 0x3b
 4767 01ef 05       		.uleb128 0x5
 4768 01f0 27       		.uleb128 0x27
 4769 01f1 19       		.uleb128 0x19
 4770 01f2 49       		.uleb128 0x49
 4771 01f3 13       		.uleb128 0x13
 4772 01f4 11       		.uleb128 0x11
 4773 01f5 01       		.uleb128 0x1
 4774 01f6 12       		.uleb128 0x12
 4775 01f7 06       		.uleb128 0x6
 4776 01f8 40       		.uleb128 0x40
 4777 01f9 18       		.uleb128 0x18
 4778 01fa 9642     		.uleb128 0x2116
 4779 01fc 19       		.uleb128 0x19
 4780 01fd 01       		.uleb128 0x1
 4781 01fe 13       		.uleb128 0x13
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 147


 4782 01ff 00       		.byte	0
 4783 0200 00       		.byte	0
 4784 0201 25       		.uleb128 0x25
 4785 0202 34       		.uleb128 0x34
 4786 0203 00       		.byte	0
 4787 0204 03       		.uleb128 0x3
 4788 0205 0E       		.uleb128 0xe
 4789 0206 3A       		.uleb128 0x3a
 4790 0207 0B       		.uleb128 0xb
 4791 0208 3B       		.uleb128 0x3b
 4792 0209 05       		.uleb128 0x5
 4793 020a 49       		.uleb128 0x49
 4794 020b 13       		.uleb128 0x13
 4795 020c 1C       		.uleb128 0x1c
 4796 020d 05       		.uleb128 0x5
 4797 020e 00       		.byte	0
 4798 020f 00       		.byte	0
 4799 0210 26       		.uleb128 0x26
 4800 0211 34       		.uleb128 0x34
 4801 0212 00       		.byte	0
 4802 0213 03       		.uleb128 0x3
 4803 0214 0E       		.uleb128 0xe
 4804 0215 3A       		.uleb128 0x3a
 4805 0216 0B       		.uleb128 0xb
 4806 0217 3B       		.uleb128 0x3b
 4807 0218 05       		.uleb128 0x5
 4808 0219 49       		.uleb128 0x49
 4809 021a 13       		.uleb128 0x13
 4810 021b 3F       		.uleb128 0x3f
 4811 021c 19       		.uleb128 0x19
 4812 021d 3C       		.uleb128 0x3c
 4813 021e 19       		.uleb128 0x19
 4814 021f 00       		.byte	0
 4815 0220 00       		.byte	0
 4816 0221 27       		.uleb128 0x27
 4817 0222 34       		.uleb128 0x34
 4818 0223 00       		.byte	0
 4819 0224 03       		.uleb128 0x3
 4820 0225 0E       		.uleb128 0xe
 4821 0226 3A       		.uleb128 0x3a
 4822 0227 0B       		.uleb128 0xb
 4823 0228 3B       		.uleb128 0x3b
 4824 0229 0B       		.uleb128 0xb
 4825 022a 49       		.uleb128 0x49
 4826 022b 13       		.uleb128 0x13
 4827 022c 3F       		.uleb128 0x3f
 4828 022d 19       		.uleb128 0x19
 4829 022e 02       		.uleb128 0x2
 4830 022f 18       		.uleb128 0x18
 4831 0230 00       		.byte	0
 4832 0231 00       		.byte	0
 4833 0232 28       		.uleb128 0x28
 4834 0233 2E       		.uleb128 0x2e
 4835 0234 00       		.byte	0
 4836 0235 3F       		.uleb128 0x3f
 4837 0236 19       		.uleb128 0x19
 4838 0237 3C       		.uleb128 0x3c
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 148


 4839 0238 19       		.uleb128 0x19
 4840 0239 6E       		.uleb128 0x6e
 4841 023a 0E       		.uleb128 0xe
 4842 023b 03       		.uleb128 0x3
 4843 023c 0E       		.uleb128 0xe
 4844 023d 3A       		.uleb128 0x3a
 4845 023e 0B       		.uleb128 0xb
 4846 023f 3B       		.uleb128 0x3b
 4847 0240 05       		.uleb128 0x5
 4848 0241 00       		.byte	0
 4849 0242 00       		.byte	0
 4850 0243 29       		.uleb128 0x29
 4851 0244 2E       		.uleb128 0x2e
 4852 0245 00       		.byte	0
 4853 0246 3F       		.uleb128 0x3f
 4854 0247 19       		.uleb128 0x19
 4855 0248 3C       		.uleb128 0x3c
 4856 0249 19       		.uleb128 0x19
 4857 024a 6E       		.uleb128 0x6e
 4858 024b 0E       		.uleb128 0xe
 4859 024c 03       		.uleb128 0x3
 4860 024d 0E       		.uleb128 0xe
 4861 024e 3A       		.uleb128 0x3a
 4862 024f 0B       		.uleb128 0xb
 4863 0250 3B       		.uleb128 0x3b
 4864 0251 0B       		.uleb128 0xb
 4865 0252 00       		.byte	0
 4866 0253 00       		.byte	0
 4867 0254 00       		.byte	0
 4868              		.section	.debug_loc,"",%progbits
 4869              	.Ldebug_loc0:
 4870              	.LLST0:
 4871 0000 0C000000 		.4byte	.LVL0
 4872 0004 16000000 		.4byte	.LVL1
 4873 0008 0100     		.2byte	0x1
 4874 000a 51       		.byte	0x51
 4875 000b 16000000 		.4byte	.LVL1
 4876 000f 2C000000 		.4byte	.LFE21
 4877 0013 0100     		.2byte	0x1
 4878 0015 53       		.byte	0x53
 4879 0016 00000000 		.4byte	0
 4880 001a 00000000 		.4byte	0
 4881              	.LLST1:
 4882 001e 00000000 		.4byte	.LVL5
 4883 0022 37000000 		.4byte	.LVL7-1
 4884 0026 0100     		.2byte	0x1
 4885 0028 50       		.byte	0x50
 4886 0029 37000000 		.4byte	.LVL7-1
 4887 002d 40000000 		.4byte	.LFE2
 4888 0031 0400     		.2byte	0x4
 4889 0033 F3       		.byte	0xf3
 4890 0034 01       		.uleb128 0x1
 4891 0035 50       		.byte	0x50
 4892 0036 9F       		.byte	0x9f
 4893 0037 00000000 		.4byte	0
 4894 003b 00000000 		.4byte	0
 4895              	.LLST2:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 149


 4896 003f 30000000 		.4byte	.LVL6
 4897 0043 3A000000 		.4byte	.LVL8
 4898 0047 0100     		.2byte	0x1
 4899 0049 54       		.byte	0x54
 4900 004a 3A000000 		.4byte	.LVL8
 4901 004e 40000000 		.4byte	.LFE2
 4902 0052 0100     		.2byte	0x1
 4903 0054 50       		.byte	0x50
 4904 0055 00000000 		.4byte	0
 4905 0059 00000000 		.4byte	0
 4906              	.LLST3:
 4907 005d 02000000 		.4byte	.LVL9
 4908 0061 22000000 		.4byte	.LVL11
 4909 0065 0200     		.2byte	0x2
 4910 0067 30       		.byte	0x30
 4911 0068 9F       		.byte	0x9f
 4912 0069 22000000 		.4byte	.LVL11
 4913 006d 2C000000 		.4byte	.LFE3
 4914 0071 0100     		.2byte	0x1
 4915 0073 50       		.byte	0x50
 4916 0074 00000000 		.4byte	0
 4917 0078 00000000 		.4byte	0
 4918              	.LLST4:
 4919 007c 02000000 		.4byte	.LVL12
 4920 0080 12000000 		.4byte	.LVL13
 4921 0084 0300     		.2byte	0x3
 4922 0086 09       		.byte	0x9
 4923 0087 FF       		.byte	0xff
 4924 0088 9F       		.byte	0x9f
 4925 0089 12000000 		.4byte	.LVL13
 4926 008d 14000000 		.4byte	.LVL14
 4927 0091 0100     		.2byte	0x1
 4928 0093 50       		.byte	0x50
 4929 0094 18000000 		.4byte	.LVL15
 4930 0098 25000000 		.4byte	.LVL16-1
 4931 009c 0100     		.2byte	0x1
 4932 009e 50       		.byte	0x50
 4933 009f 26000000 		.4byte	.LVL16
 4934 00a3 30000000 		.4byte	.LVL18
 4935 00a7 0100     		.2byte	0x1
 4936 00a9 50       		.byte	0x50
 4937 00aa 30000000 		.4byte	.LVL18
 4938 00ae 32000000 		.4byte	.LVL19
 4939 00b2 0300     		.2byte	0x3
 4940 00b4 09       		.byte	0x9
 4941 00b5 FF       		.byte	0xff
 4942 00b6 9F       		.byte	0x9f
 4943 00b7 32000000 		.4byte	.LVL19
 4944 00bb 3C000000 		.4byte	.LFE4
 4945 00bf 0100     		.2byte	0x1
 4946 00c1 50       		.byte	0x50
 4947 00c2 00000000 		.4byte	0
 4948 00c6 00000000 		.4byte	0
 4949              	.LLST5:
 4950 00ca 12000000 		.4byte	.LVL13
 4951 00ce 30000000 		.4byte	.LVL18
 4952 00d2 0100     		.2byte	0x1
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 150


 4953 00d4 54       		.byte	0x54
 4954 00d5 00000000 		.4byte	0
 4955 00d9 00000000 		.4byte	0
 4956              	.LLST6:
 4957 00dd 00000000 		.4byte	.LVL20
 4958 00e1 47000000 		.4byte	.LVL22-1
 4959 00e5 0100     		.2byte	0x1
 4960 00e7 50       		.byte	0x50
 4961 00e8 47000000 		.4byte	.LVL22-1
 4962 00ec 54000000 		.4byte	.LFE5
 4963 00f0 0400     		.2byte	0x4
 4964 00f2 F3       		.byte	0xf3
 4965 00f3 01       		.uleb128 0x1
 4966 00f4 50       		.byte	0x50
 4967 00f5 9F       		.byte	0x9f
 4968 00f6 00000000 		.4byte	0
 4969 00fa 00000000 		.4byte	0
 4970              	.LLST7:
 4971 00fe 00000000 		.4byte	.LVL20
 4972 0102 47000000 		.4byte	.LVL22-1
 4973 0106 0100     		.2byte	0x1
 4974 0108 51       		.byte	0x51
 4975 0109 47000000 		.4byte	.LVL22-1
 4976 010d 54000000 		.4byte	.LFE5
 4977 0111 0400     		.2byte	0x4
 4978 0113 F3       		.byte	0xf3
 4979 0114 01       		.uleb128 0x1
 4980 0115 51       		.byte	0x51
 4981 0116 9F       		.byte	0x9f
 4982 0117 00000000 		.4byte	0
 4983 011b 00000000 		.4byte	0
 4984              	.LLST8:
 4985 011f 40000000 		.4byte	.LVL21
 4986 0123 4A000000 		.4byte	.LVL23
 4987 0127 0100     		.2byte	0x1
 4988 0129 54       		.byte	0x54
 4989 012a 4A000000 		.4byte	.LVL23
 4990 012e 54000000 		.4byte	.LFE5
 4991 0132 0100     		.2byte	0x1
 4992 0134 50       		.byte	0x50
 4993 0135 00000000 		.4byte	0
 4994 0139 00000000 		.4byte	0
 4995              	.LLST9:
 4996 013d 02000000 		.4byte	.LVL24
 4997 0141 22000000 		.4byte	.LVL26
 4998 0145 0200     		.2byte	0x2
 4999 0147 30       		.byte	0x30
 5000 0148 9F       		.byte	0x9f
 5001 0149 22000000 		.4byte	.LVL26
 5002 014d 2C000000 		.4byte	.LFE6
 5003 0151 0100     		.2byte	0x1
 5004 0153 50       		.byte	0x50
 5005 0154 00000000 		.4byte	0
 5006 0158 00000000 		.4byte	0
 5007              	.LLST10:
 5008 015c 00000000 		.4byte	.LVL27
 5009 0160 06000000 		.4byte	.LVL28
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 151


 5010 0164 0100     		.2byte	0x1
 5011 0166 50       		.byte	0x50
 5012 0167 06000000 		.4byte	.LVL28
 5013 016b 9C000000 		.4byte	.LFE8
 5014 016f 0400     		.2byte	0x4
 5015 0171 F3       		.byte	0xf3
 5016 0172 01       		.uleb128 0x1
 5017 0173 50       		.byte	0x50
 5018 0174 9F       		.byte	0x9f
 5019 0175 00000000 		.4byte	0
 5020 0179 00000000 		.4byte	0
 5021              	.LLST11:
 5022 017d 00000000 		.4byte	.LVL27
 5023 0181 0E000000 		.4byte	.LVL29
 5024 0185 0100     		.2byte	0x1
 5025 0187 51       		.byte	0x51
 5026 0188 0E000000 		.4byte	.LVL29
 5027 018c 9C000000 		.4byte	.LFE8
 5028 0190 0400     		.2byte	0x4
 5029 0192 F3       		.byte	0xf3
 5030 0193 01       		.uleb128 0x1
 5031 0194 51       		.byte	0x51
 5032 0195 9F       		.byte	0x9f
 5033 0196 00000000 		.4byte	0
 5034 019a 00000000 		.4byte	0
 5035              	.LLST12:
 5036 019e 00000000 		.4byte	.LVL27
 5037 01a2 16000000 		.4byte	.LVL31
 5038 01a6 0100     		.2byte	0x1
 5039 01a8 52       		.byte	0x52
 5040 01a9 16000000 		.4byte	.LVL31
 5041 01ad 94000000 		.4byte	.LVL43
 5042 01b1 0100     		.2byte	0x1
 5043 01b3 56       		.byte	0x56
 5044 01b4 94000000 		.4byte	.LVL43
 5045 01b8 9C000000 		.4byte	.LFE8
 5046 01bc 0400     		.2byte	0x4
 5047 01be F3       		.byte	0xf3
 5048 01bf 01       		.uleb128 0x1
 5049 01c0 52       		.byte	0x52
 5050 01c1 9F       		.byte	0x9f
 5051 01c2 00000000 		.4byte	0
 5052 01c6 00000000 		.4byte	0
 5053              	.LLST13:
 5054 01ca 12000000 		.4byte	.LVL30
 5055 01ce 16000000 		.4byte	.LVL31
 5056 01d2 0200     		.2byte	0x2
 5057 01d4 30       		.byte	0x30
 5058 01d5 9F       		.byte	0x9f
 5059 01d6 16000000 		.4byte	.LVL31
 5060 01da 94000000 		.4byte	.LVL42
 5061 01de 0100     		.2byte	0x1
 5062 01e0 55       		.byte	0x55
 5063 01e1 00000000 		.4byte	0
 5064 01e5 00000000 		.4byte	0
 5065              	.LLST14:
 5066 01e9 1A000000 		.4byte	.LVL32
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 152


 5067 01ed 39000000 		.4byte	.LVL33-1
 5068 01f1 0100     		.2byte	0x1
 5069 01f3 50       		.byte	0x50
 5070 01f4 4C000000 		.4byte	.LVL34
 5071 01f8 6B000000 		.4byte	.LVL35-1
 5072 01fc 0100     		.2byte	0x1
 5073 01fe 50       		.byte	0x50
 5074 01ff 72000000 		.4byte	.LVL36
 5075 0203 83000000 		.4byte	.LVL37-1
 5076 0207 0100     		.2byte	0x1
 5077 0209 50       		.byte	0x50
 5078 020a 00000000 		.4byte	0
 5079 020e 00000000 		.4byte	0
 5080              	.LLST15:
 5081 0212 12000000 		.4byte	.LVL30
 5082 0216 94000000 		.4byte	.LVL41
 5083 021a 0100     		.2byte	0x1
 5084 021c 54       		.byte	0x54
 5085 021d 00000000 		.4byte	0
 5086 0221 00000000 		.4byte	0
 5087              	.LLST16:
 5088 0225 00000000 		.4byte	.LVL44
 5089 0229 30000000 		.4byte	.LVL48
 5090 022d 0100     		.2byte	0x1
 5091 022f 50       		.byte	0x50
 5092 0230 30000000 		.4byte	.LVL48
 5093 0234 80000000 		.4byte	.LFE11
 5094 0238 0400     		.2byte	0x4
 5095 023a F3       		.byte	0xf3
 5096 023b 01       		.uleb128 0x1
 5097 023c 50       		.byte	0x50
 5098 023d 9F       		.byte	0x9f
 5099 023e 00000000 		.4byte	0
 5100 0242 00000000 		.4byte	0
 5101              	.LLST17:
 5102 0246 34000000 		.4byte	.LVL49
 5103 024a 6B000000 		.4byte	.LVL60-1
 5104 024e 0100     		.2byte	0x1
 5105 0250 50       		.byte	0x50
 5106 0251 00000000 		.4byte	0
 5107 0255 00000000 		.4byte	0
 5108              	.LLST18:
 5109 0259 2A000000 		.4byte	.LVL47
 5110 025d 30000000 		.4byte	.LVL48
 5111 0261 0200     		.2byte	0x2
 5112 0263 30       		.byte	0x30
 5113 0264 9F       		.byte	0x9f
 5114 0265 30000000 		.4byte	.LVL48
 5115 0269 74000000 		.4byte	.LVL64
 5116 026d 0100     		.2byte	0x1
 5117 026f 55       		.byte	0x55
 5118 0270 00000000 		.4byte	0
 5119 0274 00000000 		.4byte	0
 5120              	.LLST19:
 5121 0278 1A000000 		.4byte	.LVL45
 5122 027c 24000000 		.4byte	.LVL46
 5123 0280 0200     		.2byte	0x2
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 153


 5124 0282 30       		.byte	0x30
 5125 0283 9F       		.byte	0x9f
 5126 0284 2A000000 		.4byte	.LVL47
 5127 0288 74000000 		.4byte	.LVL65
 5128 028c 0100     		.2byte	0x1
 5129 028e 58       		.byte	0x58
 5130 028f 00000000 		.4byte	0
 5131 0293 00000000 		.4byte	0
 5132              	.LLST20:
 5133 0297 1A000000 		.4byte	.LVL45
 5134 029b 24000000 		.4byte	.LVL46
 5135 029f 0200     		.2byte	0x2
 5136 02a1 35       		.byte	0x35
 5137 02a2 9F       		.byte	0x9f
 5138 02a3 2A000000 		.4byte	.LVL47
 5139 02a7 74000000 		.4byte	.LVL66
 5140 02ab 0100     		.2byte	0x1
 5141 02ad 59       		.byte	0x59
 5142 02ae 00000000 		.4byte	0
 5143 02b2 00000000 		.4byte	0
 5144              	.LLST21:
 5145 02b6 42000000 		.4byte	.LVL52
 5146 02ba 54000000 		.4byte	.LVL55
 5147 02be 0100     		.2byte	0x1
 5148 02c0 52       		.byte	0x52
 5149 02c1 54000000 		.4byte	.LVL55
 5150 02c5 5E000000 		.4byte	.LVL57
 5151 02c9 0200     		.2byte	0x2
 5152 02cb 76       		.byte	0x76
 5153 02cc 00       		.sleb128 0
 5154 02cd 62000000 		.4byte	.LVL58
 5155 02d1 6B000000 		.4byte	.LVL60-1
 5156 02d5 0100     		.2byte	0x1
 5157 02d7 53       		.byte	0x53
 5158 02d8 00000000 		.4byte	0
 5159 02dc 00000000 		.4byte	0
 5160              	.LLST22:
 5161 02e0 38000000 		.4byte	.LVL50
 5162 02e4 62000000 		.4byte	.LVL58
 5163 02e8 0100     		.2byte	0x1
 5164 02ea 53       		.byte	0x53
 5165 02eb 00000000 		.4byte	0
 5166 02ef 00000000 		.4byte	0
 5167              	.LLST23:
 5168 02f3 30000000 		.4byte	.LVL48
 5169 02f7 74000000 		.4byte	.LVL63
 5170 02fb 0100     		.2byte	0x1
 5171 02fd 54       		.byte	0x54
 5172 02fe 00000000 		.4byte	0
 5173 0302 00000000 		.4byte	0
 5174              	.LLST24:
 5175 0306 00000000 		.4byte	.LVL67
 5176 030a 05000000 		.4byte	.LVL68-1
 5177 030e 0100     		.2byte	0x1
 5178 0310 50       		.byte	0x50
 5179 0311 05000000 		.4byte	.LVL68-1
 5180 0315 08000000 		.4byte	.LFE13
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 154


 5181 0319 0400     		.2byte	0x4
 5182 031b F3       		.byte	0xf3
 5183 031c 01       		.uleb128 0x1
 5184 031d 50       		.byte	0x50
 5185 031e 9F       		.byte	0x9f
 5186 031f 00000000 		.4byte	0
 5187 0323 00000000 		.4byte	0
 5188              	.LLST25:
 5189 0327 00000000 		.4byte	.LVL69
 5190 032b 08000000 		.4byte	.LVL70
 5191 032f 0100     		.2byte	0x1
 5192 0331 50       		.byte	0x50
 5193 0332 08000000 		.4byte	.LVL70
 5194 0336 0A000000 		.4byte	.LVL71
 5195 033a 0300     		.2byte	0x3
 5196 033c 70       		.byte	0x70
 5197 033d 01       		.sleb128 1
 5198 033e 9F       		.byte	0x9f
 5199 033f 0A000000 		.4byte	.LVL71
 5200 0343 30000000 		.4byte	.LFE14
 5201 0347 0400     		.2byte	0x4
 5202 0349 F3       		.byte	0xf3
 5203 034a 01       		.uleb128 0x1
 5204 034b 50       		.byte	0x50
 5205 034c 9F       		.byte	0x9f
 5206 034d 00000000 		.4byte	0
 5207 0351 00000000 		.4byte	0
 5208              	.LLST26:
 5209 0355 00000000 		.4byte	.LVL72
 5210 0359 08000000 		.4byte	.LVL73
 5211 035d 0100     		.2byte	0x1
 5212 035f 50       		.byte	0x50
 5213 0360 08000000 		.4byte	.LVL73
 5214 0364 0A000000 		.4byte	.LVL74
 5215 0368 0300     		.2byte	0x3
 5216 036a 70       		.byte	0x70
 5217 036b 01       		.sleb128 1
 5218 036c 9F       		.byte	0x9f
 5219 036d 0A000000 		.4byte	.LVL74
 5220 0371 30000000 		.4byte	.LFE15
 5221 0375 0400     		.2byte	0x4
 5222 0377 F3       		.byte	0xf3
 5223 0378 01       		.uleb128 0x1
 5224 0379 50       		.byte	0x50
 5225 037a 9F       		.byte	0x9f
 5226 037b 00000000 		.4byte	0
 5227 037f 00000000 		.4byte	0
 5228              	.LLST27:
 5229 0383 00000000 		.4byte	.LVL75
 5230 0387 06000000 		.4byte	.LVL76
 5231 038b 0100     		.2byte	0x1
 5232 038d 50       		.byte	0x50
 5233 038e 06000000 		.4byte	.LVL76
 5234 0392 10000000 		.4byte	.LVL79
 5235 0396 0100     		.2byte	0x1
 5236 0398 54       		.byte	0x54
 5237 0399 10000000 		.4byte	.LVL79
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 155


 5238 039d 12000000 		.4byte	.LFE16
 5239 03a1 0400     		.2byte	0x4
 5240 03a3 F3       		.byte	0xf3
 5241 03a4 01       		.uleb128 0x1
 5242 03a5 50       		.byte	0x50
 5243 03a6 9F       		.byte	0x9f
 5244 03a7 00000000 		.4byte	0
 5245 03ab 00000000 		.4byte	0
 5246              	.LLST28:
 5247 03af 00000000 		.4byte	.LVL75
 5248 03b3 09000000 		.4byte	.LVL77-1
 5249 03b7 0100     		.2byte	0x1
 5250 03b9 51       		.byte	0x51
 5251 03ba 09000000 		.4byte	.LVL77-1
 5252 03be 12000000 		.4byte	.LFE16
 5253 03c2 0400     		.2byte	0x4
 5254 03c4 F3       		.byte	0xf3
 5255 03c5 01       		.uleb128 0x1
 5256 03c6 51       		.byte	0x51
 5257 03c7 9F       		.byte	0x9f
 5258 03c8 00000000 		.4byte	0
 5259 03cc 00000000 		.4byte	0
 5260              	.LLST29:
 5261 03d0 00000000 		.4byte	.LVL80
 5262 03d4 08000000 		.4byte	.LVL82
 5263 03d8 0100     		.2byte	0x1
 5264 03da 50       		.byte	0x50
 5265 03db 08000000 		.4byte	.LVL82
 5266 03df 0A000000 		.4byte	.LVL83
 5267 03e3 0100     		.2byte	0x1
 5268 03e5 53       		.byte	0x53
 5269 03e6 0A000000 		.4byte	.LVL83
 5270 03ea 0C000000 		.4byte	.LVL84
 5271 03ee 0100     		.2byte	0x1
 5272 03f0 50       		.byte	0x50
 5273 03f1 0C000000 		.4byte	.LVL84
 5274 03f5 17000000 		.4byte	.LVL86-1
 5275 03f9 0100     		.2byte	0x1
 5276 03fb 53       		.byte	0x53
 5277 03fc 17000000 		.4byte	.LVL86-1
 5278 0400 1A000000 		.4byte	.LFE17
 5279 0404 0400     		.2byte	0x4
 5280 0406 F3       		.byte	0xf3
 5281 0407 01       		.uleb128 0x1
 5282 0408 50       		.byte	0x50
 5283 0409 9F       		.byte	0x9f
 5284 040a 00000000 		.4byte	0
 5285 040e 00000000 		.4byte	0
 5286              	.LLST30:
 5287 0412 04000000 		.4byte	.LVL81
 5288 0416 0C000000 		.4byte	.LVL84
 5289 041a 0200     		.2byte	0x2
 5290 041c 30       		.byte	0x30
 5291 041d 9F       		.byte	0x9f
 5292 041e 0C000000 		.4byte	.LVL84
 5293 0422 14000000 		.4byte	.LVL85
 5294 0426 0100     		.2byte	0x1
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 156


 5295 0428 50       		.byte	0x50
 5296 0429 18000000 		.4byte	.LVL86
 5297 042d 1A000000 		.4byte	.LFE17
 5298 0431 0100     		.2byte	0x1
 5299 0433 50       		.byte	0x50
 5300 0434 00000000 		.4byte	0
 5301 0438 00000000 		.4byte	0
 5302              	.LLST31:
 5303 043c 02000000 		.4byte	.LVL87
 5304 0440 08000000 		.4byte	.LVL88
 5305 0444 0200     		.2byte	0x2
 5306 0446 30       		.byte	0x30
 5307 0447 9F       		.byte	0x9f
 5308 0448 08000000 		.4byte	.LVL88
 5309 044c 18000000 		.4byte	.LVL93
 5310 0450 0100     		.2byte	0x1
 5311 0452 55       		.byte	0x55
 5312 0453 18000000 		.4byte	.LVL93
 5313 0457 1A000000 		.4byte	.LFE18
 5314 045b 0100     		.2byte	0x1
 5315 045d 50       		.byte	0x50
 5316 045e 00000000 		.4byte	0
 5317 0462 00000000 		.4byte	0
 5318              	.LLST32:
 5319 0466 02000000 		.4byte	.LVL87
 5320 046a 08000000 		.4byte	.LVL88
 5321 046e 0200     		.2byte	0x2
 5322 0470 30       		.byte	0x30
 5323 0471 9F       		.byte	0x9f
 5324 0472 08000000 		.4byte	.LVL88
 5325 0476 18000000 		.4byte	.LVL92
 5326 047a 0100     		.2byte	0x1
 5327 047c 54       		.byte	0x54
 5328 047d 00000000 		.4byte	0
 5329 0481 00000000 		.4byte	0
 5330              	.LLST33:
 5331 0485 00000000 		.4byte	.LVL94
 5332 0489 02000000 		.4byte	.LVL95
 5333 048d 0100     		.2byte	0x1
 5334 048f 50       		.byte	0x50
 5335 0490 02000000 		.4byte	.LVL95
 5336 0494 10000000 		.4byte	.LFE25
 5337 0498 0400     		.2byte	0x4
 5338 049a F3       		.byte	0xf3
 5339 049b 01       		.uleb128 0x1
 5340 049c 50       		.byte	0x50
 5341 049d 9F       		.byte	0x9f
 5342 049e 00000000 		.4byte	0
 5343 04a2 00000000 		.4byte	0
 5344              	.LLST34:
 5345 04a6 00000000 		.4byte	.LVL98
 5346 04aa 08000000 		.4byte	.LVL101
 5347 04ae 0100     		.2byte	0x1
 5348 04b0 50       		.byte	0x50
 5349 04b1 08000000 		.4byte	.LVL101
 5350 04b5 1C000000 		.4byte	.LVL103
 5351 04b9 0100     		.2byte	0x1
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 157


 5352 04bb 52       		.byte	0x52
 5353 04bc 1C000000 		.4byte	.LVL103
 5354 04c0 24000000 		.4byte	.LVL104
 5355 04c4 0600     		.2byte	0x6
 5356 04c6 F3       		.byte	0xf3
 5357 04c7 01       		.uleb128 0x1
 5358 04c8 50       		.byte	0x50
 5359 04c9 31       		.byte	0x31
 5360 04ca 24       		.byte	0x24
 5361 04cb 9F       		.byte	0x9f
 5362 04cc 24000000 		.4byte	.LVL104
 5363 04d0 28000000 		.4byte	.LVL105
 5364 04d4 0100     		.2byte	0x1
 5365 04d6 52       		.byte	0x52
 5366 04d7 28000000 		.4byte	.LVL105
 5367 04db 34000000 		.4byte	.LFE26
 5368 04df 0600     		.2byte	0x6
 5369 04e1 F3       		.byte	0xf3
 5370 04e2 01       		.uleb128 0x1
 5371 04e3 50       		.byte	0x50
 5372 04e4 31       		.byte	0x31
 5373 04e5 24       		.byte	0x24
 5374 04e6 9F       		.byte	0x9f
 5375 04e7 00000000 		.4byte	0
 5376 04eb 00000000 		.4byte	0
 5377              	.LLST35:
 5378 04ef 00000000 		.4byte	.LVL98
 5379 04f3 1A000000 		.4byte	.LVL102
 5380 04f7 0100     		.2byte	0x1
 5381 04f9 51       		.byte	0x51
 5382 04fa 1A000000 		.4byte	.LVL102
 5383 04fe 24000000 		.4byte	.LVL104
 5384 0502 0400     		.2byte	0x4
 5385 0504 F3       		.byte	0xf3
 5386 0505 01       		.uleb128 0x1
 5387 0506 51       		.byte	0x51
 5388 0507 9F       		.byte	0x9f
 5389 0508 24000000 		.4byte	.LVL104
 5390 050c 28000000 		.4byte	.LVL105
 5391 0510 0100     		.2byte	0x1
 5392 0512 51       		.byte	0x51
 5393 0513 28000000 		.4byte	.LVL105
 5394 0517 34000000 		.4byte	.LFE26
 5395 051b 0400     		.2byte	0x4
 5396 051d F3       		.byte	0xf3
 5397 051e 01       		.uleb128 0x1
 5398 051f 51       		.byte	0x51
 5399 0520 9F       		.byte	0x9f
 5400 0521 00000000 		.4byte	0
 5401 0525 00000000 		.4byte	0
 5402              	.LLST36:
 5403 0529 2A000000 		.4byte	.LVL106
 5404 052d 2C000000 		.4byte	.LVL107
 5405 0531 0100     		.2byte	0x1
 5406 0533 50       		.byte	0x50
 5407 0534 00000000 		.4byte	0
 5408 0538 00000000 		.4byte	0
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 158


 5409              	.LLST37:
 5410 053c 02000000 		.4byte	.LVL99
 5411 0540 06000000 		.4byte	.LVL100
 5412 0544 0200     		.2byte	0x2
 5413 0546 31       		.byte	0x31
 5414 0547 9F       		.byte	0x9f
 5415 0548 06000000 		.4byte	.LVL100
 5416 054c 2C000000 		.4byte	.LVL108
 5417 0550 0100     		.2byte	0x1
 5418 0552 54       		.byte	0x54
 5419 0553 00000000 		.4byte	0
 5420 0557 00000000 		.4byte	0
 5421              	.LLST38:
 5422 055b 00000000 		.4byte	.LVL109
 5423 055f 07000000 		.4byte	.LVL110-1
 5424 0563 0100     		.2byte	0x1
 5425 0565 50       		.byte	0x50
 5426 0566 07000000 		.4byte	.LVL110-1
 5427 056a 14000000 		.4byte	.LFE24
 5428 056e 0400     		.2byte	0x4
 5429 0570 F3       		.byte	0xf3
 5430 0571 01       		.uleb128 0x1
 5431 0572 50       		.byte	0x50
 5432 0573 9F       		.byte	0x9f
 5433 0574 00000000 		.4byte	0
 5434 0578 00000000 		.4byte	0
 5435              	.LLST39:
 5436 057c 00000000 		.4byte	.LVL109
 5437 0580 07000000 		.4byte	.LVL110-1
 5438 0584 0100     		.2byte	0x1
 5439 0586 51       		.byte	0x51
 5440 0587 07000000 		.4byte	.LVL110-1
 5441 058b 12000000 		.4byte	.LVL113
 5442 058f 0100     		.2byte	0x1
 5443 0591 54       		.byte	0x54
 5444 0592 12000000 		.4byte	.LVL113
 5445 0596 14000000 		.4byte	.LFE24
 5446 059a 0400     		.2byte	0x4
 5447 059c F3       		.byte	0xf3
 5448 059d 01       		.uleb128 0x1
 5449 059e 51       		.byte	0x51
 5450 059f 9F       		.byte	0x9f
 5451 05a0 00000000 		.4byte	0
 5452 05a4 00000000 		.4byte	0
 5453              	.LLST40:
 5454 05a8 08000000 		.4byte	.LVL110
 5455 05ac 0A000000 		.4byte	.LVL111
 5456 05b0 0100     		.2byte	0x1
 5457 05b2 50       		.byte	0x50
 5458 05b3 00000000 		.4byte	0
 5459 05b7 00000000 		.4byte	0
 5460              	.LLST41:
 5461 05bb 00000000 		.4byte	.LVL114
 5462 05bf 1A000000 		.4byte	.LVL119
 5463 05c3 0100     		.2byte	0x1
 5464 05c5 50       		.byte	0x50
 5465 05c6 1A000000 		.4byte	.LVL119
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 159


 5466 05ca 00010000 		.4byte	.LVL145
 5467 05ce 0100     		.2byte	0x1
 5468 05d0 55       		.byte	0x55
 5469 05d1 00010000 		.4byte	.LVL145
 5470 05d5 20010000 		.4byte	.LFE19
 5471 05d9 0400     		.2byte	0x4
 5472 05db F3       		.byte	0xf3
 5473 05dc 01       		.uleb128 0x1
 5474 05dd 50       		.byte	0x50
 5475 05de 9F       		.byte	0x9f
 5476 05df 00000000 		.4byte	0
 5477 05e3 00000000 		.4byte	0
 5478              	.LLST42:
 5479 05e7 0A000000 		.4byte	.LVL115
 5480 05eb C8000000 		.4byte	.LVL137
 5481 05ef 0200     		.2byte	0x2
 5482 05f1 30       		.byte	0x30
 5483 05f2 9F       		.byte	0x9f
 5484 05f3 C8000000 		.4byte	.LVL137
 5485 05f7 FE000000 		.4byte	.LVL143
 5486 05fb 0100     		.2byte	0x1
 5487 05fd 56       		.byte	0x56
 5488 05fe FE000000 		.4byte	.LVL143
 5489 0602 20010000 		.4byte	.LFE19
 5490 0606 0100     		.2byte	0x1
 5491 0608 50       		.byte	0x50
 5492 0609 00000000 		.4byte	0
 5493 060d 00000000 		.4byte	0
 5494              	.LLST43:
 5495 0611 54000000 		.4byte	.LVL123
 5496 0615 5E000000 		.4byte	.LVL124
 5497 0619 0200     		.2byte	0x2
 5498 061b 30       		.byte	0x30
 5499 061c 9F       		.byte	0x9f
 5500 061d 5E000000 		.4byte	.LVL124
 5501 0621 88000000 		.4byte	.LVL131
 5502 0625 0100     		.2byte	0x1
 5503 0627 52       		.byte	0x52
 5504 0628 00000000 		.4byte	0
 5505 062c 00000000 		.4byte	0
 5506              	.LLST44:
 5507 0630 14000000 		.4byte	.LVL118
 5508 0634 20000000 		.4byte	.LVL121
 5509 0638 0400     		.2byte	0x4
 5510 063a 0A       		.byte	0xa
 5511 063b 7007     		.2byte	0x770
 5512 063d 9F       		.byte	0x9f
 5513 063e 20000000 		.4byte	.LVL121
 5514 0642 26000000 		.4byte	.LVL122
 5515 0646 0100     		.2byte	0x1
 5516 0648 50       		.byte	0x50
 5517 0649 26000000 		.4byte	.LVL122
 5518 064d C4000000 		.4byte	.LVL135
 5519 0651 0100     		.2byte	0x1
 5520 0653 56       		.byte	0x56
 5521 0654 C6000000 		.4byte	.LVL136
 5522 0658 C8000000 		.4byte	.LVL137
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 160


 5523 065c 0100     		.2byte	0x1
 5524 065e 56       		.byte	0x56
 5525 065f 00000000 		.4byte	0
 5526 0663 00000000 		.4byte	0
 5527              	.LLST45:
 5528 0667 0A000000 		.4byte	.LVL115
 5529 066b 5E000000 		.4byte	.LVL124
 5530 066f 0200     		.2byte	0x2
 5531 0671 30       		.byte	0x30
 5532 0672 9F       		.byte	0x9f
 5533 0673 5E000000 		.4byte	.LVL124
 5534 0677 68000000 		.4byte	.LVL126
 5535 067b 0100     		.2byte	0x1
 5536 067d 5C       		.byte	0x5c
 5537 067e 68000000 		.4byte	.LVL126
 5538 0682 6A000000 		.4byte	.LVL127
 5539 0686 0100     		.2byte	0x1
 5540 0688 51       		.byte	0x51
 5541 0689 6A000000 		.4byte	.LVL127
 5542 068d A5000000 		.4byte	.LVL133-1
 5543 0691 0100     		.2byte	0x1
 5544 0693 5C       		.byte	0x5c
 5545 0694 00000000 		.4byte	0
 5546 0698 00000000 		.4byte	0
 5547              	.LLST46:
 5548 069c 0A000000 		.4byte	.LVL115
 5549 06a0 AE000000 		.4byte	.LVL134
 5550 06a4 0200     		.2byte	0x2
 5551 06a6 30       		.byte	0x30
 5552 06a7 9F       		.byte	0x9f
 5553 06a8 AE000000 		.4byte	.LVL134
 5554 06ac CC000000 		.4byte	.LVL138
 5555 06b0 0100     		.2byte	0x1
 5556 06b2 50       		.byte	0x50
 5557 06b3 CC000000 		.4byte	.LVL138
 5558 06b7 CF000000 		.4byte	.LVL139-1
 5559 06bb 0200     		.2byte	0x2
 5560 06bd 77       		.byte	0x77
 5561 06be 00       		.sleb128 0
 5562 06bf 00000000 		.4byte	0
 5563 06c3 00000000 		.4byte	0
 5564              	.LLST47:
 5565 06c7 0A000000 		.4byte	.LVL115
 5566 06cb 5E000000 		.4byte	.LVL124
 5567 06cf 0200     		.2byte	0x2
 5568 06d1 30       		.byte	0x30
 5569 06d2 9F       		.byte	0x9f
 5570 06d3 5E000000 		.4byte	.LVL124
 5571 06d7 64000000 		.4byte	.LVL125
 5572 06db 0100     		.2byte	0x1
 5573 06dd 51       		.byte	0x51
 5574 06de 64000000 		.4byte	.LVL125
 5575 06e2 6A000000 		.4byte	.LVL127
 5576 06e6 0100     		.2byte	0x1
 5577 06e8 53       		.byte	0x53
 5578 06e9 6A000000 		.4byte	.LVL127
 5579 06ed A2000000 		.4byte	.LVL132
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 161


 5580 06f1 0100     		.2byte	0x1
 5581 06f3 51       		.byte	0x51
 5582 06f4 00000000 		.4byte	0
 5583 06f8 00000000 		.4byte	0
 5584              	.LLST48:
 5585 06fc 10000000 		.4byte	.LVL116
 5586 0700 1D000000 		.4byte	.LVL120-1
 5587 0704 0100     		.2byte	0x1
 5588 0706 53       		.byte	0x53
 5589 0707 00000000 		.4byte	0
 5590 070b 00000000 		.4byte	0
 5591              	.LLST49:
 5592 070f 12000000 		.4byte	.LVL117
 5593 0713 00010000 		.4byte	.LVL144
 5594 0717 0100     		.2byte	0x1
 5595 0719 54       		.byte	0x54
 5596 071a 00000000 		.4byte	0
 5597 071e 00000000 		.4byte	0
 5598              	.LLST50:
 5599 0722 14000000 		.4byte	.LVL118
 5600 0726 7E000000 		.4byte	.LVL130
 5601 072a 0100     		.2byte	0x1
 5602 072c 57       		.byte	0x57
 5603 072d 00000000 		.4byte	0
 5604 0731 00000000 		.4byte	0
 5605              	.LLST51:
 5606 0735 02000000 		.4byte	.LVL146
 5607 0739 08000000 		.4byte	.LVL147
 5608 073d 0200     		.2byte	0x2
 5609 073f 30       		.byte	0x30
 5610 0740 9F       		.byte	0x9f
 5611 0741 08000000 		.4byte	.LVL147
 5612 0745 18000000 		.4byte	.LVL152
 5613 0749 0100     		.2byte	0x1
 5614 074b 55       		.byte	0x55
 5615 074c 18000000 		.4byte	.LVL152
 5616 0750 1A000000 		.4byte	.LFE20
 5617 0754 0100     		.2byte	0x1
 5618 0756 50       		.byte	0x50
 5619 0757 00000000 		.4byte	0
 5620 075b 00000000 		.4byte	0
 5621              	.LLST52:
 5622 075f 02000000 		.4byte	.LVL146
 5623 0763 08000000 		.4byte	.LVL147
 5624 0767 0200     		.2byte	0x2
 5625 0769 30       		.byte	0x30
 5626 076a 9F       		.byte	0x9f
 5627 076b 08000000 		.4byte	.LVL147
 5628 076f 18000000 		.4byte	.LVL151
 5629 0773 0100     		.2byte	0x1
 5630 0775 54       		.byte	0x54
 5631 0776 00000000 		.4byte	0
 5632 077a 00000000 		.4byte	0
 5633              	.LLST53:
 5634 077e 02000000 		.4byte	.LVL153
 5635 0782 06000000 		.4byte	.LVL154
 5636 0786 0200     		.2byte	0x2
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 162


 5637 0788 30       		.byte	0x30
 5638 0789 9F       		.byte	0x9f
 5639 078a 06000000 		.4byte	.LVL154
 5640 078e 1A000000 		.4byte	.LVL158
 5641 0792 0100     		.2byte	0x1
 5642 0794 54       		.byte	0x54
 5643 0795 00000000 		.4byte	0
 5644 0799 00000000 		.4byte	0
 5645              	.LLST54:
 5646 079d 0E000000 		.4byte	.LVL155
 5647 07a1 13000000 		.4byte	.LVL156-1
 5648 07a5 0100     		.2byte	0x1
 5649 07a7 51       		.byte	0x51
 5650 07a8 00000000 		.4byte	0
 5651 07ac 00000000 		.4byte	0
 5652              	.LLST55:
 5653 07b0 00000000 		.4byte	.LVL159
 5654 07b4 12000000 		.4byte	.LVL161
 5655 07b8 0100     		.2byte	0x1
 5656 07ba 50       		.byte	0x50
 5657 07bb 12000000 		.4byte	.LVL161
 5658 07bf 20000000 		.4byte	.LFE28
 5659 07c3 0400     		.2byte	0x4
 5660 07c5 F3       		.byte	0xf3
 5661 07c6 01       		.uleb128 0x1
 5662 07c7 50       		.byte	0x50
 5663 07c8 9F       		.byte	0x9f
 5664 07c9 00000000 		.4byte	0
 5665 07cd 00000000 		.4byte	0
 5666              	.LLST56:
 5667 07d1 00000000 		.4byte	.LVL159
 5668 07d5 15000000 		.4byte	.LVL162-1
 5669 07d9 0100     		.2byte	0x1
 5670 07db 51       		.byte	0x51
 5671 07dc 15000000 		.4byte	.LVL162-1
 5672 07e0 20000000 		.4byte	.LFE28
 5673 07e4 0400     		.2byte	0x4
 5674 07e6 F3       		.byte	0xf3
 5675 07e7 01       		.uleb128 0x1
 5676 07e8 51       		.byte	0x51
 5677 07e9 9F       		.byte	0x9f
 5678 07ea 00000000 		.4byte	0
 5679 07ee 00000000 		.4byte	0
 5680              	.LLST57:
 5681 07f2 02000000 		.4byte	.LVL160
 5682 07f6 16000000 		.4byte	.LVL162
 5683 07fa 0200     		.2byte	0x2
 5684 07fc 30       		.byte	0x30
 5685 07fd 9F       		.byte	0x9f
 5686 07fe 16000000 		.4byte	.LVL162
 5687 0802 18000000 		.4byte	.LVL163
 5688 0806 0200     		.2byte	0x2
 5689 0808 31       		.byte	0x31
 5690 0809 9F       		.byte	0x9f
 5691 080a 18000000 		.4byte	.LVL163
 5692 080e 20000000 		.4byte	.LFE28
 5693 0812 0100     		.2byte	0x1
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 163


 5694 0814 50       		.byte	0x50
 5695 0815 00000000 		.4byte	0
 5696 0819 00000000 		.4byte	0
 5697              	.LLST58:
 5698 081d 00000000 		.4byte	.LVL164
 5699 0821 0B000000 		.4byte	.LVL165-1
 5700 0825 0100     		.2byte	0x1
 5701 0827 50       		.byte	0x50
 5702 0828 0B000000 		.4byte	.LVL165-1
 5703 082c 1A000000 		.4byte	.LVL168
 5704 0830 0100     		.2byte	0x1
 5705 0832 55       		.byte	0x55
 5706 0833 1A000000 		.4byte	.LVL168
 5707 0837 1C000000 		.4byte	.LFE29
 5708 083b 0400     		.2byte	0x4
 5709 083d F3       		.byte	0xf3
 5710 083e 01       		.uleb128 0x1
 5711 083f 50       		.byte	0x50
 5712 0840 9F       		.byte	0x9f
 5713 0841 00000000 		.4byte	0
 5714 0845 00000000 		.4byte	0
 5715              	.LLST59:
 5716 0849 00000000 		.4byte	.LVL164
 5717 084d 0B000000 		.4byte	.LVL165-1
 5718 0851 0100     		.2byte	0x1
 5719 0853 51       		.byte	0x51
 5720 0854 0B000000 		.4byte	.LVL165-1
 5721 0858 1A000000 		.4byte	.LVL169
 5722 085c 0100     		.2byte	0x1
 5723 085e 56       		.byte	0x56
 5724 085f 1A000000 		.4byte	.LVL169
 5725 0863 1C000000 		.4byte	.LFE29
 5726 0867 0400     		.2byte	0x4
 5727 0869 F3       		.byte	0xf3
 5728 086a 01       		.uleb128 0x1
 5729 086b 51       		.byte	0x51
 5730 086c 9F       		.byte	0x9f
 5731 086d 00000000 		.4byte	0
 5732 0871 00000000 		.4byte	0
 5733              	.LLST60:
 5734 0875 00000000 		.4byte	.LVL164
 5735 0879 0B000000 		.4byte	.LVL165-1
 5736 087d 0100     		.2byte	0x1
 5737 087f 52       		.byte	0x52
 5738 0880 0B000000 		.4byte	.LVL165-1
 5739 0884 10000000 		.4byte	.LVL166
 5740 0888 0100     		.2byte	0x1
 5741 088a 54       		.byte	0x54
 5742 088b 10000000 		.4byte	.LVL166
 5743 088f 1C000000 		.4byte	.LFE29
 5744 0893 0400     		.2byte	0x4
 5745 0895 F3       		.byte	0xf3
 5746 0896 01       		.uleb128 0x1
 5747 0897 52       		.byte	0x52
 5748 0898 9F       		.byte	0x9f
 5749 0899 00000000 		.4byte	0
 5750 089d 00000000 		.4byte	0
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 164


 5751              	.LLST61:
 5752 08a1 0C000000 		.4byte	.LVL165
 5753 08a5 19000000 		.4byte	.LVL167-1
 5754 08a9 0100     		.2byte	0x1
 5755 08ab 50       		.byte	0x50
 5756 08ac 00000000 		.4byte	0
 5757 08b0 00000000 		.4byte	0
 5758              	.LLST62:
 5759 08b4 00000000 		.4byte	.LVL172
 5760 08b8 13000000 		.4byte	.LVL173-1
 5761 08bc 0100     		.2byte	0x1
 5762 08be 50       		.byte	0x50
 5763 08bf 13000000 		.4byte	.LVL173-1
 5764 08c3 3C000000 		.4byte	.LFE10
 5765 08c7 0400     		.2byte	0x4
 5766 08c9 F3       		.byte	0xf3
 5767 08ca 01       		.uleb128 0x1
 5768 08cb 50       		.byte	0x50
 5769 08cc 9F       		.byte	0x9f
 5770 08cd 00000000 		.4byte	0
 5771 08d1 00000000 		.4byte	0
 5772              	.LLST63:
 5773 08d5 00000000 		.4byte	.LVL181
 5774 08d9 38000000 		.4byte	.LVL187
 5775 08dd 0100     		.2byte	0x1
 5776 08df 50       		.byte	0x50
 5777 08e0 38000000 		.4byte	.LVL187
 5778 08e4 94000000 		.4byte	.LFE27
 5779 08e8 0200     		.2byte	0x2
 5780 08ea 91       		.byte	0x91
 5781 08eb 5C       		.sleb128 -36
 5782 08ec 00000000 		.4byte	0
 5783 08f0 00000000 		.4byte	0
 5784              	.LLST64:
 5785 08f4 1A000000 		.4byte	.LVL182
 5786 08f8 1E000000 		.4byte	.LVL183
 5787 08fc 0100     		.2byte	0x1
 5788 08fe 53       		.byte	0x53
 5789 08ff 1E000000 		.4byte	.LVL183
 5790 0903 7C000000 		.4byte	.LVL195
 5791 0907 0100     		.2byte	0x1
 5792 0909 58       		.byte	0x58
 5793 090a 00000000 		.4byte	0
 5794 090e 00000000 		.4byte	0
 5795              	.LLST65:
 5796 0912 24000000 		.4byte	.LVL184
 5797 0916 32000000 		.4byte	.LVL186
 5798 091a 0100     		.2byte	0x1
 5799 091c 52       		.byte	0x52
 5800 091d 32000000 		.4byte	.LVL186
 5801 0921 7C000000 		.4byte	.LVL196
 5802 0925 0100     		.2byte	0x1
 5803 0927 59       		.byte	0x59
 5804 0928 00000000 		.4byte	0
 5805 092c 00000000 		.4byte	0
 5806              	.LLST66:
 5807 0930 30000000 		.4byte	.LVL185
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 165


 5808 0934 3B000000 		.4byte	.LVL188-1
 5809 0938 0100     		.2byte	0x1
 5810 093a 53       		.byte	0x53
 5811 093b 3B000000 		.4byte	.LVL188-1
 5812 093f 7C000000 		.4byte	.LVL197
 5813 0943 0100     		.2byte	0x1
 5814 0945 5B       		.byte	0x5b
 5815 0946 00000000 		.4byte	0
 5816 094a 00000000 		.4byte	0
 5817              		.section	.debug_aranges,"",%progbits
 5818 0000 FC000000 		.4byte	0xfc
 5819 0004 0200     		.2byte	0x2
 5820 0006 00000000 		.4byte	.Ldebug_info0
 5821 000a 04       		.byte	0x4
 5822 000b 00       		.byte	0
 5823 000c 0000     		.2byte	0
 5824 000e 0000     		.2byte	0
 5825 0010 00000000 		.4byte	.LFB21
 5826 0014 2C000000 		.4byte	.LFE21-.LFB21
 5827 0018 00000000 		.4byte	.LFB22
 5828 001c 08000000 		.4byte	.LFE22-.LFB22
 5829 0020 00000000 		.4byte	.LFB1
 5830 0024 10000000 		.4byte	.LFE1-.LFB1
 5831 0028 00000000 		.4byte	.LFB2
 5832 002c 40000000 		.4byte	.LFE2-.LFB2
 5833 0030 00000000 		.4byte	.LFB3
 5834 0034 2C000000 		.4byte	.LFE3-.LFB3
 5835 0038 00000000 		.4byte	.LFB4
 5836 003c 3C000000 		.4byte	.LFE4-.LFB4
 5837 0040 00000000 		.4byte	.LFB5
 5838 0044 54000000 		.4byte	.LFE5-.LFB5
 5839 0048 00000000 		.4byte	.LFB6
 5840 004c 2C000000 		.4byte	.LFE6-.LFB6
 5841 0050 00000000 		.4byte	.LFB8
 5842 0054 9C000000 		.4byte	.LFE8-.LFB8
 5843 0058 00000000 		.4byte	.LFB11
 5844 005c 80000000 		.4byte	.LFE11-.LFB11
 5845 0060 00000000 		.4byte	.LFB12
 5846 0064 02000000 		.4byte	.LFE12-.LFB12
 5847 0068 00000000 		.4byte	.LFB13
 5848 006c 08000000 		.4byte	.LFE13-.LFB13
 5849 0070 00000000 		.4byte	.LFB14
 5850 0074 30000000 		.4byte	.LFE14-.LFB14
 5851 0078 00000000 		.4byte	.LFB15
 5852 007c 30000000 		.4byte	.LFE15-.LFB15
 5853 0080 00000000 		.4byte	.LFB16
 5854 0084 12000000 		.4byte	.LFE16-.LFB16
 5855 0088 00000000 		.4byte	.LFB17
 5856 008c 1A000000 		.4byte	.LFE17-.LFB17
 5857 0090 00000000 		.4byte	.LFB18
 5858 0094 1A000000 		.4byte	.LFE18-.LFB18
 5859 0098 00000000 		.4byte	.LFB25
 5860 009c 10000000 		.4byte	.LFE25-.LFB25
 5861 00a0 00000000 		.4byte	.LFB26
 5862 00a4 34000000 		.4byte	.LFE26-.LFB26
 5863 00a8 00000000 		.4byte	.LFB24
 5864 00ac 14000000 		.4byte	.LFE24-.LFB24
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 166


 5865 00b0 00000000 		.4byte	.LFB19
 5866 00b4 20010000 		.4byte	.LFE19-.LFB19
 5867 00b8 00000000 		.4byte	.LFB20
 5868 00bc 1A000000 		.4byte	.LFE20-.LFB20
 5869 00c0 00000000 		.4byte	.LFB23
 5870 00c4 20000000 		.4byte	.LFE23-.LFB23
 5871 00c8 00000000 		.4byte	.LFB28
 5872 00cc 20000000 		.4byte	.LFE28-.LFB28
 5873 00d0 00000000 		.4byte	.LFB29
 5874 00d4 1C000000 		.4byte	.LFE29-.LFB29
 5875 00d8 00000000 		.4byte	.LFB9
 5876 00dc 18000000 		.4byte	.LFE9-.LFB9
 5877 00e0 00000000 		.4byte	.LFB10
 5878 00e4 3C000000 		.4byte	.LFE10-.LFB10
 5879 00e8 00000000 		.4byte	.LFB7
 5880 00ec 30000000 		.4byte	.LFE7-.LFB7
 5881 00f0 00000000 		.4byte	.LFB27
 5882 00f4 94000000 		.4byte	.LFE27-.LFB27
 5883 00f8 00000000 		.4byte	0
 5884 00fc 00000000 		.4byte	0
 5885              		.section	.debug_ranges,"",%progbits
 5886              	.Ldebug_ranges0:
 5887 0000 00000000 		.4byte	.LFB21
 5888 0004 2C000000 		.4byte	.LFE21
 5889 0008 00000000 		.4byte	.LFB22
 5890 000c 08000000 		.4byte	.LFE22
 5891 0010 00000000 		.4byte	.LFB1
 5892 0014 10000000 		.4byte	.LFE1
 5893 0018 00000000 		.4byte	.LFB2
 5894 001c 40000000 		.4byte	.LFE2
 5895 0020 00000000 		.4byte	.LFB3
 5896 0024 2C000000 		.4byte	.LFE3
 5897 0028 00000000 		.4byte	.LFB4
 5898 002c 3C000000 		.4byte	.LFE4
 5899 0030 00000000 		.4byte	.LFB5
 5900 0034 54000000 		.4byte	.LFE5
 5901 0038 00000000 		.4byte	.LFB6
 5902 003c 2C000000 		.4byte	.LFE6
 5903 0040 00000000 		.4byte	.LFB8
 5904 0044 9C000000 		.4byte	.LFE8
 5905 0048 00000000 		.4byte	.LFB11
 5906 004c 80000000 		.4byte	.LFE11
 5907 0050 00000000 		.4byte	.LFB12
 5908 0054 02000000 		.4byte	.LFE12
 5909 0058 00000000 		.4byte	.LFB13
 5910 005c 08000000 		.4byte	.LFE13
 5911 0060 00000000 		.4byte	.LFB14
 5912 0064 30000000 		.4byte	.LFE14
 5913 0068 00000000 		.4byte	.LFB15
 5914 006c 30000000 		.4byte	.LFE15
 5915 0070 00000000 		.4byte	.LFB16
 5916 0074 12000000 		.4byte	.LFE16
 5917 0078 00000000 		.4byte	.LFB17
 5918 007c 1A000000 		.4byte	.LFE17
 5919 0080 00000000 		.4byte	.LFB18
 5920 0084 1A000000 		.4byte	.LFE18
 5921 0088 00000000 		.4byte	.LFB25
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 167


 5922 008c 10000000 		.4byte	.LFE25
 5923 0090 00000000 		.4byte	.LFB26
 5924 0094 34000000 		.4byte	.LFE26
 5925 0098 00000000 		.4byte	.LFB24
 5926 009c 14000000 		.4byte	.LFE24
 5927 00a0 00000000 		.4byte	.LFB19
 5928 00a4 20010000 		.4byte	.LFE19
 5929 00a8 00000000 		.4byte	.LFB20
 5930 00ac 1A000000 		.4byte	.LFE20
 5931 00b0 00000000 		.4byte	.LFB23
 5932 00b4 20000000 		.4byte	.LFE23
 5933 00b8 00000000 		.4byte	.LFB28
 5934 00bc 20000000 		.4byte	.LFE28
 5935 00c0 00000000 		.4byte	.LFB29
 5936 00c4 1C000000 		.4byte	.LFE29
 5937 00c8 00000000 		.4byte	.LFB9
 5938 00cc 18000000 		.4byte	.LFE9
 5939 00d0 00000000 		.4byte	.LFB10
 5940 00d4 3C000000 		.4byte	.LFE10
 5941 00d8 00000000 		.4byte	.LFB7
 5942 00dc 30000000 		.4byte	.LFE7
 5943 00e0 00000000 		.4byte	.LFB27
 5944 00e4 94000000 		.4byte	.LFE27
 5945 00e8 00000000 		.4byte	0
 5946 00ec 00000000 		.4byte	0
 5947              		.section	.debug_line,"",%progbits
 5948              	.Ldebug_line0:
 5949 0000 FA050000 		.section	.debug_str,"MS",%progbits,1
 5949      0200E901 
 5949      00000201 
 5949      FB0E0D00 
 5949      01010101 
 5950              	.LASF161:
 5951 0000 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 5951      656E7365 
 5951      5F537343 
 5951      53444765 
 5951      74436F6C 
 5952              	.LASF138:
 5953 0022 73656E73 		.ascii	"sensorElement\000"
 5953      6F72456C 
 5953      656D656E 
 5953      7400
 5954              	.LASF179:
 5955 0030 6D617843 		.ascii	"maxCp\000"
 5955      7000
 5956              	.LASF131:
 5957 0036 7363616E 		.ascii	"scanStatus\000"
 5957      53746174 
 5957      757300
 5958              	.LASF191:
 5959 0041 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 5959      656E7365 
 5959      5F537343 
 5959      53444469 
 5959      7361626C 
 5960              	.LASF134:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 168


 5961 005b 43617053 		.ascii	"CapSense_SetupWidgetExt\000"
 5961      656E7365 
 5961      5F536574 
 5961      75705769 
 5961      64676574 
 5962              	.LASF203:
 5963 0073 43617053 		.ascii	"CapSense_widgetIndex\000"
 5963      656E7365 
 5963      5F776964 
 5963      67657449 
 5963      6E646578 
 5964              	.LASF85:
 5965 0088 736E7254 		.ascii	"snrTestWidgetId\000"
 5965      65737457 
 5965      69646765 
 5965      74496400 
 5966              	.LASF43:
 5967 0098 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 5967      656E7365 
 5967      5F554E44 
 5967      4546494E 
 5967      45445F45 
 5968              	.LASF8:
 5969 00ad 756E7369 		.ascii	"unsigned int\000"
 5969      676E6564 
 5969      20696E74 
 5969      00
 5970              	.LASF76:
 5971 00ba 7363616E 		.ascii	"scanCounter\000"
 5971      436F756E 
 5971      74657200 
 5972              	.LASF174:
 5973 00c6 696E7075 		.ascii	"inputSnsClk\000"
 5973      74536E73 
 5973      436C6B00 
 5974              	.LASF74:
 5975 00d2 6877436C 		.ascii	"hwClock\000"
 5975      6F636B00 
 5976              	.LASF89:
 5977 00da 7363616E 		.ascii	"scanCsdISC\000"
 5977      43736449 
 5977      534300
 5978              	.LASF182:
 5979 00e5 70747252 		.ascii	"ptrRamWidget\000"
 5979      616D5769 
 5979      64676574 
 5979      00
 5980              	.LASF222:
 5981 00f2 43794861 		.ascii	"CyHalt\000"
 5981      6C7400
 5982              	.LASF120:
 5983 00f9 43617053 		.ascii	"CapSense_BIST_CSD_SH_CAP_E\000"
 5983      656E7365 
 5983      5F424953 
 5983      545F4353 
 5983      445F5348 
 5984              	.LASF142:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 169


 5985 0114 696E7465 		.ascii	"interruptState\000"
 5985      72727570 
 5985      74537461 
 5985      746500
 5986              	.LASF18:
 5987 0123 72656738 		.ascii	"reg8\000"
 5987      00
 5988              	.LASF199:
 5989 0128 636D6F64 		.ascii	"cmodPc\000"
 5989      506300
 5990              	.LASF170:
 5991 012f 6C667372 		.ascii	"lfsrScale\000"
 5991      5363616C 
 5991      6500
 5992              	.LASF181:
 5993 0139 70747246 		.ascii	"ptrFlashWidget\000"
 5993      6C617368 
 5993      57696467 
 5993      657400
 5994              	.LASF24:
 5995 0148 69446163 		.ascii	"iDacGain\000"
 5995      4761696E 
 5995      00
 5996              	.LASF221:
 5997 0151 536D6172 		.ascii	"SmartSense_TuneSensitivity\000"
 5997      7453656E 
 5997      73655F54 
 5997      756E6553 
 5997      656E7369 
 5998              	.LASF30:
 5999 016c 736E7343 		.ascii	"snsClkInputClock\000"
 5999      6C6B496E 
 5999      70757443 
 5999      6C6F636B 
 5999      00
 6000              	.LASF160:
 6001 017d 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 6001      656E7365 
 6001      5F43616C 
 6001      69627261 
 6001      7465416C 
 6002              	.LASF229:
 6003 019a 43617053 		.ascii	"CapSense_IsBusy\000"
 6003      656E7365 
 6003      5F497342 
 6003      75737900 
 6004              	.LASF154:
 6005 01aa 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 6005      656E7365 
 6005      5F537353 
 6005      65744D6F 
 6005      64436C6B 
 6006              	.LASF189:
 6007 01cb 72656750 		.ascii	"regPtr\000"
 6007      747200
 6008              	.LASF64:
 6009 01d2 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 170


 6009      656E7365 
 6009      5F52414D 
 6009      5F57445F 
 6009      4C495354 
 6010              	.LASF228:
 6011 01ee 453A5C68 		.ascii	"E:\\hardware\\cy8ckit-043-slider\\cy8ckit-043-slide"
 6011      61726477 
 6011      6172655C 
 6011      63793863 
 6011      6B69742D 
 6012 021e 722E6379 		.ascii	"r.cydsn\000"
 6012      64736E00 
 6013              	.LASF136:
 6014 0226 73656E73 		.ascii	"sensorId\000"
 6014      6F724964 
 6014      00
 6015              	.LASF163:
 6016 022f 70747257 		.ascii	"ptrWdgt\000"
 6016      64677400 
 6017              	.LASF10:
 6018 0237 75696E74 		.ascii	"uint32_t\000"
 6018      33325F74 
 6018      00
 6019              	.LASF168:
 6020 0240 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 6020      656E7365 
 6020      5F537353 
 6020      65745769 
 6020      64676574 
 6021              	.LASF57:
 6022 0260 69646163 		.ascii	"idacGainIndex\000"
 6022      4761696E 
 6022      496E6465 
 6022      7800
 6023              	.LASF146:
 6024 026e 6C6F6F70 		.ascii	"loopIndex\000"
 6024      496E6465 
 6024      7800
 6025              	.LASF14:
 6026 0278 666C6F61 		.ascii	"float\000"
 6026      7400
 6027              	.LASF100:
 6028 027e 73686966 		.ascii	"shift\000"
 6028      7400
 6029              	.LASF171:
 6030 0284 43617053 		.ascii	"CapSense_SsAutoTuneWidget\000"
 6030      656E7365 
 6030      5F537341 
 6030      75746F54 
 6030      756E6557 
 6031              	.LASF211:
 6032 029e 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 6032      656E7365 
 6032      5F435344 
 6032      53657475 
 6032      70576964 
 6033              	.LASF151:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 171


 6034 02b6 736E7349 		.ascii	"snsIoPtr\000"
 6034      6F507472 
 6034      00
 6035              	.LASF84:
 6036 02bf 736E734C 		.ascii	"snsList\000"
 6036      69737400 
 6037              	.LASF7:
 6038 02c7 6C6F6E67 		.ascii	"long long unsigned int\000"
 6038      206C6F6E 
 6038      6720756E 
 6038      7369676E 
 6038      65642069 
 6039              	.LASF204:
 6040 02de 43617053 		.ascii	"CapSense_sensorIndex\000"
 6040      656E7365 
 6040      5F73656E 
 6040      736F7249 
 6040      6E646578 
 6041              	.LASF101:
 6042 02f3 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 6042      656E7365 
 6042      5F464C41 
 6042      53485F49 
 6042      4F5F5354 
 6043              	.LASF86:
 6044 030c 736E7254 		.ascii	"snrTestSensorId\000"
 6044      65737453 
 6044      656E736F 
 6044      72496400 
 6045              	.LASF111:
 6046 031c 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 6046      4E6F6973 
 6046      65456E76 
 6046      6C7000
 6047              	.LASF109:
 6048 032b 77646774 		.ascii	"wdgtType\000"
 6048      54797065 
 6048      00
 6049              	.LASF169:
 6050 0334 6C667372 		.ascii	"lfsrSize\000"
 6050      53697A65 
 6050      00
 6051              	.LASF213:
 6052 033d 43617053 		.ascii	"CapSense_CSDSetupWidgetExt\000"
 6052      656E7365 
 6052      5F435344 
 6052      53657475 
 6052      70576964 
 6053              	.LASF190:
 6054 0358 76616C75 		.ascii	"value\000"
 6054      6500
 6055              	.LASF148:
 6056 035e 6E657750 		.ascii	"newPinHsiomVal\000"
 6056      696E4873 
 6056      696F6D56 
 6056      616C00
 6057              	.LASF63:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 172


 6058 036d 736C6964 		.ascii	"slider\000"
 6058      657200
 6059              	.LASF226:
 6060 0374 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6060      43313120 
 6060      352E342E 
 6060      31203230 
 6060      31363036 
 6061 03a7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 6061      20726576 
 6061      6973696F 
 6061      6E203233 
 6061      37373135 
 6062 03da 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 6062      66756E63 
 6062      74696F6E 
 6062      2D736563 
 6062      74696F6E 
 6063              	.LASF172:
 6064 0402 6175746F 		.ascii	"autoTuneStatus\000"
 6064      54756E65 
 6064      53746174 
 6064      757300
 6065              	.LASF82:
 6066 0411 6D6F6443 		.ascii	"modCsdClk\000"
 6066      7364436C 
 6066      6B00
 6067              	.LASF70:
 6068 041b 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 6068      656E7365 
 6068      5F52414D 
 6068      5F534E53 
 6068      5F535452 
 6069              	.LASF164:
 6070 0433 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 6070      656E7365 
 6070      5F537343 
 6070      53444361 
 6070      6C635072 
 6071              	.LASF31:
 6072 044d 63616C54 		.ascii	"calTarget\000"
 6072      61726765 
 6072      7400
 6073              	.LASF94:
 6074 0457 64725074 		.ascii	"drPtr\000"
 6074      7200
 6075              	.LASF187:
 6076 045d 6D6F6465 		.ascii	"mode\000"
 6076      00
 6077              	.LASF155:
 6078 0462 6D6F6443 		.ascii	"modClk\000"
 6078      6C6B00
 6079              	.LASF147:
 6080 0469 6E657750 		.ascii	"newPinPcVal\000"
 6080      696E5063 
 6080      56616C00 
 6081              	.LASF26:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 173


 6082 0475 73696750 		.ascii	"sigPFC\000"
 6082      464300
 6083              	.LASF53:
 6084 047c 68797374 		.ascii	"hysteresis\000"
 6084      65726573 
 6084      697300
 6085              	.LASF196:
 6086 0487 64697363 		.ascii	"dischargeTime\000"
 6086      68617267 
 6086      6554696D 
 6086      6500
 6087              	.LASF112:
 6088 0495 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 6088      656E7365 
 6088      5F464C41 
 6088      53485F57 
 6088      445F5354 
 6089              	.LASF140:
 6090 04ae 656C7464 		.ascii	"eltdNum\000"
 6090      4E756D00 
 6091              	.LASF55:
 6092 04b6 6C6F7742 		.ascii	"lowBslnRst\000"
 6092      736C6E52 
 6092      737400
 6093              	.LASF108:
 6094 04c1 746F7461 		.ascii	"totalNumSns\000"
 6094      6C4E756D 
 6094      536E7300 
 6095              	.LASF42:
 6096 04cd 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 6096      5453454E 
 6096      53455F43 
 6096      53445F4E 
 6096      4F495345 
 6097              	.LASF177:
 6098 04f2 6175746F 		.ascii	"autoTuneConfig\000"
 6098      54756E65 
 6098      436F6E66 
 6098      696700
 6099              	.LASF51:
 6100 0501 6E6F6973 		.ascii	"noiseTh\000"
 6100      65546800 
 6101              	.LASF16:
 6102 0509 63686172 		.ascii	"char\000"
 6102      00
 6103              	.LASF216:
 6104 050e 43794578 		.ascii	"CyExitCriticalSection\000"
 6104      69744372 
 6104      69746963 
 6104      616C5365 
 6104      6374696F 
 6105              	.LASF32:
 6106 0524 69446163 		.ascii	"iDacMod\000"
 6106      4D6F6400 
 6107              	.LASF195:
 6108 052c 43617053 		.ascii	"CapSense_DischargeExtCapacitors\000"
 6108      656E7365 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 174


 6108      5F446973 
 6108      63686172 
 6108      67654578 
 6109              	.LASF149:
 6110 054c 746D7050 		.ascii	"tmpPcDrRegValue\000"
 6110      63447252 
 6110      65675661 
 6110      6C756500 
 6111              	.LASF118:
 6112 055c 43617053 		.ascii	"CapSense_BIST_CSD_SNS_CAP_E\000"
 6112      656E7365 
 6112      5F424953 
 6112      545F4353 
 6112      445F534E 
 6113              	.LASF98:
 6114 0578 6873696F 		.ascii	"hsiomShift\000"
 6114      6D536869 
 6114      667400
 6115              	.LASF12:
 6116 0583 75696E74 		.ascii	"uint16\000"
 6116      313600
 6117              	.LASF183:
 6118 058a 70747252 		.ascii	"ptrRamSensor\000"
 6118      616D5365 
 6118      6E736F72 
 6118      00
 6119              	.LASF125:
 6120 0597 43617053 		.ascii	"CapSense_SsTrimIdacsSourcing\000"
 6120      656E7365 
 6120      5F537354 
 6120      72696D49 
 6120      64616373 
 6121              	.LASF49:
 6122 05b4 7265736F 		.ascii	"resolution\000"
 6122      6C757469 
 6122      6F6E00
 6123              	.LASF77:
 6124 05bf 73746174 		.ascii	"status\000"
 6124      757300
 6125              	.LASF158:
 6126 05c6 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 6126      656E7365 
 6126      5F43616C 
 6126      69627261 
 6126      74655769 
 6127              	.LASF117:
 6128 05df 43617053 		.ascii	"CapSense_SCAN_CSX_E\000"
 6128      656E7365 
 6128      5F534341 
 6128      4E5F4353 
 6128      585F4500 
 6129              	.LASF22:
 6130 05f3 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 6130      656E7365 
 6130      5F4C4F57 
 6130      5F42534C 
 6130      4E5F5253 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 175


 6131              	.LASF156:
 6132 060e 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 6132      656E7365 
 6132      5F537353 
 6132      6574536E 
 6132      73436C6F 
 6133              	.LASF48:
 6134 062c 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 6134      656E7365 
 6134      5F53454E 
 6134      53455F4D 
 6134      4554484F 
 6135              	.LASF186:
 6136 0647 43617053 		.ascii	"CapSense_SetInactiveElectrodeState\000"
 6136      656E7365 
 6136      5F536574 
 6136      496E6163 
 6136      74697665 
 6137              	.LASF69:
 6138 066a 69646163 		.ascii	"idacComp\000"
 6138      436F6D70 
 6138      00
 6139              	.LASF93:
 6140 0673 70635074 		.ascii	"pcPtr\000"
 6140      7200
 6141              	.LASF6:
 6142 0679 6C6F6E67 		.ascii	"long long int\000"
 6142      206C6F6E 
 6142      6720696E 
 6142      7400
 6143              	.LASF110:
 6144 0687 6E756D43 		.ascii	"numCols\000"
 6144      6F6C7300 
 6145              	.LASF224:
 6146 068f 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 6146      656E7365 
 6146      5F537343 
 6146      5344496E 
 6146      69746961 
 6147              	.LASF54:
 6148 06a8 6F6E4465 		.ascii	"onDebounce\000"
 6148      626F756E 
 6148      636500
 6149              	.LASF153:
 6150 06b3 61646472 		.ascii	"address\000"
 6150      65737300 
 6151              	.LASF159:
 6152 06bb 63616C69 		.ascii	"calibrateStatus\000"
 6152      62726174 
 6152      65537461 
 6152      74757300 
 6153              	.LASF83:
 6154 06cb 77646774 		.ascii	"wdgtList\000"
 6154      4C697374 
 6154      00
 6155              	.LASF116:
 6156 06d4 43617053 		.ascii	"CapSense_SCAN_CSD_E\000"
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 176


 6156      656E7365 
 6156      5F534341 
 6156      4E5F4353 
 6156      445F4500 
 6157              	.LASF114:
 6158 06e8 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 6158      656E7365 
 6158      5F464C41 
 6158      53485F53 
 6158      54525543 
 6159              	.LASF130:
 6160 06fe 43617053 		.ascii	"CapSense_Scan\000"
 6160      656E7365 
 6160      5F536361 
 6160      6E00
 6161              	.LASF188:
 6162 070c 43617053 		.ascii	"CapSense_WriteBitsSafe\000"
 6162      656E7365 
 6162      5F577269 
 6162      74654269 
 6162      74735361 
 6163              	.LASF150:
 6164 0723 746D7048 		.ascii	"tmpHsiomRegValue\000"
 6164      73696F6D 
 6164      52656756 
 6164      616C7565 
 6164      00
 6165              	.LASF200:
 6166 0734 43617053 		.ascii	"CapSense_dsRam\000"
 6166      656E7365 
 6166      5F647352 
 6166      616D00
 6167              	.LASF88:
 6168 0743 736E7254 		.ascii	"snrTestRawCount\000"
 6168      65737452 
 6168      6177436F 
 6168      756E7400 
 6169              	.LASF184:
 6170 0753 43617053 		.ascii	"CapSense_SsAutoTune\000"
 6170      656E7365 
 6170      5F537341 
 6170      75746F54 
 6170      756E6500 
 6171              	.LASF52:
 6172 0767 6E4E6F69 		.ascii	"nNoiseTh\000"
 6172      73655468 
 6172      00
 6173              	.LASF81:
 6174 0770 63736430 		.ascii	"csd0Config\000"
 6174      436F6E66 
 6174      696700
 6175              	.LASF20:
 6176 077b 63796973 		.ascii	"cyisraddress\000"
 6176      72616464 
 6176      72657373 
 6176      00
 6177              	.LASF137:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 177


 6178 0788 43617053 		.ascii	"CapSense_ScanExt\000"
 6178      656E7365 
 6178      5F536361 
 6178      6E457874 
 6178      00
 6179              	.LASF61:
 6180 0799 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 6180      656E7365 
 6180      5F52414D 
 6180      5F57445F 
 6180      42415345 
 6181              	.LASF92:
 6182 07b5 6873696F 		.ascii	"hsiomPtr\000"
 6182      6D507472 
 6182      00
 6183              	.LASF13:
 6184 07be 75696E74 		.ascii	"uint32\000"
 6184      333200
 6185              	.LASF105:
 6186 07c5 70747232 		.ascii	"ptr2FltrHistory\000"
 6186      466C7472 
 6186      48697374 
 6186      6F727900 
 6187              	.LASF123:
 6188 07d5 6761696E 		.ascii	"gainValue\000"
 6188      56616C75 
 6188      6500
 6189              	.LASF209:
 6190 07df 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 6190      656E7365 
 6190      5F637572 
 6190      536E7349 
 6190      4F507472 
 6191              	.LASF97:
 6192 07f4 6D61736B 		.ascii	"mask\000"
 6192      00
 6193              	.LASF157:
 6194 07f9 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 6194      656E7365 
 6194      5F537353 
 6194      6574436C 
 6194      6F636B44 
 6195              	.LASF121:
 6196 0815 43617053 		.ascii	"CapSense_OPERATION_MODE_ENUM\000"
 6196      656E7365 
 6196      5F4F5045 
 6196      52415449 
 6196      4F4E5F4D 
 6197              	.LASF225:
 6198 0832 43794465 		.ascii	"CyDelayUs\000"
 6198      6C617955 
 6198      7300
 6199              	.LASF25:
 6200 083c 70747253 		.ascii	"ptrSenseClk\000"
 6200      656E7365 
 6200      436C6B00 
 6201              	.LASF133:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 178


 6202 0848 77646774 		.ascii	"wdgtIndex\000"
 6202      496E6465 
 6202      7800
 6203              	.LASF173:
 6204 0852 736E7349 		.ascii	"snsIndex\000"
 6204      6E646578 
 6204      00
 6205              	.LASF47:
 6206 085b 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 6206      656E7365 
 6206      5F53454E 
 6206      53455F4D 
 6206      4554484F 
 6207              	.LASF115:
 6208 0877 6C6F6E67 		.ascii	"long double\000"
 6208      20646F75 
 6208      626C6500 
 6209              	.LASF27:
 6210 0883 736E7343 		.ascii	"snsClkConstantR\000"
 6210      6C6B436F 
 6210      6E737461 
 6210      6E745200 
 6211              	.LASF19:
 6212 0893 72656733 		.ascii	"reg32\000"
 6212      3200
 6213              	.LASF87:
 6214 0899 736E7254 		.ascii	"snrTestScanCounter\000"
 6214      65737453 
 6214      63616E43 
 6214      6F756E74 
 6214      657200
 6215              	.LASF33:
 6216 08ac 69446163 		.ascii	"iDacComp\000"
 6216      436F6D70 
 6216      00
 6217              	.LASF72:
 6218 08b5 636F6E66 		.ascii	"configId\000"
 6218      69674964 
 6218      00
 6219              	.LASF104:
 6220 08be 70747232 		.ascii	"ptr2SnsRam\000"
 6220      536E7352 
 6220      616D00
 6221              	.LASF193:
 6222 08c9 43617053 		.ascii	"CapSense_SsInitialize\000"
 6222      656E7365 
 6222      5F537349 
 6222      6E697469 
 6222      616C697A 
 6223              	.LASF80:
 6224 08df 736E7353 		.ascii	"snsStatus\000"
 6224      74617475 
 6224      7300
 6225              	.LASF59:
 6226 08e9 736E7343 		.ascii	"snsClkSource\000"
 6226      6C6B536F 
 6226      75726365 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 179


 6226      00
 6227              	.LASF223:
 6228 08f6 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 6228      656E7365 
 6228      5F537343 
 6228      5344456C 
 6228      65637472 
 6229              	.LASF152:
 6230 0913 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 6230      656E7365 
 6230      5F537349 
 6230      7372496E 
 6230      69746961 
 6231              	.LASF2:
 6232 092c 73686F72 		.ascii	"short int\000"
 6232      7420696E 
 6232      7400
 6233              	.LASF91:
 6234 0936 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 6234      656E7365 
 6234      5F52414D 
 6234      5F535452 
 6234      55435400 
 6235              	.LASF145:
 6236 094a 43617053 		.ascii	"CapSense_SsSetAllIOsState\000"
 6236      656E7365 
 6236      5F537353 
 6236      6574416C 
 6236      6C494F73 
 6237              	.LASF4:
 6238 0964 6C6F6E67 		.ascii	"long int\000"
 6238      20696E74 
 6238      00
 6239              	.LASF78:
 6240 096d 77646774 		.ascii	"wdgtEnable\000"
 6240      456E6162 
 6240      6C6500
 6241              	.LASF67:
 6242 0978 64696666 		.ascii	"diff\000"
 6242      00
 6243              	.LASF75:
 6244 097d 74756E65 		.ascii	"tunerCmd\000"
 6244      72436D64 
 6244      00
 6245              	.LASF45:
 6246 0986 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 6246      656E7365 
 6246      5F53454E 
 6246      53455F4D 
 6246      4554484F 
 6247              	.LASF95:
 6248 09a2 70735074 		.ascii	"psPtr\000"
 6248      7200
 6249              	.LASF129:
 6250 09a8 43617053 		.ascii	"CapSense_SetupWidget\000"
 6250      656E7365 
 6250      5F536574 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 180


 6250      75705769 
 6250      64676574 
 6251              	.LASF198:
 6252 09bd 636D6F64 		.ascii	"cmodDr\000"
 6252      447200
 6253              	.LASF197:
 6254 09c4 636D6F64 		.ascii	"cmodHsiom\000"
 6254      4873696F 
 6254      6D00
 6255              	.LASF219:
 6256 09ce 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 6256      656E7365 
 6256      5F435344 
 6256      43616C69 
 6256      62726174 
 6257              	.LASF122:
 6258 09ea 6761696E 		.ascii	"gainReg\000"
 6258      52656700 
 6259              	.LASF176:
 6260 09f2 6D696E53 		.ascii	"minSnsClkDivTmp\000"
 6260      6E73436C 
 6260      6B446976 
 6260      546D7000 
 6261              	.LASF201:
 6262 0a02 43617053 		.ascii	"CapSense_dsFlash\000"
 6262      656E7365 
 6262      5F647346 
 6262      6C617368 
 6262      00
 6263              	.LASF29:
 6264 0a13 66696E67 		.ascii	"fingerCap\000"
 6264      65724361 
 6264      7000
 6265              	.LASF214:
 6266 0a1d 43617053 		.ascii	"CapSense_CSDScanExt\000"
 6266      656E7365 
 6266      5F435344 
 6266      5363616E 
 6266      45787400 
 6267              	.LASF79:
 6268 0a31 77646774 		.ascii	"wdgtStatus\000"
 6268      53746174 
 6268      757300
 6269              	.LASF220:
 6270 0a3c 536D6172 		.ascii	"SmartSense_TunePrescalers\000"
 6270      7453656E 
 6270      73655F54 
 6270      756E6550 
 6270      72657363 
 6271              	.LASF227:
 6272 0a56 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 6272      72617465 
 6272      645F536F 
 6272      75726365 
 6272      5C50536F 
 6273              	.LASF217:
 6274 0a80 43617053 		.ascii	"CapSense_CSDConnectSns\000"
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 181


 6274      656E7365 
 6274      5F435344 
 6274      436F6E6E 
 6274      65637453 
 6275              	.LASF44:
 6276 0a97 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 6276      656E7365 
 6276      5F53454E 
 6276      53455F4D 
 6276      4554484F 
 6277              	.LASF207:
 6278 0ab3 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 6278      656E7365 
 6278      5F637572 
 6278      72656E74 
 6278      53656E73 
 6279              	.LASF166:
 6280 0acf 70727353 		.ascii	"prsSize\000"
 6280      697A6500 
 6281              	.LASF60:
 6282 0ad7 73697A65 		.ascii	"sizetype\000"
 6282      74797065 
 6282      00
 6283              	.LASF99:
 6284 0ae0 64725368 		.ascii	"drShift\000"
 6284      69667400 
 6285              	.LASF5:
 6286 0ae8 6C6F6E67 		.ascii	"long unsigned int\000"
 6286      20756E73 
 6286      69676E65 
 6286      6420696E 
 6286      7400
 6287              	.LASF162:
 6288 0afa 72657456 		.ascii	"retVal\000"
 6288      616C00
 6289              	.LASF28:
 6290 0b01 76526566 		.ascii	"vRef\000"
 6290      00
 6291              	.LASF56:
 6292 0b06 69646163 		.ascii	"idacMod\000"
 6292      4D6F6400 
 6293              	.LASF218:
 6294 0b0e 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 6294      656E7365 
 6294      5F495352 
 6294      5F537461 
 6294      72744578 
 6295              	.LASF106:
 6296 0b23 70747232 		.ascii	"ptr2DebounceArr\000"
 6296      4465626F 
 6296      756E6365 
 6296      41727200 
 6297              	.LASF126:
 6298 0b33 43617053 		.ascii	"CapSense_SsTrimIdacs\000"
 6298      656E7365 
 6298      5F537354 
 6298      72696D49 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 182


 6298      64616373 
 6299              	.LASF50:
 6300 0b48 66696E67 		.ascii	"fingerTh\000"
 6300      65725468 
 6300      00
 6301              	.LASF66:
 6302 0b51 62736C6E 		.ascii	"bslnExt\000"
 6302      45787400 
 6303              	.LASF124:
 6304 0b59 43617053 		.ascii	"CapSense_IDAC_GAIN_TABLE_STRUCT\000"
 6304      656E7365 
 6304      5F494441 
 6304      435F4741 
 6304      494E5F54 
 6305              	.LASF62:
 6306 0b79 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 6306      656E7365 
 6306      5F52414D 
 6306      5F57445F 
 6306      42555454 
 6307              	.LASF17:
 6308 0b97 63797374 		.ascii	"cystatus\000"
 6308      61747573 
 6308      00
 6309              	.LASF1:
 6310 0ba0 756E7369 		.ascii	"unsigned char\000"
 6310      676E6564 
 6310      20636861 
 6310      7200
 6311              	.LASF127:
 6312 0bae 7472696D 		.ascii	"trimValue\000"
 6312      56616C75 
 6312      6500
 6313              	.LASF180:
 6314 0bb8 6D617849 		.ascii	"maxIdacComp\000"
 6314      64616343 
 6314      6F6D7000 
 6315              	.LASF9:
 6316 0bc4 5F5F7569 		.ascii	"__uint32_t\000"
 6316      6E743332 
 6316      5F7400
 6317              	.LASF144:
 6318 0bcf 43617053 		.ascii	"CapSense_SetPinState\000"
 6318      656E7365 
 6318      5F536574 
 6318      50696E53 
 6318      74617465 
 6319              	.LASF107:
 6320 0be4 73746174 		.ascii	"staticConfig\000"
 6320      6963436F 
 6320      6E666967 
 6320      00
 6321              	.LASF23:
 6322 0bf1 73656E73 		.ascii	"sensorCap\000"
 6322      6F724361 
 6322      7000
 6323              	.LASF143:
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 183


 6324 0bfb 696F5074 		.ascii	"ioPtr\000"
 6324      7200
 6325              	.LASF90:
 6326 0c01 7363616E 		.ascii	"scanCurrentISC\000"
 6326      43757272 
 6326      656E7449 
 6326      534300
 6327              	.LASF103:
 6328 0c10 70747232 		.ascii	"ptr2WdgtRam\000"
 6328      57646774 
 6328      52616D00 
 6329              	.LASF21:
 6330 0c1c 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 6330      656E7365 
 6330      5F544852 
 6330      4553484F 
 6330      4C445F54 
 6331              	.LASF175:
 6332 0c34 6D696E53 		.ascii	"minSnsClkDiv\000"
 6332      6E73436C 
 6332      6B446976 
 6332      00
 6333              	.LASF212:
 6334 0c41 43617053 		.ascii	"CapSense_CSDScan\000"
 6334      656E7365 
 6334      5F435344 
 6334      5363616E 
 6334      00
 6335              	.LASF46:
 6336 0c52 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 6336      656E7365 
 6336      5F53454E 
 6336      53455F4D 
 6336      4554484F 
 6337              	.LASF139:
 6338 0c6f 73746174 		.ascii	"state\000"
 6338      6500
 6339              	.LASF141:
 6340 0c75 656C7464 		.ascii	"eltdIndex\000"
 6340      496E6465 
 6340      7800
 6341              	.LASF132:
 6342 0c7f 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 6342      656E7365 
 6342      5F536361 
 6342      6E416C6C 
 6342      57696467 
 6343              	.LASF96:
 6344 0c97 6873696F 		.ascii	"hsiomMask\000"
 6344      6D4D6173 
 6344      6B00
 6345              	.LASF58:
 6346 0ca1 736E7343 		.ascii	"snsClk\000"
 6346      6C6B00
 6347              	.LASF192:
 6348 0ca8 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 6348      656E7365 
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 184


 6348      5F537353 
 6348      77697463 
 6348      6853656E 
 6349              	.LASF215:
 6350 0cc5 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6350      74657243 
 6350      72697469 
 6350      63616C53 
 6350      65637469 
 6351              	.LASF206:
 6352 0cdc 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 6352      656E7365 
 6352      5F637572 
 6352      52616D53 
 6352      6E735074 
 6353              	.LASF0:
 6354 0cf2 7369676E 		.ascii	"signed char\000"
 6354      65642063 
 6354      68617200 
 6355              	.LASF208:
 6356 0cfe 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 6356      656E7365 
 6356      5F736361 
 6356      6E467265 
 6356      71496E64 
 6357              	.LASF65:
 6358 0d15 62736C6E 		.ascii	"bsln\000"
 6358      00
 6359              	.LASF3:
 6360 0d1a 73686F72 		.ascii	"short unsigned int\000"
 6360      7420756E 
 6360      7369676E 
 6360      65642069 
 6360      6E7400
 6361              	.LASF34:
 6362 0d2d 4155544F 		.ascii	"AUTO_TUNE_CONFIG_TYPE\000"
 6362      5F54554E 
 6362      455F434F 
 6362      4E464947 
 6362      5F545950 
 6363              	.LASF194:
 6364 0d43 696E6974 		.ascii	"initStatus\000"
 6364      53746174 
 6364      757300
 6365              	.LASF202:
 6366 0d4e 43617053 		.ascii	"CapSense_ioList\000"
 6366      656E7365 
 6366      5F696F4C 
 6366      69737400 
 6367              	.LASF230:
 6368 0d5e 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 6368      656E7365 
 6368      5F537350 
 6368      6F737441 
 6368      6C6C5769 
 6369              	.LASF102:
 6370 0d7c 70747232 		.ascii	"ptr2SnsFlash\000"
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 185


 6370      536E7346 
 6370      6C617368 
 6370      00
 6371              	.LASF178:
 6372 0d89 6D617852 		.ascii	"maxRaw\000"
 6372      617700
 6373              	.LASF11:
 6374 0d90 75696E74 		.ascii	"uint8\000"
 6374      3800
 6375              	.LASF15:
 6376 0d96 646F7562 		.ascii	"double\000"
 6376      6C6500
 6377              	.LASF68:
 6378 0d9d 6E656742 		.ascii	"negBslnRstCnt\000"
 6378      736C6E52 
 6378      7374436E 
 6378      7400
 6379              	.LASF35:
 6380 0dab 70617261 		.ascii	"param0\000"
 6380      6D3000
 6381              	.LASF36:
 6382 0db2 70617261 		.ascii	"param1\000"
 6382      6D3100
 6383              	.LASF37:
 6384 0db9 70617261 		.ascii	"param2\000"
 6384      6D3200
 6385              	.LASF38:
 6386 0dc0 70617261 		.ascii	"param3\000"
 6386      6D3300
 6387              	.LASF39:
 6388 0dc7 70617261 		.ascii	"param4\000"
 6388      6D3400
 6389              	.LASF40:
 6390 0dce 70617261 		.ascii	"param5\000"
 6390      6D3500
 6391              	.LASF41:
 6392 0dd5 70617261 		.ascii	"param6\000"
 6392      6D3600
 6393              	.LASF165:
 6394 0ddc 736E7343 		.ascii	"snsClkDivider\000"
 6394      6C6B4469 
 6394      76696465 
 6394      7200
 6395              	.LASF167:
 6396 0dea 6D6F6443 		.ascii	"modClkDivider\000"
 6396      6C6B4469 
 6396      76696465 
 6396      7200
 6397              	.LASF73:
 6398 0df8 64657669 		.ascii	"deviceId\000"
 6398      63654964 
 6398      00
 6399              	.LASF128:
 6400 0e01 77696467 		.ascii	"widgetStatus\000"
 6400      65745374 
 6400      61747573 
 6400      00
ARM GAS  C:\Users\Erik\AppData\Local\Temp\ccW7xr9r.s 			page 186


 6401              	.LASF119:
 6402 0e0e 43617053 		.ascii	"CapSense_BIST_CSX_SNS_CAP_E\000"
 6402      656E7365 
 6402      5F424953 
 6402      545F4353 
 6402      585F534E 
 6403              	.LASF135:
 6404 0e2a 77696467 		.ascii	"widgetId\000"
 6404      65744964 
 6404      00
 6405              	.LASF205:
 6406 0e33 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 6406      656E7365 
 6406      5F726571 
 6406      75657374 
 6406      5363616E 
 6407              	.LASF185:
 6408 0e51 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 6408      656E7365 
 6408      5F537349 
 6408      6E697469 
 6408      616C697A 
 6409              	.LASF210:
 6410 0e75 43617053 		.ascii	"CapSense_idacGainTable\000"
 6410      656E7365 
 6410      5F696461 
 6410      63476169 
 6410      6E546162 
 6411              	.LASF71:
 6412 0e8c 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 6412      656E7365 
 6412      5F52414D 
 6412      5F534E53 
 6412      5F4C4953 
 6413              	.LASF113:
 6414 0ea9 77646774 		.ascii	"wdgtArray\000"
 6414      41727261 
 6414      7900
 6415              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
